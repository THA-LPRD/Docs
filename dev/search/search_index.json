{"config":{"lang":["de"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Low Power Room Display","text":"<p> Abbildung 2.1.1: Das ist ein Bild </p> <p>In  ist folgendes zu sehen. </p>  Das ist eine Tabelle  heading 1 heading 2 content 1 content 2 content 3 content 4 <p>In  ist folgendes zu sehen. </p> <p>Hallo</p> <p>Project documentation for the Low Power Room Display (LPRD) project.</p>"},{"location":"Einleitung/","title":"Einleitung","text":"<p>Jannis Gr\u00f6ger</p>"},{"location":"Einleitung/#motivation","title":"Motivation","text":"<p>Ob es bei Meetingr\u00e4umen einer Firma, Klassenzimmern einer Schule, Seminarr\u00e4umen einer Tagungsst\u00e4tte oder Vorlesungss\u00e4len der Hochschule ist - anzuzeigen, ob dieser Raum belegt ist und was dort gerade stattfindet, ist eine Herausforderung f\u00fcr den Betreiber und die L\u00f6sung f\u00fcr Sch\u00fcler, Mitarbeiter oder Tagende nicht gerade benutzerfreundlich. Das Austauschen von Papieren, die die Raumbelegungsdaten anzeigt, bedeutet einen hohen Mehraufwand f\u00fcr Zust\u00e4ndige und einen nicht nachhaltigen Ressourcenverbrauch, w\u00e4hrend sich bei der Verwendung von digitalen L\u00f6sungen immer wieder die Frage nach der ben\u00f6tigten Infrastruktur zur Stromversorgung dieser Anzeigen stellt.</p> <p>Aus diesem Grund sind so genannte Low Power Raumanzeigen eine interessante Alternative zu oben genannten L\u00f6sungen, da sie durch Optimierung des Stromverbrauchs nicht nur sehr energieeffizient, sondern durch Darstellen der Informationen auf einem Display eine umweltschonende L\u00f6sung f\u00fcr das Problem bieten. Dar\u00fcber hinaus k\u00f6nnen solche Raumanzeigen meist \u00fcber eine zentrale Software verwaltet und gesteuert werden und besitzen neben den oben genannten Nutzungsm\u00f6glichkeiten ein breites Anwendungsspektrum.  </p>"},{"location":"Einleitung/#ziel-der-arbeit","title":"Ziel der Arbeit","text":"<p>Die vorliegende Projektarbeit besch\u00e4ftigt sich umfassend mit der Entwicklung eines energieeffizienten Raumdisplays, das dar\u00fcber hinaus als generische Informationsanzeige genutzt werden kann. Ziel dieser Arbeit ist es, detailliert aufzuzeigen, wie eine solche Anzeige von der Konzeptionsphase bis hin zur finalen Umsetzung realisiert werden kann. Dabei wird nicht nur auf die technischen und theoretischen Grundlagen eingegangen, sondern es werden auch die praktischen Vorgehensweisen der Entwicklung ausf\u00fchrlich beschrieben und f\u00fcr den Leser anschaulich dargestellt. Es wird erkl\u00e4rt, welche Technologien und Materialien verwendet werden, welche Herausforderungen w\u00e4hrend der Entwicklungsphase auftreten und wie diese gel\u00f6st werden k\u00f6nnen. Des Weiteren wird beleuchtet, wie das Display hinsichtlich seiner Energieeffizienz und Steuerung optimiert werden kann, um eine nachhaltige und einfache Nutzung zu gew\u00e4hrleisten. Dem Leser soll ein umfassendes Verst\u00e4ndnis \u00fcber den gesamten Entwicklungsprozess gegeben werden, sodass dieser in der Lage ist, \u00e4hnliche Projekte und Konzepte eigenst\u00e4ndig umzusetzen.</p>"},{"location":"Einleitung/#aufbau-der-arbeit","title":"Aufbau der Arbeit","text":"<p>Zu Beginn der Arbeit werden vorhandene Technologien der einzelnen Komponenten einer energieeffizienten Raumanzeige analysiert, um ein grundlegendes technisches Verst\u00e4ndnis \u00fcber die Funktionsweise dieser zu schaffen. Ebenso werden dem Leser m\u00f6gliche Softwareframeworks und Bibliotheken, n\u00e4her gebracht die zur Umsetzung eines solchen Projektes genutzt werden k\u00f6nnen. Im Anschluss werden bereits auf dem Markt vorhandene Produkte beleuchtet und der aktuelle Stand der Technik aufgezeigt. Desweiteren wird das Projektteam vorgestellt und die Organisation und Arbeitsweise intern kurz beschrieben.</p> <p>Im Hauptteil der Arbeit wird zun\u00e4chst das Systemkonzept zusammen mit den Anwendungsszenarien und Anforderungen an das Produkt vorgestellt. Anschlie\u00dfend wird die Entwicklung der Low Power Raum Anzeige erl\u00e4utert und anhand der vorher geschaffenen Grundlagen die Auswahl der verwendeten Komponenten erkl\u00e4rt. Hierbei spielen energiesparende Display-Technologien, sowie auch Optimierung des Stromverbrauchs und Minimierung des Datenaustauschs zwischen dem Displaymodul und Endger\u00e4t des Benutzers eine Rolle. Darauf folgend wird die Firmware der Raumanzeige tiefgehend analysiert und ihre Funktion dem Leser erl\u00e4utert. Ein besonderer Fokus liegt hierbei auf der Implementierung der Displayansteuerung, sowie der Optimierung des Energierverbrauchs durch optimales Hardwaremanagement. Im letzten Kapitel des Hauptteils wird auf die Webentwicklung des Projekts eingegangen. Diese umfasst die Gestaltung eines User Interfaces zur Steuerung des Displays vom Endger\u00e4t des Nutzers, aber auch eine serverseitige  Webanwendung zur Verwaltung und Steuerung mehrerer Displaymodule. Durch diese Ma\u00dfnahmen wird sichergestellt, dass das Low Power Raumdisplay nicht nur eine lange Akkulaufzeit aufweist, sondern auch eine einfache und benutzerfreundliche Bedienung zur Verf\u00fcgung stellt.  </p> <p>Zum Schluss der Arbeit werden die Ergebniss aus der Ausarbeitung und Entwicklung der Low Power Raumanzeige aufgezeigt und ein Fazit \u00fcber die Arbeit gezogen. Zus\u00e4tzlich wird ein Ausblick auf m\u00f6gliche Verbesserungen und Erweiterungen gegeben und auf bereits begonnene Implementierung dieser hingewiesen.</p>"},{"location":"Ergebnisse/","title":"Ergebnisse","text":""},{"location":"Ergebnisse/#versuchsbeschreibung","title":"Versuchsbeschreibung","text":""},{"location":"Ergebnisse/#messergebnisse","title":"Messergebnisse","text":""},{"location":"Ergebnisse/#interpretation","title":"Interpretation","text":""},{"location":"Fazit/","title":"Fazit","text":""},{"location":"Fazit/#zusammenfassung","title":"Zusammenfassung","text":""},{"location":"Fazit/#ausblick","title":"Ausblick","text":""},{"location":"Firmware/","title":"Firmware","text":""},{"location":"Firmware/#entwicklungsumgebung","title":"Entwicklungsumgebung","text":"<p>Ahmet Emirhan G\u00f6ktas</p> <p>PlatformIO wurde als Entwicklungsumgebung f\u00fcr die LPRD-Firmware ausgew\u00e4hlt. Da die Arduino IDE f\u00fcr die Komplexit\u00e4t des Projekts nicht geeignet ist, wird PlatformIO als fortschrittlichere Alternative verwendet.</p>"},{"location":"Firmware/#platformio-mit-visual-studio-code","title":"PlatformIO mit Visual Studio Code","text":"<p>Ahmet Emirhan G\u00f6ktas</p> <p>Wie im Abschnitt Grundlagen erw\u00e4hnt, kann PlatformIO mit verschiedenen IDEs verwendet werden. Die meisten unserer Teammitglieder nutzen Visual Studio Code als ihre IDE. Daher m\u00f6chten wir zeigen, wie man PlatformIO f\u00fcr Visual Studio Code einrichtet.</p>"},{"location":"Firmware/#installation","title":"Installation","text":"<p>Ahmet Emirhan G\u00f6ktas</p> <ol> <li>Installieren Sie Visual Studio Code.</li> <li>\u00d6ffnen Sie das Erweiterungspanel entweder \u00fcber die Seitenleiste oder durch Dr\u00fccken von Ctrl+Shift+X und geben Sie <code>PlatformIO IDE</code> ein.</li> <li>Klicken Sie auf die <code>Install</code>, um die PlatformIO IDE-Erweiterung zu installieren.</li> <li>Nachdem die Erweiterung installiert ist, k\u00f6nnen Sie die PlatformIO-Seitenleiste \u00f6ffnen, indem Sie auf das PlatformIO-Symbol in der Seitenleiste klicken. Dies kann einige Minuten dauern, da PlatformIO das Backend herunterl\u00e4dt und die Umgebung einrichtet. [AEG_06]</li> </ol> <p> Abbildung 8.1: PlatformIO-Erweiterung in Visual Studio </p>"},{"location":"Firmware/#projekt-erstellen","title":"Projekt erstellen","text":"<p>Ahmet Emirhan G\u00f6ktas</p> <ol> <li>\u00d6ffnen Sie die VS Code-Befehlszeile durch Dr\u00fccken von Ctrl+Shift+P und geben Sie <code>&gt;PlatformIO:PlatformIO Home</code> ein.</li> <li>Dr\u00fccken Sie <code>Enter</code>, um die PlatformIO-Startseite zu \u00f6ffnen.</li> <li>Klicken Sie auf der linken Seite der PlatformIO-Startseite auf die Registerkarte <code>Projects</code>.</li> <li>Klicken Sie auf die <code>New Project</code>.</li> <li>W\u00e4hlen Sie das Board, das Sie verwenden. In unserem Fall verwenden wir das Board <code>Seeed Studio XIAO ESP32S3</code>.</li> <li>W\u00e4hlen Sie das Framework. In unserem Fall verwenden wir das <code>Arduino</code>-Framework.</li> <li>Dr\u00fccken Sie abschlie\u00dfend die <code>Finish</code>, um das Projekt zu erstellen. [AEG_07]</li> </ol> <p> Abbildung 8.2: Neues PlatformIO-Projekt erstellen </p>"},{"location":"Firmware/#mikrocontroller-flashen","title":"Mikrocontroller flashen","text":"<p>Ahmet Emirhan G\u00f6ktas</p> <ol> <li>Verbinden Sie den Mikrocontroller mit Ihrem Computer.</li> <li>\u00d6ffnen Sie die PlatformIO-Seitenleiste, indem Sie auf das PlatformIO-Symbol in der Seitenleiste klicken.</li> <li>Klicken Sie auf die Projektumgebung im Abschnitt <code>Project Tasks</code>.</li> <li>Klicken Sie auf die <code>Upload</code> im Abschnitt <code>General</code>, um die Firmware auf den Mikrocontroller zu flashen.</li> <li>Die <code>Upload File System Image</code> Taste im Abschnitt <code>Platform</code> kann verwendet werden, um das Dateisystem-Image auf den Mikrocontroller hochzuladen.</li> </ol> <p> Abbildung 8.3: Firmware auf den Mikrocontroller hochladen </p>"},{"location":"Firmware/#versionskontrolle","title":"Versionskontrolle","text":"<p>Ahmet Emirhan G\u00f6ktas</p> <p>In diesem Projekt haben wir git als unser Versionskontrollsystem verwendet und dem Git-Flow-Modell gefolgt. Das Git-Flow-Modell ist ein von Vincent Driessen erstelltes Branching model f\u00fcr git. Es ist eine Reihe von Regeln, die verwendet werden, um die Verzweigungen in einem git-Repository zu verwalten. Die haupt Branches sind <code>master</code> und <code>dev</code>. Der <code>master</code>-Branch wird f\u00fcr produktionsbereiten Code verwendet, w\u00e4hrend der <code>dev</code>-Branch f\u00fcr Code verwendet wird, der sich in der Entwicklung befindet. Der <code>dev</code>-Branch wird abgezweigt, um Feature-Branches zu erstellen. Sobald das Feature abgeschlossen ist, wird der Feature-Branch wieder in den <code>dev</code>-Branch integriert. Wenn der Code im <code>dev</code>-Branch bereit f\u00fcr die Produktion ist, wird er in den <code>master</code>-Branch integriert. [AEG_08]</p>"},{"location":"Firmware/#anforderungen","title":"Anforderungen","text":"<p>Ahmet Emirhan G\u00f6ktas</p> <p>Wie bereits erw\u00e4hnt, muss das LPRD bestimmte Anforderungen erf\u00fcllen. Diese Anforderungen bilden die Grundlage f\u00fcr die Firmware-Entwicklung. Die folgenden Anforderungen ergeben sich aus den Hardwareanforderungen:</p>"},{"location":"Firmware/#drahtlose-kommunikation","title":"Drahtlose Kommunikation","text":"<p>Ahmet Emirhan G\u00f6ktas</p> <p>Das Ger\u00e4t soll drahtlos gesteuert werden, um eine einfache Installation und Konfiguration zu erm\u00f6glichen und die Steuerung des Ger\u00e4ts von einem zentralen Server aus zu erlauben. Es gibt zwei M\u00f6glichkeiten, dies zu erreichen:</p> <ul> <li>Verbindung mit einem bestehenden drahtlosen Netzwerk.</li> <li>Erstellung eines eigenen drahtlosen Netzwerks.</li> </ul>"},{"location":"Firmware/#dateisystem","title":"Dateisystem","text":"<p>Ahmet Emirhan G\u00f6ktas</p> <p>Das Displaymodul ben\u00f6tigt einen nichtfl\u00fcchtigen Speicher, um die angezeigten Bilder sowie die Konfigurationen wie Netzwerkeinstellungen und Betriebsmodi zu speichern. Der ESP32-S3-Mikrocontroller bietet 8 MB Flash-Speicher, der mit dem LittleFS-Dateisystem genutzt wird.</p>"},{"location":"Firmware/#konfiguration","title":"Konfiguration","text":"<p>Ahmet Emirhan G\u00f6ktas</p> <p>Das Displaymodul ist flexibel gestaltet und hat keine fest kodierte Konfiguration in der Firmware. Die Konfiguration kann vom Benutzer ge\u00e4ndert werden und umfasst:</p> <ul> <li>WLAN-Netzwerkkonfiguration (SSID, Passwort)</li> <li>E-Paper-Display-Konfiguration (Modell)</li> <li>Betriebsmodus (Standalone, Netzwerk, Server)</li> <li>Serverkonfiguration (URL)</li> <li>Log-Level (f\u00fcr Debugging)</li> <li>HTTP-Server-Konfiguration (HTTP, HTTPS)</li> <li>Authentifizierung (Benutzername, Passwort)</li> </ul>"},{"location":"Firmware/#betriebsmodi","title":"Betriebsmodi","text":"<p>Ahmet Emirhan G\u00f6ktas</p> <p>Das Displaymodul unterst\u00fctzt verschiedene Betriebsmodi:</p> <ul> <li>Standalone: Funktioniert ohne ein bestehendes WLAN-Netzwerk.</li> <li>Netzwerk: Funktioniert mit einem bestehenden WLAN-Netzwerk.</li> <li>Server: Wird von einem zentralen Server gesteuert.</li> <li>Default: Der Standardmodus bei der ersten Inbetriebnahme oder bei nicht behebbaren Fehlern. Dieser Modus entspricht dem Standalone-Modus mit fest kodierten Einstellungen.</li> </ul>"},{"location":"Firmware/#spi-schnittstelle","title":"SPI-Schnittstelle","text":"<p>Ahmet Emirhan G\u00f6ktas</p> <p>Das E-Paper-Display ist \u00fcber die SPI-Schnittstelle mit dem ESP32-S3-Mikrocontroller verbunden. Diese Schnittstelle wird zur Kommunikation und Anzeige von Bildern auf dem E-Paper-Display genutzt und muss entsprechend initialisiert und konfiguriert werden.</p>"},{"location":"Firmware/#niedriger-energieverbrauch","title":"Niedriger Energieverbrauch","text":"<p>Ahmet Emirhan G\u00f6ktas</p> <p>Die Akkulaufzeit ist ein wichtiger Faktor. Das Displaymodul muss in den Schlafmodus gehen k\u00f6nnen, wenn es nicht in Gebrauch ist, und bei Bedarf wieder aufwachen, um Energie zu sparen und die Akkulaufzeit zu verl\u00e4ngern.</p>"},{"location":"Firmware/#klassendiagramm","title":"Klassendiagramm","text":"<p>Ahmet Emirhan G\u00f6ktas</p> <p> Abbildung 8.4: Klassendiagramm der Application </p> <p> Abbildung 8.5: Klassendiagramm der Systemansteuerung </p> <p> Abbildung 8.6: Klassendiagramm der E-Paper-Display-Library </p>"},{"location":"Firmware/#application","title":"Application","text":"<p>Ahmet Emirhan G\u00f6ktas</p> <p>Die Applikation ist der Hauptteil der Firmware. Sie ist verantwortlich f\u00fcr die Konfiguration des Displaymoduls, die drahtlose Kommunikation, die Betriebsmodi und die SPI-Schnittstelle. Die Applikation ist in verschiedene Klassen unterteilt, die jeweils f\u00fcr unterschiedliche Teile der Applikation verantwortlich sind. Diese sind:</p> <ul> <li><code>Application</code>: Die Hauptklasse der Applikation. Sie ist eine Schnittstelle, die von den verschiedenen Betriebsmodi implementiert wird.</li> <li><code>AppStandalone</code>: Der Standalone-Betriebsmodus. Das Displaymodul funktioniert ohne ein bestehendes WLAN.</li> <li><code>AppNetwork</code>: Der Netzwerk-Betriebsmodus. Das Displaymodul funktioniert mit einem bestehenden WLAN.</li> <li><code>AppServer</code>: Der Server-Betriebsmodus. Das Displaymodul wird von einem zentralen Server gesteuert.</li> <li><code>AppDefault</code>: Der Standard-Betriebsmodus. Das Displaymodul befindet sich im Standardmodus, wenn es zum ersten Mal eingeschaltet wird oder wenn ein nicht behebbarer Fehler auftritt.</li> <li><code>Log</code>: Ein Namensraum, der f\u00fcr das Loggen von Nachrichten auf den seriellen Port verantwortlich ist.</li> <li><code>Config</code>: Ein Namensraum, der f\u00fcr die Konfiguration des Displaymoduls verantwortlich ist.</li> </ul>"},{"location":"Firmware/#ablauf-der-applikation","title":"Ablauf der Applikation","text":"<p>Ahmet Emirhan G\u00f6ktas</p> <p>Die <code>Application</code>-Klasse ist die Hauptklasse der Anwendung. Der grundlegende Ablauf der Anwendung ist wie folgt:</p> <ol> <li>Initialisierung des Dateisystems.</li> <li>Lesen der Konfiguration aus dem Dateisystem.</li> <li>Initialisierung des entsprechenden Modus.</li> <li>Ausf\u00fchren der Anwendung.</li> </ol>"},{"location":"Firmware/#betriebsmodi_1","title":"Betriebsmodi","text":""},{"location":"Firmware/#standardmodus","title":"Standardmodus","text":"<p>Ahmet Emirhan G\u00f6ktas</p> <p>In diesem Modus wird das WLAN im Access-Point-Modus initialisiert, um dem Benutzer die direkte Verbindung mit dem Ger\u00e4t zu erm\u00f6glichen. Nachdem das WLAN initialisiert ist, wird der HTTP-Server gestartet. Die Standardseite ist die Einstellungsseite, wobei keine Endpunkte f\u00fcr den Bild-Upload enthalten sind.</p> <p>Der Zweck dieses Modus besteht darin, dem Benutzer die Konfiguration des Ger\u00e4ts zu erm\u00f6glichen, unabh\u00e4ngig davon, ob etwas schiefgelaufen ist oder ein Werksreset durchgef\u00fchrt wurde.</p>"},{"location":"Firmware/#standalone-modus","title":"Standalone-Modus","text":"<p>Ahmet Emirhan G\u00f6ktas</p> <p>In diesem Modus arbeitet das Ger\u00e4t unabh\u00e4ngig von bestehenden Infrastrukturen. Es beginnt mit der Initialisierung des WLANs im Access-Point-Modus. Anschlie\u00dfend wird der HTTP-Server mit Endpunkten f\u00fcr alle Einstellungen sowie f\u00fcr den Bild-Upload initialisiert. Eine Callback-Funktion wird \u00fcbergeben, die aufgerufen wird, wenn ein Bild hochgeladen wird, sodass das Bild auf dem E-Paper-Display angezeigt werden kann. Schlie\u00dflich wird das E-Paper-Display initialisiert, um bereit zu sein, die Bilder anzuzeigen.</p> <p>Nachdem all diese Schritte erfolgreich abgeschlossen sind, ist das Ger\u00e4t einsatzbereit. Man verbindet sich mit dem WLAN-Netzwerk des Ger\u00e4ts und ruft die Weboberfl\u00e4che unter <code>http://192.168.4.1/index.html</code> auf. Das Ger\u00e4t bleibt wach, bis ein Bild hochgeladen wird. Nach dem Hochladen wird das Bild auf dem E-Paper-Display angezeigt und das Modul geht in den Tiefschlaf, um die Akkulaufzeit zu verl\u00e4ngern und den Stromverbrauch zu minimieren.</p>"},{"location":"Firmware/#netzwerkmodus","title":"Netzwerkmodus","text":"<p>Ahmet Emirhan G\u00f6ktas</p> <p>Dieser Modus bietet einfachen Zugriff auf das Ger\u00e4t, indem es sich mit einem bestehenden WLAN-Netzwerk verbindet. Das Ger\u00e4t stellt die Verbindung zum WLAN-Netzwerk her, indem es die in der Konfigurationsdatei gespeicherten Anmeldeinformationen verwendet. Nach der Herstellung der Verbindung wird der HTTP-Server genauso wie im Standalone-Modus initialisiert. Nachdem das Ger\u00e4t im Netzwerk gefunden wurde, kann es \u00fcber die IP-Adresse des Ger\u00e4ts \u00e4hnlich wie im Standalone-Modus aufgerufen werden.</p> <p>Wenn w\u00e4hrend der Initialisierung ein Fehler auftritt, wie z. B. falsche WLAN-Anmeldeinformationen, die dazu f\u00fchren, dass das Ger\u00e4t nicht mehr erreichbar ist, wechselt das Ger\u00e4t zur\u00fcck in den Standardmodus, um dem Benutzer die Neukonfiguration des Ger\u00e4ts zu erm\u00f6glichen. Andernfalls bleibt die Routine dieselbe wie im Standalone-Modus.</p>"},{"location":"Firmware/#servermodus","title":"Servermodus","text":"<p>Mario Wegmann</p> <p>In diesem Modus wird mit einem Webbrowser nicht direkt auf das Displaymodul selbst zugegriffen, stattdessen holt sich jedes Displaymodul die notwendigen Informationen von einem zentralen Linux Webserver ab. Beim Konfigurieren im Standard-Modus wird neben den Zugangsdaten vom bestehenden WLAN-Netzwerk auch eine Server-URL mit angegeben. Bei jedem Aufwecken aus dem Deep-sleep verbindet sich das Displaymodul dann mit dem bestehenden WLAN und versucht den Server \u00fcber HTTP(S) zu erreichen. Als Erstes wird \u00fcberpr\u00fcft, ob das Displaymodul dem Server bekannt ist, falls dies noch nicht der Fall ist, dann ruft das Displaymodul eine API-Route auf, um sich selbst als neues Display zu registrieren. Falls das Display bereits dem Server bekannt ist, wird die API-Route aufgerufen, um eine neue Darstellungs-Konfiguration anzufragen. In dieser Konfiguration meldet der Server dem Displaymodul, unter welcher URL das Displaymodul das aktuelle Asset heruntergeladen werden kann und wie lange dieses Asset angezeigt werden soll. Nach der erfolgreichen Kommunikation mit dem Server setzt das Displaymodul einen Wakeup Timer auf die Dauer der \u00fcbergebenen Anzeigedauer und geht in den Deep-sleep Modus. </p>"},{"location":"Firmware/#konfiguration_1","title":"Konfiguration","text":"<p>Ahmet Emirhan G\u00f6ktas</p> <p>Der <code>Config</code>-Namensraum ist f\u00fcr die Konfiguration des Moduls verantwortlich. Die Konfiguration wird in einer JSON-Datei im Dateisystem gespeichert. Beim Booten wird die <code>Load</code>-Methode verwendet, um die Konfiguration aus dem Dateisystem zu laden, sodass die Konfiguration direkt aus dem RAM verf\u00fcgbar ist. Die <code>Save</code>-Methode kann dann verwendet werden, um die Konfiguration zur\u00fcck in das Dateisystem zu speichern. Dabei verwenden wir die ArduinoJson-Bibliothek, um die JSON-Datei zu lesen und zu schreiben.</p>"},{"location":"Firmware/#logging","title":"Logging","text":"<p>Ahmet Emirhan G\u00f6ktas</p> <p>Der <code>Log</code>-Namensraum ist f\u00fcr das Loggen von Nachrichten auf den seriellen Port verantwortlich. Das Log-Level kann in der Konfigurationsdatei festgelegt werden. Die Protokollstufe kann auf <code>TRACE</code>, <code>DEBUG</code>, <code>INFO</code>, <code>WARN</code>, <code>ERROR</code> oder <code>FATAL</code> eingestellt werden. Das Log-Level wird \u00fcber die Konfigurationsdatei festgelegt und die Nachrichten werden nur geloggt, wenn die Protokollstufe auf eine Stufe eingestellt ist, die gleich oder h\u00f6her ist als die Stufe der Nachricht.</p>"},{"location":"Firmware/#http-server","title":"HTTP-Server","text":"<p>Ahmet Emirhan G\u00f6ktas</p> <p>The HTTP-Server is responsible for handling incoming HTTP requests. It is implemented using the <code>PsychicHttp</code> library, a lightweight and easy-to-use HTTP server library for the ESP32. We utilize the following features from the library:</p> <ul> <li>Handling HTTP requests such as GET and POST with file upload support</li> <li>Basic authentication</li> <li>HTTPS support [AEG_09]</li> </ul>"},{"location":"Firmware/#http-requests","title":"HTTP Requests","text":"<p>Ahmet Emirhan G\u00f6ktas</p> <p>Der HTTP-Server ist daf\u00fcr verantwortlich, eingehende HTTP-Anfragen zu bearbeiten. Er wird mit der <code>PsychicHttp</code>-Bibliothek implementiert, einer leichtgewichtigen und einfach zu verwendenden HTTP-Server-Bibliothek f\u00fcr den ESP32. Wir nutzen die folgenden Funktionen der Bibliothek:</p> <ul> <li>Bearbeitung von HTTP-Anfragen wie GET und POST mit Unterst\u00fctzung f\u00fcr Dateiupload</li> <li>Basis-Authentifizierung</li> <li>HTTPS-Unterst\u00fctzung</li> </ul>"},{"location":"Firmware/#http-anfragen","title":"HTTP-Anfragen","text":"<p>Ahmet Emirhan G\u00f6ktas</p> <p>HTTP definiert Methoden, um die gew\u00fcnschte Aktion an einer gegebenen Ressource anzugeben. Die Methodennamen sind gro\u00df- und kleinschreibungssensitiv und m\u00fcssen in Gro\u00dfbuchstaben geschrieben werden, im Gegensatz zu Header-Namen. Diese Methoden k\u00f6nnen wie folgt kategorisiert werden:</p> <ul> <li>Sicher: Methoden, die nichts auf dem Server \u00e4ndern.</li> <li>Idempotent: Methoden, die mehrfach mit dem gleichen Ergebnis aufgerufen werden k\u00f6nnen.</li> <li>Cachef\u00e4hig: Methoden, deren Antworten gespeichert und sp\u00e4ter wiederverwendet werden k\u00f6nnen.</li> </ul> <p>[AEG_10] [AEG_11]</p>"},{"location":"Firmware/#get-anfrage","title":"GET-Anfrage","text":"<p>Ahmet Emirhan G\u00f6ktas</p> <p>Die GET-Methode fordert eine Darstellung der angegebenen Ressource an. Anfragen mit GET sollten nur Daten abrufen und keine anderen Auswirkungen auf die Daten haben. Zum Beispiel sendet der Browser eine GET-Anfrage an den Server, um die HTML-Datei der Website abzurufen, wenn eine Website aufgerufen wird.</p> <p>Die Anfrage unten ist eine einfache GET-Anfrage, um die <code>index.html</code>-Datei vom Server abzurufen. Dies sollte die Hauptseite der Website zur\u00fcckgeben.</p> <pre><code>GET /index.html HTTP/1.1\nHost: 192.168.4.1\n</code></pre> <p>Ein weiteres Beispiel f\u00fcr eine GET-Anfrage ist unten gezeigt, bei dem die aktuelle Konfiguration des Ger\u00e4ts angefordert wird. Dies sollte den Betriebsmodus des Ger\u00e4ts (z.B. <code>Standalone</code>, <code>Netzwerk</code> oder <code>Server</code>) im Klartext zur\u00fcckgeben.</p> <p></p><pre><code>GET /api/v1/GetOpMode HTTP/1.1\nHost: 192.168.4.1\n</code></pre> [AEG_12] <p>Derzeit hat der Server folgende Endpunkte:</p> GET         <code>/api/v1/GetDisplayModule</code> <p>Gibt das angeschlossene E-Paper-Display-Modell zur\u00fcck.</p> <p>M\u00f6gliche R\u00fcckgabewerte:</p> <ul> <li><code>WS_7IN3G</code></li> <li><code>WS_9IN7</code></li> </ul> GET <code>/api/v1/GetOpMode</code> <p>Gibt den aktuellen Betriebsmodus des Ger\u00e4ts zur\u00fcck.</p> <p>M\u00f6gliche R\u00fcckgabewerte:</p> <ul> <li><code>Standalone</code></li> <li><code>Network</code></li> <li><code>Server</code></li> </ul> GET <code>/api/v1/GetDisplayWidth</code> <p>Gibt die Breite des angeschlossenen E-Paper-Displays in Pixel zur\u00fcck.</p> <p>M\u00f6gliche R\u00fcckgabewerte:</p> <ul> <li><code>Positive integer</code></li> </ul> GET <code>/api/v1/GetDisplayHeight</code> <p>Gibt die H\u00f6he des angeschlossenen E-Paper-Displays in Pixel zur\u00fcck.</p> <p>M\u00f6gliche R\u00fcckgabewerte:</p> <ul> <li><code>Positive integer</code></li> </ul> GET <code>/api/v1/GetLogLevel</code> <p>Gibt das aktuelle Log-Level des Ger\u00e4ts zur\u00fcck.</p> <p>M\u00f6gliche R\u00fcckgabewerte:</p> <ul> <li><code>Trace</code></li> <li><code>Debug</code></li> <li><code>Info</code></li> <li><code>Warn</code></li> <li><code>Error</code></li> <li><code>Fatal</code></li> </ul> GET <code>/api/v1/GetHTTPS</code> <p>Gibt zur\u00fcck, ob das Ger\u00e4t HTTPS verwendet.</p> <p>M\u00f6gliche R\u00fcckgabewerte:</p> <ul> <li><code>true</code></li> <li><code>false</code></li> </ul> <p>Und diese Dateien sind derzeit auf dem Server verf\u00fcgbar:</p> GET         <code>/index.html</code> <p>Gibt die Hauptseite der Website zur\u00fcck.</p> GET         <code>/settings.html</code> <p>Gibt die Einstellungsseite der Website zur\u00fcck.</p> GET         <code>/utils.js</code> <p>Gibt die Hilfs-JavaScript-Datei zur\u00fcck.</p> GET         <code>/LPRD-Logo.webp</code> <p>Gibt das LPRD-Logo-Bild zur\u00fcck.</p> <p>`</p> GET         <code>/html2canvas.min.js</code> <p>Gibt die html2canvas-Bibliothek zur\u00fcck.</p> GET         <code>/icons88-settings-25-w.png</code> <p>Gibt das Einstellungs-Icon-Bild zur\u00fcck.</p> GET         <code>/script.js</code> <p>Gibt die Haupt-JavaScript-Datei zur\u00fcck.</p> GET          <code>/style.css</code> <p>Gibt die Haupt-CSS-Datei zur\u00fcck.</p> GET          <code>/layouts/various_templates</code> <p>Gibt die Seite mit verschiedenen Vorlagen der Website zur\u00fcck.</p> <p>Hinweis: Dieses Verzeichnis enth\u00e4lt mehrere HTML-Vorlagen, die zum Generieren von Bildern verwendet werden, nicht zum direkten Seitenserver.</p>"},{"location":"Firmware/#post-request","title":"POST Request","text":"<p>Ahmet Emirhan G\u00f6ktas</p> <p>Die POST-Methode wird verwendet, um eine Entit\u00e4t an die angegebene Ressource zu \u00fcbermitteln, was oft eine \u00c4nderung des Zustands des Servers zur Folge hat. Zum Beispiel, wenn ein Benutzer ein Formular auf einer Website absendet, sendet der Browser eine POST-Anfrage mit den Formulardaten an den Server. Der Typ der Anfrage wird durch den <code>Content-Type</code>-Header definiert.</p> <p>Die untenstehende Anfrage ist eine einfache POST-Anfrage, um den Betriebsmodus des Ger\u00e4ts festzulegen. Der Anfrage-Body sollte den neuen Betriebsmodus des Ger\u00e4ts enthalten (z.B. <code>Standalone</code>, <code>Network</code> oder <code>Server</code>). Der Server sollte mit einer Erfolgsmeldung oder einer Fehlermeldung antworten, wenn der angegebene Modus ung\u00fcltig ist.</p> <p></p><pre><code>POST /api/v1/SetOpMode HTTP/1.1\nHost: 192.168.4.1\nContent-Type: application/x-www-form-urlencoded\nContent-Length: 16\n\nmode=Standalone\n</code></pre> [AEG_13] <p>Derzeit hat der Server folgende Endpunkte:</p> POST         <code>/api/v1/SetOpMode</code> <p>Legt den Betriebsmodus des Ger\u00e4ts fest.</p> <p>Anfrage-Body:</p> <ul> <li><code>mode</code> - Der neue Betriebsmodus des Ger\u00e4ts.</li> </ul> <p>M\u00f6gliche Werte:</p> <ul> <li><code>Standalone</code></li> <li><code>Network</code></li> <li><code>Server</code></li> </ul> POST         <code>/api/v1/SetWiFiCred</code> <p>Legt die WLAN-Zugangsdaten des Ger\u00e4ts fest.</p> <p>Anfrage-Body:</p> <ul> <li><code>ssid</code> - Die SSID des WLAN-Netzwerks.</li> <li><code>password</code> - Das Passwort des WLAN-Netzwerks.</li> </ul> POST         <code>/api/v1/SetServerURL</code> <p>Legt die Server-URL des Ger\u00e4ts fest.</p> <p>Anfrage-Body:</p> <ul> <li><code>url</code> - Die URL des Servers.</li> </ul> POST         <code>/api/v1/SetDisplayModule</code> <p>Legt das angeschlossene E-Paper-Display-Modell des Ger\u00e4ts fest.</p> <p>Anfrage-Body:</p> <ul> <li><code>model</code> - Das Modell des E-Paper-Displays.</li> </ul> <p>M\u00f6gliche Werte:</p> <ul> <li><code>WS_7IN3G</code></li> <li><code>WS_9IN7</code></li> </ul> POST         <code>/api/v1/restart</code> <p>Startet das Ger\u00e4t neu.</p> POST         <code>/api/v1/SetLogLevel</code> <p>Legt das Log-Level des Ger\u00e4ts fest.</p> <p>Anfrage-Body:</p> <ul> <li><code>level</code> - Das Log-Level des Ger\u00e4ts.</li> </ul> <p>M\u00f6gliche Werte:</p> <ul> <li><code>Trace</code></li> <li><code>Debug</code></li> <li><code>Info</code></li> <li><code>Warn</code></li> <li><code>Error</code></li> <li><code>Fatal</code></li> </ul> POST         <code>/api/v1/SetHTTPAuth</code> <p>Legt die HTTP-Authentifizierung des Ger\u00e4ts fest.</p> <p>Anfrage-Body:</p> <ul> <li><code>username</code> - Der Benutzername f\u00fcr die HTTP-Authentifizierung.</li> <li><code>password</code> - Das Passwort f\u00fcr die HTTP-Authentifizierung.</li> </ul> POST         <code>/api/v1/SetHTTPS</code> <p>Legt fest, ob das Ger\u00e4t HTTPS verwendet oder nicht.</p> <p>Anfrage-Body:</p> <ul> <li><code>https</code> - Ob das Ger\u00e4t HTTPS verwendet oder nicht.</li> </ul> <p>M\u00f6gliche Werte:</p> <ul> <li><code>true</code></li> <li><code>false</code></li> </ul> POST         <code>/api/v1/mkdir</code> <p>Erstellt ein neues Verzeichnis im Dateisystem.</p> <p>Anfrage-Body:</p> <ul> <li><code>path</code> - Der Pfad des neuen Verzeichnisses.</li> </ul> <p>Hinweis: Dieser Endpunkt dient nur zu Debugging-Zwecken und ist nicht in der finalen Version enthalten.</p> POST         <code>/api/v1/ls</code> <p>Listet die Dateien im angegebenen Verzeichnis auf.</p> <p>Anfrage-Body:</p> <ul> <li><code>path</code> - Der Pfad des Verzeichnisses.</li> </ul> <p>Hinweis: Dieser Endpunkt dient nur zu Debugging-Zwecken und ist nicht in der finalen Version enthalten.</p> POST         <code>/api/v1/rm</code> <p>Entfernt die angegebene Datei aus dem Dateisystem.</p> <p>Anfrage-Body:</p> <ul> <li><code>path</code> - Der Pfad der zu entfernenden Datei.</li> </ul> <p>Hinweis: Dieser Endpunkt dient nur zu Debugging-Zwecken und ist nicht in der finalen Version enthalten.</p>"},{"location":"Firmware/#file-upload","title":"File Upload","text":"<p>Ahmet Emirhan G\u00f6ktas</p> <p>Datei-Uploads werden typischerweise mit der POST Methode behandelt. F\u00fcr eine Datei-Upload-Anfrage muss der <code>Content-Type</code> Header auf <code>multipart/form-data</code> gesetzt sein und der Body entsprechend formatiert werden.</p> <p><code>Multipart/form-data</code> ist ein Medientyp, der das Senden mehrere verschiedene Inhaltsteile in einer einzigen HTTP-Anfrage erm\u00f6glicht. Jeder Teil wird durch eine einzigartige Begrenzungszeichenfolge getrennt und besteht aus einem Header und einem Body. Dieses Format erm\u00f6glicht die gleichzeitige \u00dcbertragung von Dateien und anderen Daten.</p> <p>Die Begrenzungszeichenfolge ist ein einzigartiger Trennstrich, der verwendet wird, um jeden Teil des multipart-Inhalts zu trennen. Der Server analysiert den Body der Anfrage und behandelt jeden Teil einzeln. Dies stellt sicher, dass Dateien, auch gro\u00dfe, hochgeladen werden k\u00f6nnen, ohne typische Gr\u00f6\u00dfenbeschr\u00e4nkungen f\u00fcr einzelne HTTP-Anfragen zu \u00fcberschreiten.</p> <p>Nachfolgend ist ein Beispiel f\u00fcr eine POST-Anfrage zum Hochladen einer Datei, die \"Hello, World!\" enth\u00e4lt, an den Server. Der Server sollte mit einer Erfolgsmeldung antworten, wenn die Datei erfolgreich gespeichert wird, oder mit einer Fehlermeldung, wenn dies fehlschl\u00e4gt.</p> <p></p><pre><code>POST /upload HTTP/1.1\nHost: example.com\nContent-Type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW\nContent-Length: 210\n\n------WebKitFormBoundary7MA4YWxkTrZu0gW\nContent-Disposition: form-data; name=\"file\"; filename=\"example.txt\"\nContent-Type: text/plain\n\nHello World!\n------WebKitFormBoundary7MA4YWxkTrZu0gW--\n</code></pre> [AEG_14] [AEG_15] [AEG_16] <p>Der Server hat derzeit folgende Endpunkte:</p> POST         <code>/api/v1/UploadImg</code> <p>L\u00e4dt eine Bilddatei auf den Server hoch.</p> <p>Anfrage-Body:</p> <ul> <li><code>file</code> - Die hochzuladende Bilddatei.</li> </ul> POST         <code>/api/v1/UploadHTTPSKey</code> <p>L\u00e4dt die HTTPS-Schl\u00fcsseldatei auf den Server hoch.</p> <p>Anfrage-Body:</p> <ul> <li><code>file</code> - Die hochzuladende HTTPS-Schl\u00fcsseldatei.</li> </ul> POST         <code>/api/v1/UploadHTTPSCert</code> <p>L\u00e4dt die HTTPS-Zertifikatsdatei auf den Server hoch.</p> <p>Anfrage-Body:</p> <ul> <li><code>file</code> - Die hochzuladende HTTPS-Zertifikatsdatei.</li> </ul>"},{"location":"Firmware/#basic-authentication","title":"Basic Authentication","text":"<p>Ahmet Emirhan G\u00f6ktas</p> <p>HTTP Basic Authentication ist ein einfaches Authentifizierungsschema, das im HTTP-Protokoll integriert ist. Der Client sendet HTTP-Anfragen mit einem Authorization-Header, der das Wort <code>Basic</code> gefolgt von einem Leerzeichen und einer base64-codierten Zeichenkette <code>username:password</code> enth\u00e4lt. Der Server decodiert die base64-Zeichenkette und extrahiert den Benutzernamen und das Passwort zur Authentifizierung. Dann \u00fcberpr\u00fcft der Server die Anmeldeinformationen in seiner Datenbank und antwortet mit einem <code>401 Unauthorized</code>-Statuscode, wenn die Anmeldeinformationen ung\u00fcltig sind. Das untenstehende Beispiel zeigt eine Anfrage mit grundlegender Authentifizierung.</p> <p></p><pre><code>GET /api/v1/GetDisplayModule HTTP/1.1\nHost: 192.168.4.1\nAuthorization: Basic YWRtaW46YWRtaW4K=\n</code></pre> [AEG_17] <p>Alle oben aufgef\u00fchrten Endpunkte sind mit Basic Authentication gesch\u00fctzt. Der Standardbenutzername und das Standardpasswort sind jeweils <code>admin</code>.</p>"},{"location":"Firmware/#https-unterstutzung","title":"HTTPS Unterst\u00fctzung","text":"<p>Ahmet Emirhan G\u00f6ktas</p> <p>HTTPS ist eine Erweiterung von HTTP, um es sicherer zu machen, indem die zwischen dem Client und dem Server ausgetauschten Daten verschl\u00fcsselt werden. HTTPS verwendet SSL/TLS zur Verschl\u00fcsselung der Daten, was das Abh\u00f6ren und Manipulieren der Daten verhindert. Die Unterst\u00fctzung von HTTPS kann einfach aktiviert werden, indem dem Server die Zertifikats- und Schl\u00fcsseldateien zur Verf\u00fcgung gestellt werden. Der Server verwendet diese Dateien dann, um nach einem Neustart eine sichere Verbindung mit dem Client herzustellen. [AEG_18]</p>"},{"location":"Firmware/#systemansteuerung","title":"Systemansteuerung","text":"<p>Ahmet Emirhan G\u00f6ktas</p> <p>Um das Ger\u00e4t einfach steuern zu k\u00f6nnen, haben wir den MCU-Namespace implementiert. Er bietet uns Methoden zum Neustarten des ESP, zum Versetzen in den Schlafmodus oder zum Einrichten des SPI-Busses.</p>"},{"location":"Firmware/#allgemeine-steuerung-und-gpio","title":"Allgemeine Steuerung und GPIO","text":"<p>Ahmet Emirhan G\u00f6ktas</p> <p>Es gibt verschiedene General Purpose Input/Output (GPIO)-Pins auf dem ESP32, die zur Steuerung externer Ger\u00e4te verwendet werden k\u00f6nnen. Diese Pins k\u00f6nnen als Eing\u00e4nge oder Ausg\u00e4nge konfiguriert werden und k\u00f6nnen verwendet werden, um digitale Signale zu lesen oder zu schreiben, um externe Ger\u00e4te zu steuern. Insgesamt stehen 48 GPIO-Pins auf dem ESP32S3 zur Verf\u00fcgung. Es wird jedoch generell nicht empfohlen, alle zu verwenden, da einige f\u00fcr andere interne Funktionen wie Flash, RAM usw. ben\u00f6tigt werden. Es gibt auch RTC-GPIO-Pins, die verwendet werden k\u00f6nnen, um den ESP32 aus dem Tiefschlaf zu wecken.</p> <p>Zum Beispiel konfigurieren wir den GPIO-Pin 2 zu Beginn des Programms als Eingang, um zu \u00fcberpr\u00fcfen, ob ein Werksreset angefordert wird oder nicht. Sp\u00e4ter konfigurieren wir den Pin jedoch, um den ESP32 aus dem Tiefschlaf zu wecken.</p> <p>Ein weiteres Beispiel ist der GPIO 43, der zur Steuerung der Stromversorgung des E-Paper-Displays verwendet wird. Wir konfigurieren den Pin als Ausgang und schreiben ein hohes Signal auf den Pin, um das Display einzuschalten.</p> <p>Es gibt auch praktische Methoden wie Neustart, Tiefschlafmodus und Einstellen eines Weckers. Es gibt auch eine Verz\u00f6gerungsmethode, die es uns erm\u00f6glicht, die Ausf\u00fchrung des Programms zu pausieren, ohne den Watchdog-Timer auszul\u00f6sen.</p> <p>[AEG_19]</p>"},{"location":"Firmware/#spi","title":"SPI","text":"<p>Ahmet Emirhan G\u00f6ktas</p> <p>Das Serial Peripheral Interface (SPI) ist eine synchrone serielle Kommunikationsschnittstelle, die es Ger\u00e4ten erm\u00f6glicht, miteinander zu kommunizieren. Es wird h\u00e4ufig verwendet, um Mikrocontroller mit Peripherieger\u00e4ten wie Sensoren, Displays und Speicherger\u00e4ten zu verbinden. Es besteht aus vier Signalen: MOSI (Master Out Slave In), MISO (Master In Slave Out), SCK (Serial Clock) und CS (Chip Select). Die Steuerung des SPI-Busses ist etwas m\u00fchsam, daher haben wir eine eigene Wrapper-Bibliothek um den esp-idf-SPI-Treiber erstellt. [AEG_21]</p> <p>Zum Beispiel ist das E-Paper-Display \u00fcber den SPI-Bus mit dem ESP32 verbunden. Wir verwenden den SPI-Bus, um Befehle und Daten an das Display zu senden, um den Bildschirm zu aktualisieren. Nachdem die Pins 9 f\u00fcr MOSI, 3 f\u00fcr MISO, 7 f\u00fcr SCK und 4 f\u00fcr CS an den SPI-Treiber \u00fcbergeben wurden, k\u00f6nnen wir Daten einfach an das Display senden, ohne uns um die low-level Details k\u00fcmmern zu m\u00fcssen. [AEG_20]</p>"},{"location":"Firmware/#e-paper-display-api","title":"E-Paper Display API","text":"<p>Ahmet Emirhan G\u00f6ktas</p> <p>Die E-Paper Display API ist verantwortlich f\u00fcr die Steuerung des E-Paper-Displays. Die API stellt Methoden zur Initialisierung des Displays und zur Aktualisierung des Displays mit neuen Bildern bereit. Sie abstrahiert die low-level Details des Displays und bietet eine einfache Schnittstelle zur Interaktion mit dem zugrundeliegenden Treiber. Jedes Displaymodell ben\u00f6tigt seinen eigenen Treiber. Derzeit haben wir Treiber f\u00fcr die Waveshare 7,3 Zoll (G) und 9,7 Zoll Displays. [AEG_22] [AEG_23]</p>"},{"location":"Firmware/#framebuffer","title":"Framebuffer","text":"<p>Ahmet Emirhan G\u00f6ktas</p> <p>Der Framebuffer ist ein Speicherpuffer, der direkt aus dem PSRAM des ESP32S3 zugewiesen wird. Der Framebuffer wird verwendet, um die Bilddaten an das Display zu senden. Er speichert die gegebenen Daten bereit zur \u00dcbertragung an das Display, w\u00e4hrend er seinen Speicherbedarf so klein wie m\u00f6glich h\u00e4lt. Zum Beispiel unterst\u00fctzt das 7,3 Zoll Display 4 Farben, daher ben\u00f6tigt es nur 2 Bits pro Pixel, wie auch das Display die Daten erwartet. Wenn wir also die ersten vier Pixel auf Schwarz setzen wollen, sollten die Daten <code>0000 0000</code> im Bin\u00e4rformat sein, wobei jedes 2 Bits einen Pixel darstellen. Die Anzahl der Bits pro Pixel kann beim Initialisieren des Framebuffers \u00fcbergeben werden, der diese dann zur Kompression der Daten so weit wie m\u00f6glich nutzt, um Speicher zu sparen, w\u00e4hrend dennoch ein einfacher Zugriff auf jeden Pixel m\u00f6glich bleibt. Die Kompression f\u00fcr das 7,3 Zoll Display betr\u00e4gt 2 Bits pro Pixel und ergibt eine Speicherersparnis von 75 % im Vergleich zu 8 Bits pro Pixel. Anstatt also 375 KB (480 \u00d7 800 / 1024) zuzuweisen, ben\u00f6tigen wir nur 93,75 KB (480 \u00d7 800 / 1024 / 4).</p>"},{"location":"Firmware/#imagedata","title":"ImageData","text":"<p>Ahmet Emirhan G\u00f6ktas</p> <p>Die ImageData Struktur wird verwendet, um die Bilddaten zu speichern, die auf dem E-Paper Display angezeigt werden sollen. Da wir begrenzte Mengen an RAM im ESP haben, erwartet die Struktur, dass Bilder in einer Datei im Dateisystem gespeichert werden. Das unterst\u00fctzte Bildformat ist PNG, welches bereits Informationen wie Breite, H\u00f6he und Farbtiefe enth\u00e4lt. Die Struktur wird vom Treiber gesteuert. Nachdem sie generiert wurde, k\u00f6nnen wir sie beim Treiber registrieren und ein Handle zur sp\u00e4teren Verwendung erhalten. Der Treiber k\u00fcmmert sich dann um den Rest.</p> <p>Sp\u00e4ter k\u00f6nnen wir die Draw-Methode mit den gew\u00fcnschten x- und y-Offsets aufrufen, um das Bild auf den Framebuffer zu zeichnen, das dann auf dem Bildschirm angezeigt wird. Der Treiber \u00fcbergibt intern dem Bilddecoder die Farbpalette und den Framebuffer zum Zeichnen des Bildes. Der Bilddecoder verwendet die PNGdec Bibliothek zum Dekodieren des Bildes und erh\u00e4lt die Pixeldaten. Diese Daten werden dann in tats\u00e4chlich darstellbare Farben umgewandelt, indem die n\u00e4chstgelegene Farbe aus der Farbpalette ermittelt wird. [AEG_24] [AEG_25]</p>"},{"location":"Firmware/#colorpalette","title":"Colorpalette","text":"<p>Ahmet Emirhan G\u00f6ktas</p> <p>Dies ist eine Struktur, die wir verwenden k\u00f6nnen, um die Farben zu definieren, die wir haben m\u00f6chten. Es kann sp\u00e4ter ein 16-Bit-Farbwert (RGB565) \u00fcbergeben werden, um die n\u00e4chstgelegene Farbe aus der Palette zu erhalten. Es verwendet den quadrierten euklidischen Abstand, um die n\u00e4chstgelegene Farbe zu finden. Der euklidische Abstand ist die Quadratwurzel der Summe der quadrierten Differenzen zwischen den beiden Farben. Der quadrierte Abstand wird verwendet, um die Quadratwurzeloperation zu vermeiden, die rechnerisch aufw\u00e4ndig ist. Nach Berechnung jedes Abstands wird die Farbe mit dem kleinsten Abstand im Cache gespeichert, um sp\u00e4ter verwendet zu werden, und der Index der Farbe in der Palette wird zur\u00fcckgegeben. Wenn wir zum Beispiel eine Palette mit 4 Farben haben: schwarz (0, 0, 0), wei\u00df (255, 255, 255), rot (255, 0, 0) und gelb (255, 255, 0) und wir \u00fcbergeben die Farbe (204, 0, 70) an die Palette, wird der Abstand zwischen jeder Farbe wie folgt berechnet:</p> <p> </p> <p> </p> <p> </p> <p> </p> <p> </p> <p>Aus diesen Berechnungen ergibt sich, dass die Farbe (204, 0, 70) der Farbe Rot in der Palette am n\u00e4chsten ist. [AEG_26]</p>"},{"location":"Firmware/#treiber","title":"Treiber","text":"<p>Ahmet Emirhan G\u00f6ktas</p> <p>Der Treiber ist der Hauptteil der E-Paper Display API. Er ist verantwortlich f\u00fcr die Initialisierung des Displays, die Aktualisierung des Displays mit neuen Bilddaten und die Handhabung der low-level Details des Displays. Es gibt eine Interface-Klasse, die jeder Treiber erben muss. Die Interface-Klasse stellt die grundlegenden Methoden bereit, die der Treiber implementieren muss. Der Treiber ist verantwortlich f\u00fcr die Einrichtung des Displays, das Senden der Befehle an das Display und die Aktualisierung des Displays mit neuen Bilddaten. Der Treiber k\u00fcmmert sich auch um die low-level Details des Displays, wie das Einrichten des SPI-Busses, das Senden der Daten an das Display und die Aktualisierung des Displays mit neuen Bilddaten.`</p>"},{"location":"Glossar/","title":"Glossar","text":"<p>Displaymodul</p> <p>Komplettes Set bestehend aus Display, Mikrocontroller, Akku, Platine und Geh\u00e4use. </p> <p>Display</p> <p>Das Display, welches angesteuert und mit Strom und Daten versorgt werden muss. </p> <p>&lt;figure-caption identifier=\"Figure\" id=_fig_MW_ePaper } </p> <p> { width=30% &gt;</p> <p>Ein exemplarisches ePaper Display </p> <p></p> <p>Test</p> <p>Mikrocontroller</p> <p>Im Displaymodul verbauter Computer, welcher drahtlos mit Clients kommunizieren kann und die Ansteuerung des Displays \u00fcbernimmt. </p> <p>Mikrocontroller Webserver</p> <p>Kann immer Bitmaps \u00fcber HTTP empfangen und im (Standalonemodus) zus\u00e4tzlich die Client-Website an einen Client ausliefern. </p> <p>Client</p> <p>Ger\u00e4t (Smartphone, Tablet, Computer) wor\u00fcber der Benutzer, mittels eines Browsers, mit dem Displaymodul direkt (Standalonemodus) oder alternativ mit dem zentralen Webserver (Servermodus) kommuniziert. </p> <p>Client Website</p> <p>Die im Client sichtbare Website bestehend aus HTML, CSS und JavaScript. </p> <p>Server</p> <p>Linux-Container, welcher den zentralen Webserver betreibt. </p> <p>Server Webserver</p> <p>Die Anwendung l\u00e4uft auf dem Server 24/7. Kann sich Daten von externen Quellen holen, diese von HTML in Bitmaps konvertieren und die Bitmaps an Displaymodule verteilen. </p> <p>Server Website</p> <p>Website f\u00fcr den Client, welche auf dem zentralen Webserver l\u00e4uft und womit sich mehrere Displaymodule steuern lassen. </p> <p>Standalonemodus</p> <p>Der Client kommuniziert direkt mit dem Mikrocontroller, dabei erstellt der Mikrocontroller selber ein WLAN. Der Mikrocontroller arbeitet also als WLAN Access-Point. </p> <p>Netzwerkmodus</p> <p>Der Client kommuniziert direkt mit dem Mikrocontroller, dabei wird ein vorhandenes WLAN benutzt. Der Mikrocontroller arbeitet also als WLAN-Client. </p> <p>Servermodus</p> <p>Der Client kommuniziert nur \u00fcber den Server Webserver mit dem Mikrocontroller, dabei wird ein vorhandenes WLAN benutzt. Der Mikrocontroller arbeitet also als WLAN-Client.</p> <p>Asset</p> <p>Den Inhalt, den ein Displaymodul anzeigen soll. Ein Asset wird als PNG dem Displaymodul zur Verf\u00fcgung gestellt. Die Bezeichnung Asset unterscheidet sich von einem Bild in dem Aspekt, dass ein Asset eine G\u00fcltigkeitsdauer hat und auch aus HTML-Code generiert werden kann. Erst f\u00fcr die \u00dcbertragung an ein Displaymodul wird ein Asset in ein Bild gewandelt. </p>"},{"location":"Handbuch/","title":"Handbuch","text":""},{"location":"Handbuch/#erste-schritte-und-display-inbetriebnahme","title":"Erste Schritte und Display Inbetriebnahme","text":"<p>Julia Reuter</p> <ol> <li> Aufwecken des Display-Moduls per Knopfdruck am unteren Geh\u00e4userand, damit es seinen Access-Point \u00f6ffnet</li> <li> Verf\u00fcgbare WLANs checken und \"THA-LPRD-...\" (Endung je nach Modul) ausw\u00e4hlen und mit dem Default Passwort: \"password\" verbinden</li> <li>Im Browser die Adresse 192.168.4.1/index.html aufrufen. Sie werden sich vermutlich beim ersten Aufrufen authentifizieren m\u00fcssen.         Default-Benutzer: \"admin\" und Passwort: \"admin\"   </li> <li>Nun sollten Sie auf diese Settings Page gelangen, wo Sie folgendes einstellen k\u00f6nnen:     <ul> <li>Modus: Festlegen des Betriebsmodus (Standalone ist der Default)</li> <li>Displaymodul: Ausw\u00e4hlen des gerade verbundenen Display-Moduls</li> <li>WiFi-Konfiguration: Eintragen der eigenen WLAN-Daten f\u00fcr den Netzwerkmodus</li> <li>Serielles Konsolen Log Level: F\u00fcr Debugging k\u00f6nnen verschiedene Konsolennachrichten aktiviert werden</li> <li>HTTP Auth: Benutzerauthentifizierung (Festlegen Benutzerpasswort und Zugangsdaten der Benutzeroberfl\u00e4che)</li> <li>HTTPS-Setting: \u00dcber Hochladen einer Zertifikatsdatei kann die Benutzeroberfl\u00e4che verschl\u00fcsselt werden</li> <li>Server URL: Einf\u00fcgen einer Server URL f\u00fcr den Servermodus</li> </ul> </li> </ol> <p></p> <p>Alle ge\u00e4nderten Einstellungen m\u00fcssen jeweils gespeichert werden. \u00dcber den Restart-Button wird das System neu gestartet, damit die \u00c4nderungen \u00fcbernommen werden. Bitte haben Sie hier einige Minuten Geduld. Falls das Verbinden mit einem externen WLAN oder Server nicht funktioniert hat, so \u00f6ffnet das Display automatisch wieder nach ca. 5 min den eigenen Access Point und Sie k\u00f6nnen entweder die Konfiguration erneut versuchen oder fahren im Standalone-Modus fort.</p> <p>Nat\u00fcrlich k\u00f6nnen die Einstellungen jederzeit ge\u00e4ndert werden.</p>"},{"location":"Handbuch/#hochladen-von-inhalten","title":"Hochladen von Inhalten","text":"<p>Julia Reuter Wenn Sie das System erfolgreich neu gestartet haben, sollten Sie auf folgende Seite (Abbildung 3) gelangen und k\u00f6nnen Sie mit dem Upload fortfahren</p> <p></p> <p>Hierf\u00fcr stehen zwei Optionen zur Verf\u00fcgung:</p> <ul> <li>PNG-Upload (Achtung: die Pixelaufl\u00f6sung des PNGs muss der Pixelaufl\u00f6sung des verbundenen Displays entsprechen)     <ul> <li>Die Displayaufl\u00f6sung wird direkt beim Aufrufen an die Seite \u00fcbermittelt und sollte angezeigt werden.</li> </ul> </li> <li>HTML-Design: In dem Textfeld kann mithilfe von HTML Code ein Layout erstellt werden, was von der Webseite automatisch zu einem Bild konvertiert und an das Display geschickt wird.</li> </ul> <p></p> <ul> <li>HTML-Vorlagen: Es k\u00f6nnen auch bereits vorgefertigte HTML-Vorlagen verwendet werden.</li> </ul> <p></p> <p>War der Upload erfolgreich, so werden Sie benachrichtigt und das Bild sollte nach wenigen Sekunden auf dem Display erscheinen.</p> <p></p> <p>Denken Sie daran, dass nach jedem erfolgreichen Bild-Upload das System in den deep-sleep gesetzt wird und nicht mehr erreichbar ist. Um den Inhalt zu \u00e4ndern oder Einstellungen vorzunehmen, dr\u00fccken Sie bitte den Knopf am unteren Display-Rand.</p>"},{"location":"Handbuch/#netzwerkmodus","title":"Netzwerkmodus","text":"<p>*Julia Reuter Nachdem Sie in den Einstellungen unter dem Punkt WiFi Konfiguration ihre WLAN-Daten eingeben und nach dem Speichern, das Display neu gestartet haben, sollte sich Ihr Modul automatisch mit dem entsprechenden WLAN verbinden.  Unter der zugewiesenen IP: \u2026/index.html k\u00f6nnen Sie mit dem Upload wie gehabt fortfahren.</p>"},{"location":"Handbuch/#aufsetzen-des-linux-servers","title":"Aufsetzen des Linux Servers","text":"<p>Mario Wegmann</p> <p>In der folgenden Anleitung werden Platzhalter mit  markiert. </p>"},{"location":"Handbuch/#grundinstallation","title":"Grundinstallation","text":"<p>sudo apt-get install git</p>"},{"location":"Handbuch/#testumgebung-fur-entwicklung","title":"Testumgebung f\u00fcr Entwicklung","text":"<p>// TODO Zu beginn muss Node.js installiert werden.  Da \u00fcber den apt Packetmanager nur veraltete Versionen von Node.js bereitgestellt werden, wird hier der Node Version Manager verwendet. </p> <p>Dieser l\u00e4sst sich \u00fcber folgendes Bash Skript installieren.  <code>curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash</code> Nach der Installation empfiehlt es sich die SSH Sitzung neu zu starten, damit der <code>nvm</code> Befehl auch erkannt wird.  Anschlie\u00dfend kann mit <code>nvm install 20</code> die LTS-Version Node.js 20 installiert werden.  Mit Node.js kommt auch der <code>npm</code> Packetmanager. Mit disem l\u00e4sst sich React und Next.js installieren.  <code>npm install next@latest react@latest react-dom@latest</code></p> <p>Als n\u00e4chstes muss ein SSH Key f\u00fcr Github hinterlegt werden, damit das Repository geklont werden kann.  Daf\u00fcr wird als erstet ein SSH Key generiert.  Es empfiehlt sich dabei auch ein Passphrase zu vergeben und beim Speicherort einen eindeutigen Namen zu vergeben.  <code>ssh-keygen -t ed25519 -C \"&lt;Github E-Mail Adresse&gt;\"</code> Als n\u00e4chstes wird der SSH Agent einmal gestartet um anschlie\u00dfend den SSH Key beim SSH Agent hinterlegen zu k\u00f6nnen.  <code>eval \"$(ssh-agent -s)\"</code> Beim hinzuf\u00fcgen muss auch die zuvor festgelegte Passpharse eingegeben werden.  <code>ssh-add &lt;Speicherort des zuvor erstellten SSH Keys angeben&gt;</code></p> <p>Der Public Teil des SSH Keys muss auch im Github Account hinterlegt werden.  Daf\u00fcr die URL https://github.com/settings/keys aufrufen und einen neuen SSH Key hinzuf\u00fcgen. </p> <p>Nun kann das Repository der Webanwendung geklont werden.  <code>git clone git@github.com:THA-LPRD/web.git lprd</code></p> <p>Danach wird das Verzeichnis von der Next.js Anwendung betreten. <code>cd lprd/lprd-server</code></p> <p>Die Anwendung verwendet die offizielle Schriftart der THA. Die Schriftart TWK Everett darf wegen der, von der THA erworbenen, Lizenz jedoch nur Studierenden und Mitarbeitern der Technischen Hochschule Augsburg zur verf\u00fcgung gestellt werden. Die Schriftart l\u00e4sst sich unter folgender URL herunterladen: https://www.tha.de/Kommunikation/Corporate-Design.page  Anschlie\u00dfend m\u00fcssen die zwei Schriftfamilien TWKEverett-Bold-web.ttf und TWKEverett-Medium-web.ttf TWKEverett-Medium-web.ttf m\u00fcssen im Ordner lprd-server/components/fonts kopiert werden. </p> <p>Als n\u00e4chstes kann die PostgreSQL Datenbank aufgesetzt werden.  Daf\u00fcr kann das Docker Image oder auch ein bestehender PostgreSQL Server verwendet werden.  <code>sudo docker run --name lprd-postgres -p 5432:5432 -e POSTGRES_PASSWORD=&lt;SicherersDatenbankPasswort&gt; -d postgres</code></p> <p>Die URL der Datenbank muss auch noch der Next.js Anwendung bekannt gemacht werden, dies geschieht \u00fcber die .env Datei.  Diese sollte neue angelegt werden und den folgenden Inhalt enthalten:  <code>DATABASE_URL=\"postgresql://&lt;PostgresUser&gt;:&lt;PostgresUserPassword&gt;@&lt;PostgresServerIP/Hostname&gt;:5432\"</code></p> <p>Nach der Installation der Datenbank kann diese mit Prisma mit den notwendigen Tabellen bef\u00fcllt werden. </p> <p><code>npx prisma migrate dev --name init</code></p> <p>Die Vorbereitungen sind somit abgeschlossen und der Developmentserver kann gestartet werden.</p> <p><code>npm run dev</code></p> <p>Unter http://localhost:3000 ist der Server nun erreichbar. </p> <p>Der Developmentserver kann mit dem Tastenk\u00fcrze Ctrl+C beendet werden. </p>"},{"location":"Handbuch/#produktivumgebung-bauen","title":"Produktivumgebung bauen","text":"<p>// TODO Was mit Font? docker build -t nextjs-docker . docker run -p 80:3000 nextjs-docker</p>"},{"location":"Handbuch/#produktivumgebung-starten","title":"Produktivumgebung starten","text":"<p>// TODO CADDY Cert</p> <p>sudo apt-get install docker</p>"},{"location":"Handbuch/#verwenden-der-webanwendung","title":"Verwenden der Webanwendung","text":"<p>Mario Wegmann</p>"},{"location":"Handbuch/#unterseiten","title":"Unterseiten","text":"<p>Nachdem die Anwendung gestartet wurde kann die Adresse im Browser eingegeben werden. Die Startseite, wie in  ersichtlich, zeigt das Men\u00fc f\u00fcr die Unterseiten an. Es gibt zwei Unterseiten, unter \"Displays\" werden alle bereits bekannten Displays aufgelistet. In der Unterseite \"Assets\" werden alle vorhanden Assets angezeigt. </p> <p> Die Startseite der Webanwendung </p>"},{"location":"Handbuch/#neues-asset-erstellen","title":"Neues Asset erstellen","text":"<p>Es gibt zwei M\u00f6glichkeiten ein Asset zu erstellen, es kann entweder ein fertiges PNG hochgeladen werden, oder ein PNG aus einem HTML Code erstellt werden. Dazu kann in der \"Assets\"-Unterseite, welche in  ersichtlich ist, einer der beiden Vorg\u00e4nge \u00fcber die Kn\u00f6pfe gestartet werden. </p> <p> Eine \u00dcbersicht \u00fcber alle vorhanden Assets </p> <p>PNG hochladen</p> <p>Ein PNG kann auf der Unterseite Assets \u00fcber den \"Hochladen\"-Knopf hochgeladen werden.  Bei hochladen muss darauf geachtet werden, dass das PNG in der richtigen Aufl\u00f6sung f\u00fcr das Display ist, welches sp\u00e4ter das Asset anzeigen soll. Ebenso kann ein Name f\u00fcr das Asset und wie lange es angezeigt werden soll angegeben werden. Das hochladen beginnt mit einem Druck auf den \"Hochladen\"-Knopf. Die  zeigt das Formular. </p> <p> Das Formular zum hochladen von bestehenden PNGs </p> <p>PNG aus HTML erstellen Auf der Unterseite Assets gibt es auch den \"Erstellen aus HTML\"-Knopf, dieser \u00f6ffnet ein Formular, in dem der Assetname, die Anzeigedauer und der HTML Code eingegeben werden kann. Nach dem druck auf den \"Generieren\"-Knopf wird ein PNG erstellt und lokal abgelegt. Die  zeigt das Formular. </p> <p> Das Formular zum erstellen von PNGs aus HTML Code </p>"},{"location":"Handbuch/#vorhandenes-asset-bearbeiten","title":"Vorhandenes Asset bearbeiten","text":"<p>In der \"Assets\" \u00dcbersichtsseite kann jedes vorhandene Asset ausgew\u00e4hlt werden um eine Detailansicht, welche in  ersichtlich ist, anzuzeigen. Dort k\u00f6nnen der Name, die Anzeigedauer und der HTML Code bearbeitet werden.  Ebenso kann ein Asset auch gel\u00f6scht werden. </p> <p> Die Detailansicht eines Assets </p>"},{"location":"Handbuch/#neues-displaymodul-verbinden","title":"Neues Displaymodul verbinden","text":"<p>Beim erstmaligen einschalten eines Displaymoduls, nach dem flashen, kann in der Einrichtungsseite des Displaymoduls der Servermodus als Betriebsmodus ausgew\u00e4hlt werden. Ebenso kann die Server URL im dazugeh\u00f6rigen Textfeld angegeben werden. </p> <p>Die weiteren Einstellungen verhalten sich gleich wie auch bei der Einrichtung vom Netzwerkmodus bereits erl\u00e4utert wurde. </p> <p>Nachdem die Erstkonfiguration gespeichert und das Displaymodul neu gestartet wurde, versucht es sich automatisch mit dem eingetragenen WLAN und anschli\u00dfend mit dem eingetragenen Server zu verbinden. </p> <p>Falls das Displaymodul sich zum ersten mal mit diesem Server verbindet, wird es automatisch in der Datenbank eingetragen, anschlie\u00dfend geht das Display in den Deep-sleep Modus. </p>"},{"location":"Handbuch/#vorhandenes-display-bearbeiten","title":"Vorhandenes Display bearbeiten","text":"<p>\u00c4hnlich wie bei der Assets \u00dcbersicht, k\u00f6nnen auch die Displays in der \"Display\"-Unterseite, welche in  dargestellt ist, bearbeitet werden. In der Detailansicht, diese ist in  zu erkennen, eines Displays kann die MAC-Adresse und der Zeitpunkt, zu dem sich das Display zum letzen mal beim Server gemeldet hat, eingesehen werden. Der Name des Displays und die Aufl\u00f6sung k\u00f6nnen bearbeitet werden. </p> <p>Zuletzt kann ein Display auch wieder gel\u00f6scht werden. </p> <p> Die \u00dcbersichtsseite aller Displays </p> <p> Die Detailansicht eines Displays </p>"},{"location":"Handbuch/#neues-asset-auf-dem-display-anzeigen","title":"Neues Asset auf dem Display anzeigen","text":"<p>Sobald ein Displaymodul sich in der Webanwendung registriet hat, kann in der Webanwendung das Display ausgew\u00e4hlt werden. Hier k\u00f6nnen grundlegene Informationen zum Display bearbeitet und ein neues aktives Asset gesetz werden. </p> <p>Mit einem Tastendruck auf den vorderseitigen Knopf, kann das Display aus dem Deep-sleep Modus wieder aufgeweckt werden. Immer nach dem Aufwecken versucht das Displaymodul sich mit dem Server zu verbinden und eine neue Konfiguration zu erhalten. Die Konfiguration enth\u00e4lt die URL des aktuell anzuzeigenden Assets und eine Dauer in Sekunden, die angiebt, wie lange das Asset angezeigt werden soll. </p> <p>Das Displaymodul l\u00e4dt anschlie\u00dfend das Asset von der angegebenen URL herunter, zeigt es an und versetzt sich anschlie\u00dfend wieder in den Deep-sleep Modus. Zus\u00e4tzlich wird noch ein Wakeup Timer auf die angegebene Dauer gesetzt. Dieser Timer weckt somit das Displaymodul automatisch nach ablauf der Anzeigedauer auf, damit sich das Displaymodul ein neues anzuzeigendes Asset herunterl\u00e4dt. </p>"},{"location":"Handbuch/#arbeiten-an-der-displaymodul-firmware","title":"Arbeiten an der Displaymodul-Firmware","text":"<p>Ahmet Emirhan G\u00f6ktas</p> <p>Um an diesem Projekt zu arbeiten, m\u00fcssen folgende Werkzeuge auf Ihrem Computer installiert sein:</p> <ul> <li>PlatformIO</li> <li>Ein Code-Editor (z.B. Visual Studio Code)</li> <li>Git</li> <li>Verf\u00fcgbarer USB-Anschluss (zum Flashen der Firmware)</li> </ul>"},{"location":"Handbuch/#einrichten-des-projekts","title":"Einrichten des Projekts","text":"<p>Hier ist eine Schritt-f\u00fcr-Schritt-Anleitung, wie Sie das Projekt auf Ihrem lokalen Rechner f\u00fcr Visual Studio Code einrichten.</p> <ol> <li>Installieren Sie die PlatformIO-Erweiterung f\u00fcr Visual Studio Code. Sie k\u00f6nnen die Erweiterung finden, indem Sie im Erweiterungstab nach <code>PlatformIO IDE</code> suchen.</li> <li>Klonen Sie das Repository auf Ihren lokalen Rechner:     <pre><code>git clone --recursive https://github.com/THA-LPRD/MCU.git\n</code></pre></li> <li> <p>Klicken Sie auf das PlatformIO-Symbol auf der linken Seite von Visual Studio Code. Dort sollten Sie eine Taste namens <code>Pick a folder</code> sehen. Klicken Sie darauf und w\u00e4hlen Sie den Ordner aus, in den Sie das Repository geklont haben.</p> <p> PlatformIO Projekt \u00f6ffnen</p> </li> <li> <p>PlatformIO sollte das Projekt automatisch erkennen und die Umgebung f\u00fcr Sie konfigurieren. Nachdem Sie die richtige Umgebung ausgew\u00e4hlt haben, k\u00f6nnen Sie mit der Arbeit am Projekt beginnen.</p> </li> <li>Sie k\u00f6nnen die Firmware auf den ESP32 flashen, indem Sie auf das PlatformIO-Symbol auf der linken Seite von Visual Studio Code klicken und dann auf die Taste <code>Upload</code> klicken.</li> <li>Wenn Sie die Ausgabe des seriellen Monitors sehen m\u00f6chten, k\u00f6nnen Sie auf das PlatformIO-Symbol auf der linken Seite von Visual Studio Code klicken und dann auf die Taste <code>Serial Monitor</code> klicken.</li> <li> <p>Sie k\u00f6nnen auch die Taste <code>Upload File System Image</code> verwenden, um die Dateien im Ordner <code>data</code> auf den ESP32 hochzuladen.</p> <p> ESP32 flashen</p> </li> </ol> <p>Note</p> <p>Abh\u00e4ngig vom verwendeten ESP32-Board kann es notwendig sein, die Boot-Taste zu dr\u00fccken, bevor der ESP32 an den USB-Anschluss angeschlossen wird.</p>"},{"location":"Handbuch/#quellen","title":"Quellen","text":"<p>https://docs.github.com/en/authentication/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent?platform=linux#generating-a-new-ssh-key  https://docs.github.com/en/authentication/connecting-to-github-with-ssh/adding-a-new-ssh-key-to-your-github-account</p>"},{"location":"Hardware/","title":"Hardware","text":""},{"location":"Hardware/#auswahl-des-mikrocontrollers","title":"Auswahl des Mikrocontrollers","text":"<p>Benjamin Klaric</p> <p>In der Tabelle in Kapitel 3.1 Mikrocontroller wurden schon die verschiedenen M\u00f6glichkeiten zur Auswahl von Mikrocontrollern dargestellt. Wenn man die Anforderungen, wie Anzahl GPIO Pins, Stromverbrauch in Sleep Modi, Bauform, interne Speicher und m\u00f6gliche Vorteile \u00fcber den anderen, wie z.\u00a0B. intern gebauten Ladeger\u00e4t, erschien schon ein eindeutiger Gewinner, in Form von XIAO ESP32-S3. \u00a0 Die verschiedenen STM32 Mikrocontroller waren auch lange Zeit in Betrachtung, wurden aber herausgelassen aufgrund der Tatsache, dass sie kein eingebautes Wi-Fi-Modul haben. Der XIAO ESP32-S3 mit seinem kleinen Formfaktor, sehr geringen Stromverbrauch in Deep Sleep Modus, enormen Internen speicher (im Vergleich mit anderen Kandidaten) und M\u00f6glichkeit, die Akku \u00fcber den USB-C-Anschluss zu laden, machen den Mikrocontroller sehr flexibel und f\u00fcr das Systemanforderungen passend. [BK_07] Der Prozessor, der auf dem Mikrocontroller l\u00e4uft, ist der leistungsstarke Xtensa LX7 Dual-Core, 32-Bit-Prozessor, mit bis zu 240 MHz Taktfrequenz. Mit internen 512 KB SRAM-Speichern ist er in der Lage, viele Operationen und Funktionen lokal durchzuf\u00fchren. Neben dem SRAM-Speicher ist der Mikrocontroller auch extern mit 8 MB Flash und 8 MB PSRAM Speicher ausgestattet. Der Mikrocontroller ist auch mit interner Hardware Watchdog Timers ausgestattet, die in dem Fall, wo der Mikrocontroller h\u00e4ngend geblieben ist, eine M\u00f6glichkeit von Neustart des Systems anbietet. [BK_08] Aufgrund der niedrigen Idle Strom von 22 mA und noch niedrigere Deep Sleep Strom von 14 \u03bcA stellt sich das Modul perfekt f\u00fcr ein autarkes System. Die M\u00f6glichkeit von Laden der Akkus durch das USB-C ist nat\u00fcrlich auch von Vorteil, allerdings mit einem niedrigen Ladestrom von 100 mA. Und das alles befindet sich auf einer kleinen Platine mit Ma\u00dfen 21x17,5 mm, der ungef\u00e4hre Gro\u00dfe von einer 2-Euro-M\u00fcnze. [BK_07] Der XIAO ESP32-S3 stellt elf GPIO Pins zur Verf\u00fcgung, was auf Abildung 7.xx zu sehen ist. Von diesen elf GPIO-Pins sind neun analoge Pins, an die man analoge Signale anschlie\u00dfen kann. Neben den UART-Pins, die f\u00fcr die serielle Kommunikation mit dem Mikrocontroller genutzt werden, bietet der XIAO ESP32-S3 auch eine SPI- und eine I2C-Schnittstelle. Diese Schnittstellen sind serielle synchrone Datenbusse, die zur Kommunikation mit verschiedenen Peripherieger\u00e4ten verwendet werden. Der 5V-Pin ist nur dann aktiv, wenn das Modul \u00fcber den USB-C-Anschluss betrieben wird. Andererseits ist der 3,3V-Pin ist immer aktiv und dient als regulierter Ausgang mit einem maximalen Strom von 700 mA. [BK_07] </p> <p> Pinout von XIAO ESP32-S3 [BK_07] </p>"},{"location":"Hardware/#auswahl-der-displaytechnologie","title":"Auswahl der Displaytechnologie","text":""},{"location":"Hardware/#auswahl-der-akkukomponenten","title":"Auswahl der Akkukomponenten","text":"<p>Benjamin Klaric</p> <p>Akku Der ausgew\u00e4hlte Akku, aus verschiedenen Akku-Technologien, die in 3.3 Akku-Technologien genannt waren, war der klassische Li-Ion-Akku aus mehreren Gr\u00fcnden. Aufgrund der Anzahl und Position des Systems, die von Akku betrieben sein wurde, war der Sicherheitsaspekt ein entscheidender Faktor. Deswegen wurden die LiPo-Akkus nicht mehr betrachtet. Der Vergleich zwischen Li-Ion-Akkus und LiFePo<sub>4</sub>-Akkus hatte eindeutige Unterschiede geliefert. Die LiFePo<sub>4</sub>-Akkus repr\u00e4sentieren die sicherste Variante, andererseits hatten die Li-Ion-Akkus eine h\u00f6here Nennspannung von 3,7V. Aus Sicherheitsblick betrachtet wurden die LiFePo<sub>4</sub>-Akkus ausgew\u00e4hlt. Die Nennspannung von 3,2V hat jedoch gegen die LiFePo<sub>4</sub>-Akkus gesprochen, da der ausgew\u00e4hlte Mikrocontroller, n\u00e4mlich den XIAO ESP32-S3, Betriebsspannung zwischen 3,2V und 4,2V angefordert hat. Obwohl die LiFePo<sub>4</sub>-Akkus die Betriebsspannung liefern konnten, konnten sie das System nicht betreiben, da die genannte Betriebsspannung in Fall ohne schwere Last gemeint ist. Wegen dies wurden allerdings die Li-Ion-Akkus gew\u00e4hlt. Der n\u00e4chste Schritt war, eine vern\u00fcnftige Kapazit\u00e4t zu finden, sodass die Akkus das System lang genug betreiben konnten. Dazu hat man die Sch\u00e4tzungen mit Verbrauchmessungen unterst\u00fctzt und ungef\u00e4hr die ben\u00f6tigte Akku-Kapazit\u00e4t gesch\u00e4tzt. Eine Akkulaufzeit von einem Jahr war gew\u00fcnscht und dementsprechend war die Gro\u00dfe des Akkus gew\u00e4hlt, n\u00e4mlich ~10000 mAh. \u00a0 Ein Akku mit so einer Kapazit\u00e4t war aber nicht einfach zu finden. Deswegen wurde das Akkupack aus zwei ~5000 mAh Akkus gebaut. Um von zwei ~5000 mAh auf die gew\u00fcnschte Kapazit\u00e4t zu kommen, wurden die Akkus in parallel verbunden, da so die Kapazit\u00e4t sich verdoppelt; im Vergleich, wenn man die in Reihe anschlie\u00dft, so wird die Spannung verdoppelt. Bei der Suche nach Akkus muss man einige Sachen beachten. Der Formfaktor der Akku, minimale Kapazit\u00e4t, ob der Akku schon ein eingebautes BMS hat und der Entladestrom. Es w\u00fcrde die BAK N21700CD-53E ausgew\u00e4hlt, die auf Abildung 7.xx zu sehen ist.</p> <p> Li-Ion-Akku [BK_09] </p> <p>Aus der Tabelle der technischen Daten auf der Abildung 7.xx des betrachteten Akkus ist es klar zu sehen, dass alle ben\u00f6tigten Parameter erf\u00fcllt sind. Der Formfaktor ist aus der Durchmesser und H\u00f6he (die ersten zwei Ziffern von Durchmesser und normalerweise erste drei Ziffern von H\u00f6he \u2192 21700).  </p> <p> Technische Daten von BAK N21700CD-53E [BK_09] </p> <p>BMS Um den Akkupack sicher betreiben zu k\u00f6nnen, wurde ein BMS ben\u00f6tigt. Wie bereits in 3.3 Akku-Technologien erw\u00e4hnt, sch\u00fctzt ein BMS die Akkus vor Tiefentladung, \u00dcberladung, Kurzschluss und \u00dcberstrom.  </p> <p>Beim genaueren Blick auf ein 1S 2MOS BMS, auf Abildung 7.xx, wo 1S die Anzahl der Zellen in Serie repr\u00e4sentiert, erkennt man einen IC und zwei MOSFET Transistoren auf der Vorderseite. Die MOSFET Transistoren sind n\u00e4mlich die NMOS-Transistoren und dienen als Schalter, die vom IC durch Gate-Spannung angesteuert werden.  </p> <p>\u00dcberladungsschutz: Wenn die Ladespannung 4,2V \u00fcberschreitet, sendet der IC ein Signal, das die Gate-Spannung eines NMOS-Transistors steuert, wodurch dieser den Stromkreis unterbricht.  </p> <p>Tiefentladungsschutz: Bei Tiefentladung wird ein \u00e4hnlicher Mechanismus aktiviert, allerdings bei 2,5V. Der IC sendet ein Signal an den zweiten NMOS-Transistor, um den Stromfluss zu unterbrechen, sobald die Spannung einen kritischen Wert erreicht.  </p> <p>\u00dcberstromschutz: Der IC \u00fcberwacht den Stromfluss kontinuierlich. Wenn der Strom \u00fcber den zul\u00e4ssigen Grenzwert steigt, schaltet der IC einen der NMOS-Transistoren ab, um den Stromfluss zu unterbrechen und die Batterie vor Sch\u00e4den zu sch\u00fctzen.  </p> <p>Kurzschlussschutz: Auch bei einem Kurzschluss, bei dem sehr hohe Str\u00f6me flie\u00dfen, erkennt der IC diese Situation und unterbricht sofort den Stromfluss durch Abschalten der NMOS-Transistoren.  </p> <p>Das BMS, das auf Abildung 7.xx dargestellt ist, liefert alle diese Features und wurde f\u00fcr den Aufbau von dem Akkupack ausgew\u00e4hlt. \u00a0</p> <p> 1S 2MOS Batteriemanagementsystem [BK_10] </p> <p>Ladeger\u00e4t Wie bereits in 3.3 Akku-Technologien, ben\u00f6tigen die Li-Ion-Akkus ein spezielles Ladeger\u00e4t, n\u00e4mlich ein Ladeger\u00e4t, der in die Lage ist beim Laden der Akkus erste 80% konstanter Strom zu liefern und danach 20% die Akkus mit konstanter Spannung zu laden. Man kann solche Ladeger\u00e4te ohne viele Schwierigkeiten finden, sind allerdings teuer. Bei der Suche nach einem muss man eine Sache beachten, n\u00e4mlich die Zellenanzahl. Das ausgew\u00e4hlte Ladeger\u00e4t ist auf der Abildung 7.xx zu sehen.</p> <p> Ladeger\u00e4t f\u00fcr Li-Ion-Akkus [BK_11] </p>"},{"location":"Hardware/#zusammenbau-der-akkupacks","title":"Zusammenbau der Akkupacks","text":"<p>Mario Wegmann</p>"},{"location":"Hardware/#konzeptioneller-aufbau","title":"Konzeptioneller Aufbau","text":"<p>Bei der Auswahl der Akkukomponenten wurde die Entscheidung getroffen, mehrere Lithium-Ionen-Zellen zu verwenden. Da die Kapazit\u00e4t des Akkupacks vergr\u00f6\u00dfert wird, die Batteriespannung jedoch weiterhin zwischen 2,5 V und 4,2 V liegen soll, werden die beiden Lithium-Ionen-Zellen parallel miteinander verbunden. Dadurch verdoppelt sich die Kapazit\u00e4t, w\u00e4hrend die Spannung gleich bleibt. Zudem wird der gemeinsame Pluspol mit dem Plus des Battery Management System verbunden und ebenso mit dem Minuspolen verfahren. Zum Verbinden von den Akkuzellen untereinander und mit dem BMS eignet sich ein Nickelband, welches auch als Hiluminband bekannt ist[MW_07]. Der Aufbau des Akkus ist auch in den Abbildungen  und  ersichtlich. </p> <p> Konzeptioneller Aufbau des Akkus </p> <p> Foto des aufgebauten Akkus </p>"},{"location":"Hardware/#battery-management-system-anschlieen","title":"Battery Management System anschlie\u00dfen","text":"<p>Als Erstes sollte das BMS verdrahtet werden. In diesem Projekt wurde sich daf\u00fcr entschieden, dass das Akkupack \u00fcber einen Stecker mit dem Mainboard verbunden werden kann und somit modular ist. Somit wurde an den Ausg\u00e4ngen des BMS ein 2 Pin JST-X2 Stecker gel\u00f6tet. Hierbei wurde sich im Team intern darauf geeinigt, dass der Pluspol rechts ist, wenn von der Drahtseite auf den Stecker geschaut wird und die Nase des Steckers nach oben zeigt. An den Pads f\u00fcr die Batteriepole wurde das Nickelband ebenso verl\u00f6tet. </p>"},{"location":"Hardware/#vorbereiten-der-lithium-ionen-zellen","title":"Vorbereiten der Lithium-Ionen-Zellen","text":"<p>F\u00fcr einen sicheren Umgang mit Lithium-Ionen-Zellen ist es wichtig, mehrere Dinge zu beachten, bevor mehrere Zellen miteinander verbunden werden k\u00f6nnen.  Bereits beim Beschaffen von den Zellen sollte darauf geachtet werden, das identische Modell und eine gleiche Charge zu verwenden.  Zudem sollten Zellen, die verbunden werden sollen, m\u00f6glichst gleich alt und auch gleich belastet werden oder im Optimalfall komplett neu sein.  Zuletzt sollte vor dem Verbinden darauf geachtet werden, dass die Zellen die gleiche Zellspannung aufweisen, um einem schlagartigen Ladungswechsel beim Verbinden vorzubeugen.</p> <p>Nachdem die einzelnen Zellen vorbereitet waren, wurden diese in die Plastikhalter eingelegt. Diese Plastikabstandshalter ergeben zusammen mit den Zellen ein stabiles Gesamtsystem und halten die Zellen davor ab, sich direkt zu ber\u00fchren.  </p>"},{"location":"Hardware/#punktschweiverfahren-bei-lithium-ionen-zellen","title":"Punktschwei\u00dfverfahren bei Lithium-Ionen-Zellen","text":"<p>Lithium-Ionen-Zellen sind w\u00e4rmeempfindlich und daher ist Weichl\u00f6ten kein geeignetes Verfahren, um die Zellen mit dem Hiluminband zu verbinden, stattdessen eignet sich das Punktschwei\u00dfverfahren. Hierbei wird das Nickelband an einem Pol einer Zelle gepresst und dann die zwei Elektroden des Punktschwei\u00dfger\u00e4tes auf das Nickelband gedr\u00fcckt. Bei dem in diesem Projekt verwendeten Ger\u00e4t flie\u00dfen durch die beiden Elektroden 650 Ampere bei 4,2 Volt, dieser hohe Strom f\u00fchrt zu einem Schwei\u00dfpunkt, welcher das Nickelband und den Pol fest verbindet, jedoch aufgrund der kurzen Dauer des Prozesses von circa 5 Millisekunden kaum eine W\u00e4rmebelastung f\u00fcr die Akkuzelle darstellt. Das Nickelband, welches bereits mit dem BMS verbunden ist, wurde um ein weiteres Nickelband orthogonal dazu erweitert. Dadurch ergibt sich eine Nickelverbindung in T-Form. An beiden offenen Enden wurde jeweils ein Batteriepol angeschlossen. Dies wurde f\u00fcr die andere Polseite wiederholt [MW_08].</p>"},{"location":"Hardware/#isolieren-des-akkupacks","title":"Isolieren des Akkupacks","text":"<p>Abschlie\u00dfend wurde Kapton Klebeband verwendet, um das Akkupack mit einer isolierenden Schicht zu umh\u00fcllen. Dadurch wird vermieden, dass unkontrolliert die Batteriepole mit anderen leitf\u00e4higen Materialien in Ber\u00fchrung kommen und s\u00e4mtlicher Strom \u00fcber das BMS geleitet wird. Kapton Klebeband ist dabei ein sehr guter elektrischer und thermischer Isolator. </p>"},{"location":"Hardware/#schaltungsentwurf","title":"Schaltungsentwurf","text":"<p>Benjamin Klaric </p> <p>Um das gesamte System optimal zu gestalten, wurde eine Platine entworfen, die alle ben\u00f6tigten Komponenten und Schaltungen integriert, um die normale Funktionalit\u00e4t des Systems zu gew\u00e4hrleisten. F\u00fcr die Entwicklung der Platine war ein pr\u00e4ziser Schaltungsentwurf mit den richtigen Komponenten erforderlich. Der Schaltungsentwurf sowie der Platinentwurf wurden mithilfe der ECAD-Software KiCad erstellt. Die Auswahl der geeigneten Komponenten sowie eine detaillierte Beschreibung der Schaltung sind im folgenden Abschnitt beschrieben. Alle Komponenten, die in der Schaltung beinhaltet sind, befinden sich in dem sogenannten Bill of Materials (kurz BOM). \u00a0</p> <p>Ganze Schaltung Auf der Abildung 7.xx ist die vollst\u00e4ndige Schaltung mit allen Teilschaltungen dargestellt.  </p> <p> Ganze Schaltung f\u00fcr das Mainboard des Systems </p> <p>Wenn man die Abildung 7.xx betrachtet, sind die Verbindungen zwischen den Teilschaltungen und der Gesamtverdrahtung der Schaltung sichtbar. Sp\u00e4tere Abschnitte behandeln jede Teilschaltung einzeln, und es wird empfohlen, zur Gesamtabbildung der Schaltung zur\u00fcckzukehren, um die Verbindung der erkl\u00e4rten Teilschaltungen im Gesamtkontext zu sehen. Ganz links in der Abbildung ist ein 100 nF Kondensator, speziell C5, zwischen 3,3V (V<sub>CC</sub>) und Ground (GND) parallel geschaltet. Dieser dient als Entkopplungskondensator, um Spannungsschwankungen zu reduzieren und die Stabilit\u00e4t der Stromversorgung sicherzustellen. Der 100 nF Kondensator f\u00e4ngt hochfrequente St\u00f6rungen ab und gl\u00e4ttet diese. Dadurch verbessert er die Betriebssicherheit des Systems, insbesondere w\u00e4hrend schneller Schaltvorg\u00e4nge, indem er eine stabile Spannungsversorgung gew\u00e4hrleistet und die Signalqualit\u00e4t erh\u00f6ht. Dieser Wert von 100 nF ist ein Standardwert f\u00fcr Entkopplungskondensatoren bei niedrigen Frequenzen. [BK_12] [BK_13] Ein Kondensator mit der 1210 Bauform wurde aus Platzgr\u00fcnden gew\u00e4hlt, obwohl jeder 100 nF Kondensator diese Aufgabe erf\u00fcllen k\u00f6nnte. Die Wahl der Bauform von Kondensator und anderer Bauteile wurde entsprechend den Platzanforderungen getroffen.  </p> <p>Mikrocontroller Wenn man die Teilschaltung des Mikrocontrollers auf der Abildung 7.xx betrachtet, f\u00e4llt auf, dass au\u00dfer dem Mikrocontroller keine weiteren Komponenten zu sehen sind. Die gesamte Schaltung wurde in Teilschaltungen oder sogenannte Subsheets, wie das Feature in KiCad genannt ist, aufgeteilt, um sie \u00fcbersichtlicher darzustellen.  </p> <p> Ausg\u00e4nge des Mikrocontrollers </p> <p>In dieser Teilschaltung sind die Ausg\u00e4nge des Mikrocontrollers hierarchischen Labels mit entsprechenden Namen zugeordnet.  </p> <p>Akkuanschl\u00fcsse Die Akkuanschl\u00fcsse in der Teilschaltung beinhalten einen Stecker, konkret den J1, sowie einen Spannungsteiler, der aus R5 und R6 besteht. Diese Komponenten sind auf der Abildung 7.xx dargestellt.  </p> <p> Schaltung von Akkuanschl\u00fcsse </p> <p>Der Akkupack ist \u00fcber den Stecker mit den Akkuanschl\u00fcssen des Mikrocontrollers verbunden. Parallel dazu ist ein Spannungsteiler aufgebaut. Der Zweck dieses Spannungsteilers besteht darin, die Spannung des Akkupacks zu messen, indem ein analoger GPIO-Pin des XIAO ESP32-S3 verwendet wird. Dadurch wird der Zustand des Akkupacks genau \u00fcberwacht, um sicherzustellen, dass ausreichend Spannung f\u00fcr den Mikrocontroller bereitgestellt wird.  </p> <p>Display-Enable Auf der Abildung 7.xx ist die sogenannte Display-Enable Schaltung zu sehen. Man kann drei Widerst\u00e4nde, n\u00e4mlich den R1, R2 und R3 erkennen, neben den zwei MOSFETs, einen NMOS und einen PMOS Transistor.</p> <p> Schaltung von Display Enable </p> <p>Die E-Paper-Technologie von Displays verbraucht tats\u00e4chlich keinen Strom im Idle-Zustand. Das Gleiche kann aber nicht f\u00fcr die kleinen Zwischenplatinen gesagt werden, die Parallelport-Kommunikationsverfahren zu SPI \u00fcbersetzen. Diese verbrauchen st\u00e4ndig Strom, was eine unerw\u00fcnschte Folge ist. Um den Stromverbrauch zu optimieren, wurde eine Schaltung entworfen, die die Stromversorgung des Displays durch Code trennt. Um die Schaltung per Code ansteuern zu k\u00f6nnen, wurden zwei MOSFETs verwendet: ein N-Channel MOSFET und ein P-Channel MOSFET. Der Ausgang des Mikrocontrollers geht \u00fcber den 180 \u03a9 Widerstand, n\u00e4mlich R2, auf das Gate des N-Channel MOSFET (U3). Der 180 \u03a9 Widerstand dient dazu, den Gate-Strom zu begrenzen und das Schalten des Transistors zu stabilisieren. Dazu wird auch ein Pulldown-Widerstand (R1) eingesetzt, da beim Einschalten des Mikrocontrollers der EN-Ausgang nicht sofort auf 0V gesetzt sein k\u00f6nnte. Ein Wert von 10 k\u03a9 ist ein Standardwert, weil er ausreichend ist, um das Gate sicher auf 0V zu ziehen, ohne signifikanten Strom zu verbrauchen. Um ein unn\u00f6tiges Einschalten des NMOS zu vermeiden, wurde der Pulldown-Widerstand gesetzt. Die Source-Leitung des NMOS ist mit dem Ground verbunden, da dies dem Funktionsprinzip des NMOS entspricht. Die Drain-Leitung ist mit dem Gate des P-Channel MOSFET (U4) verbunden und auch mit einem Pull-up-Widerstand (R3). Der Pull-up-Widerstand sorgt daf\u00fcr, dass das Gate des PMOS auf 3,3V gehalten wird, wenn der NMOS nicht leitend ist, wodurch der PMOS ausgeschaltet bleibt. Der NMOS-Transistor (U3) schaltet ein, wenn der EN-Pin des Mikrocontrollers auf High (3,3V) geht. Dadurch wird das Gate des PMOS-Transistors auf 0V gezogen. Der PMOS-Transistor (U4) schaltet ein, wenn das Gate auf 0V gezogen wird, wodurch die Verbindung zwischen VCC und Switch geschlossen wird. \u00a0 Die ausgew\u00e4hlten MOSFETs wurden aufgrund ihrer niedrigen Schwellenspannung und ihres geringen R_DS(on)-Widerstands gew\u00e4hlt, was eine effiziente und zuverl\u00e4ssige Schaltung erm\u00f6glicht.  </p> <p>Switch Man kann auf der Abildung 7.xx ein Switch erkennen, der daf\u00fcr zust\u00e4ndig ist, die Betriebsspannung des Displays auszuw\u00e4hlen, zwischen direkten 3,3V oder dem Ausgang von Booster Schaltung.</p> <p> Switch f\u00fcr Ansteuerung der Betriebsspannung </p> <p>Der Switch wird per Bedarf mittels menschlichen Einfluss die Leitung zur Betriebsspannung von Display umleiten, zu Booster Schaltung oder direkt mit dem 3,3V Ausgang von Mikrocontroller verbinden. Diese Funktionalit\u00e4t ist so ausgedacht, sodass man die Platine generisch halten kann, um verschiedene Displays mit verschiedenen Betriebsspannungen anzusteuern. \u00a0</p> <p>Boost-Konverter Die Boost-Konverter Schaltung, die auf der Abildung 7.xx dargestellt ist, hat die Aufgabe, die Betriebsspannung zu erh\u00f6hen.  </p> <p> Booster Schaltung </p> <p>Der Boost-Konverter befindet sich in der Mitte der Schaltung. Die L1 speichert Energie in ihrem Magnetfeld, wenn Strom durch sie flie\u00dft. W\u00e4hrend der Schaltzyklen des Boost-Konverters wird diese Energie verwendet, um die Spannung am Ausgang zu erh\u00f6hen. Wenn der Schalter innerhalb des Moduls geschlossen ist, flie\u00dft Strom durch die Induktivit\u00e4t und speichert Energie. Wenn der Schalter \u00f6ffnet, wird die gespeicherte Energie freigesetzt, wodurch die Spannung \u00fcber die Induktivit\u00e4t ansteigt und die Ausgangsspannung erh\u00f6ht wird. Der Ausgangskondensator, n\u00e4mlich den C3, gl\u00e4ttet die Ausgangsspannung und reduziert das Rauschen am Ausgang des Boost-Konverters. Die L1 zusammen mit C3 nennt sich ein LC-Glied und dient als ein Tiefpassfilter, das hochfrequente St\u00f6rungen und Rauschen herausfiltert und eine gleichm\u00e4\u00dfige Gleichspannung liefert. Der Eingangskondensator C1 reduziert Spannungsrauschen und gl\u00e4ttet die Eingangsspannung, bevor sie in die Schaltung eintritt. Der sogenannte Bypass-Kondensator C2 dient dazu, hochfrequente St\u00f6rungen und Rauschen herauszufiltern. Der C4 Kondensator wird verwendet, um elektromagnetische Interferenzen (EMI) zu reduzieren. Er hilft dabei, Rauschen und St\u00f6rungen zu filtern, die durch die Schaltung erzeugt werden k\u00f6nnten, und sorgt f\u00fcr eine saubere Ausgangsspannung. Der Boost-Konverter hat intern auch eine galvanische Trennung. Diese galvanische Trennung dient dazu, elektrische Isolation zwischen dem Eingang und dem Ausgang zu gew\u00e4hrleisten. Sie sch\u00fctzt vor elektrischen St\u00f6rungen und sorgt daf\u00fcr, dass keine direkten elektrischen Verbindungen zwischen den beiden Seiten bestehen. In diesem speziellen Fall wurde jedoch entschieden, die galvanische Trennung nicht zu nutzen, wegen niedriger Leistungsanforderungen des Systems und der Tatsache, dass die elektrische Isolation in Form von galvanischer Trennung nicht kritisch ist. [BK_14] </p> <p>IIC-Erweiterung Auf der Abildung 7.xx sind die IIC Ausg\u00e4nge des Mikrocontrollers dargestellt, mit jeweils einem Pull-up Widerstand von 10 k\u03a9. \u00a0</p> <p> IIC-Ausg\u00e4nge </p> <p>Die IIC Pins von dem Mikrocontroller wurden auf die Platine frei zug\u00e4nglich gemacht, sodass die Erweiterungsm\u00f6glichkeiten in Form eines Sensors oder \u00c4hnliches einfacher zu implementieren sind. Momentan bleiben die unverbunden.  </p> <p>Refresh-Knopf Der ben\u00f6tigte Knopf ist auf der Abildung 7.xx dargestellt. Die wird f\u00fcr manuellen Refresh des Displays benutzt.  </p> <p> Schaltung von Refresh-Knopf </p> <p>Wenn ein mechanischer Schalter oder Taster bet\u00e4tigt wird, kann es zu kurzen ungewollten Kontakten kommen, die als Prellen bezeichnet werden. Diese entstehen durch die mechanische Federung und Vibrationen des Schalters. In elektronischen Schaltungen kann dieses Prellen zu Fehlfunktionen f\u00fchren, insbesondere wenn der Taster als Trigger dient. Der verwendete Knopf ben\u00f6tigt eine Entprellschaltung, um zuverl\u00e4ssig zu funktionieren, da er eine maximale Prellzeit von 10 ms aufweist. [BK_15] Um das Prellen zu beseitigen, wird ein RC-Glied eingebaut, das als Hochpassfilter fungiert. Wenn der Taster offen ist, l\u00e4dt sich der Kondensator C6 \u00fcber die Widerst\u00e4nde R4 und R7 auf, wodurch die Spannung langsamer ansteigt. Ist der Taster geschlossen, wird der Kondensator \u00fcber R4 mit einer kontrollierten Geschwindigkeit entladen. Der Widerstand R7 hat einen Wert von 10 k\u03a9, da es sich um einen Pull-up-Widerstand handelt. F\u00fcr R4 wird ein Wert von 75 k\u03a9 gew\u00e4hlt, um in Kombination mit dem Kondensator von 100 nF die gew\u00fcnschte Zeitkonstante zu erreichen. [BK_16] </p> <p>Displayanschl\u00fcsse Die dargestellten Ausg\u00e4nge auf der Abildung 7.xx, n\u00e4mlich den J2-Komponente, sind die Ausg\u00e4nge, die man direkt mit dem Display \u00fcber Dupont Pins verbinden kann.  </p> <p> Ausg\u00e4nge f\u00fcr das Display </p> <p>Die ersten sieben Ausg\u00e4nge kommen direkt von dem Mikrocontroller, wobei der achte Ausgang, konkret den V<sub>cc</sub> Ausgang, von dem Switch abh\u00e4ngig ist.  </p>"},{"location":"Hardware/#platinendesign","title":"Platinendesign","text":"<p>Benjamin Klaric </p> <p>Mit der in 7.5 Schaltungsentwurf entwickelten Schaltung kann eine Platine entworfen werden. Hierf\u00fcr wurde, wie bereits erw\u00e4hnt, das ECAD-Programm KiCad verwendet, um die entworfene Schaltung auf einer Platine umzusetzen. F\u00fcr die ausgew\u00e4hlten Komponenten m\u00fcssen jedoch die entsprechenden Footprints gefunden werden. Ein Footprint definiert die Fl\u00e4che und die Bohrungen, die eine Komponente ben\u00f6tigt, um auf der Platine montiert zu werden. Dar\u00fcber hinaus werden 3D-Modelle ausgew\u00e4hlt, um eine bessere 3D-Ansicht in KiCad zu erm\u00f6glichen und m\u00f6gliche \u00dcberlappungen der Komponenten besser zu erkennen. Daf\u00fcr werden die Webseiten der Hersteller besucht, um die ben\u00f6tigten Dateien zu finden. Diese sind oft bereits verf\u00fcgbar, jedoch nicht immer. In solchen F\u00e4llen ist es notwendig, mehrere Webseiten zu durchsuchen, um die erforderlichen Dateien zu finden, beispielsweise \u00fcber Plattformen wie Ultra Librarian und SnapMagic. [BK_17] [BK_18] Auf diesen Plattformen k\u00f6nnen Symbole, Footprints und 3D-Modelle f\u00fcr viele Komponenten gefunden werden. Wenn man aus einer Schaltung eine Platine erstellen m\u00f6chte, werden die Komponenten mit den dazugeh\u00f6rigen Footprints im PCB-Design-Programm bereits platziert angezeigt. Es ist dann erforderlich, sie an die richtigen Positionen zu bewegen, die Verdrahtung vorzunehmen und die Grenzen der Platine festzulegen. Anschlie\u00dfend muss ein Ground Polygon sowohl auf der oberen als auch auf der unteren Seite der Platine gezogen werden. Dabei sind die Designregeln des jeweiligen PCB-Herstellers zu beachten. In diesem Fall werden die Designregeln des Herstellers Aisler ber\u00fccksichtigt, wie beispielsweise die Gr\u00f6\u00dfe der Platine, die Gr\u00f6\u00dfe der Vias usw. [BK_19] Die einzelnen Schritte werden in den folgenden Abschnitten erkl\u00e4rt.  </p> <p>Platzierung Das Platzieren der Komponenten an den richtigen Stellen ist eine wichtige Aufgabe, bei der einige wesentliche Aspekte ber\u00fccksichtigt werden m\u00fcssen. Es ist wichtig sicherzustellen, dass platzierte Komponenten sich nicht gegenseitig mit ihren Geh\u00e4usen st\u00f6ren. Ebenso spielt der Abstand zwischen den Komponenten eine entscheidende Rolle. Insbesondere f\u00fcr das manuelle L\u00f6ten ist es vorteilhaft, wenn die Komponenten ausreichend Abstand zueinander haben. Ein weiterer wichtiger Aspekt ist der Einfluss der Platzierung der Komponenten auf das Routing bzw. die Verdrahtung der Verbindungen innerhalb der Schaltung.  </p> <p>Routing Die Komponenten m\u00fcssen gem\u00e4\u00df dem Schaltungsentwurf verbunden werden. F\u00fcr das System wird eine Zweischichtplatine entworfen, die zwei Ebenen bietet, auf denen das Routing durchgef\u00fchrt werden kann. Obwohl das Routing manuell durchgef\u00fchrt werden k\u00f6nnte, wurde ein Autorouter verwendet, da es mit 25 Komponenten schwierig w\u00e4re, alles von Hand zu routen. Die Nutzung eines Autorouters reduziert zudem das Risiko von Fehlern, da er nach festgelegten Regeln stets optimal und korrekt routet. F\u00fcr die Platine wurde der Autorouter mit dem Namen Freerouting in KiCad verwendet. [BK_20] Um Freerouting zu nutzen, muss zun\u00e4chst aus dem Platinen-Designfenster eine .DSN-Datei exportiert und in Freerouting importiert werden. Das Ergebnis ist eine .SES-Datei (Specctra Session File), die anschlie\u00dfend wieder in KiCad importiert wird, um das Routing des Autorouters zu \u00fcbernehmen. Eine detaillierte Anleitung zum Umgang mit Freerouting findet sich im offiziellen GitHub. [BK_20] Der Autorouter kann gut konfiguriert werden, z.B. bez\u00fcglich der Routenbreite, der Anzahl der Vias (Vias sind kleine Bohrungen, die beim Wechsel zwischen der oberen und unteren Seite der Platine verwendet werden), usw. \u00a0</p> <p>Grenzen und Ground Polygon Um die Platine auf die gew\u00fcnschte Gr\u00f6\u00dfe zu bringen, m\u00fcssen die Grenzen definiert werden. Dies kann entweder vor oder nach dem Routing erfolgen. \u00a0 Wie bereits erw\u00e4hnt, wird auch ein Ground Polygon \u00fcber beiden Seiten gezogen. Dies dient mehreren Zwecken: Eine gute Masseverbindung reduziert St\u00f6rungen und verbessert die Signalintegrit\u00e4t, da die Ground-Fl\u00e4che als niederohmiger Pfad f\u00fcr R\u00fcckstr\u00f6me fungiert. Ein gro\u00dffl\u00e4chiges Ground-Polygon kann elektromagnetische St\u00f6rungen (EMI) reduzieren, indem es als Abschirmung fungiert und Hochfrequenzsignale ableitet. Zudem hilft ein gro\u00dfes Ground-Polygon, Potenzialunterschiede auf der Platine zu minimieren, was wichtig ist, um unerw\u00fcnschte Spannungsabf\u00e4lle oder Spannungsspitzen zu vermeiden. [BK_21] </p> <p>Ergebnis Die fertige Platine sieht am Ende so aus, wie auf Abildung 7.xx dargestellt ist. Die rote Fl\u00e4che repr\u00e4sentiert das Ground-Polygon auf der oberen Seite und die blaue Fl\u00e4che das Ground-Polygon auf der unteren Seite der Platine. Die zahlreichen Vias dienen dazu, die Ground-Polygone beider Seiten miteinander zu verbinden. Dies ist besonders wichtig, wenn auf einer Seite keine direkte Verbindung zum Ground m\u00f6glich ist, zum Beispiel aufgrund anderer Leiterbahnen oder Komponenten.  </p> <p> Fertiges Platinendesign </p> <p>Wenn man auf 3D-Ansicht wechselt, wurden alle Bauteile, mit seinen 3D-Modellen sichtbar, wie auf Abildung 7.xx zu sehen ist. Es wurde ein Raytracing-Effekt verwendet, um die Bauteile realistischer darzustellen.</p> <p> 3D-Ansicht von der Platine </p>"},{"location":"Hardware/#zusammenbau-der-platinen","title":"Zusammenbau der Platinen","text":"<p>Benjamin Klaric </p> <p>Nachdem die Platine und alle anderen Bauteile angekommen sind, wurde mit dem Zusammenbau der Platinen begonnen. Da viele Bauteile mittels SMT (Surface Mounted Technology) mit der Platine verbunden sind, ist es normalerweise sinnvoll, das L\u00f6ten mit einem Reflow-Ofen durchzuf\u00fchren. Daf\u00fcr ben\u00f6tigt man jedoch ein sogenanntes Stencil. Ein Stencil ist ein kleines Metallteil mit L\u00f6chern, die den Pads (Kontakten f\u00fcr die Bauteile auf der Platine) entsprechen. Mit einem Stencil kann die L\u00f6tpaste viel einfacher und pr\u00e4ziser auf die Pads aufgetragen werden. Leider konnte aus Kostengr\u00fcnden kein Stencil bestellt werden, und das manuelle Auftragen der Paste auf 50 Pads ist sehr zeitaufwendig. Deshalb wurde das L\u00f6ten von Hand durchgef\u00fchrt. Die verl\u00f6tete Platine ist in Abildung 7.xx zu sehen.</p> <p> Fertige Platine ohne Mikrocontroller und Pin Headers </p>"},{"location":"Hardware/#gehause","title":"Geh\u00e4use","text":"<p>Jannis Gr\u00f6ger</p>"},{"location":"Hardware/#anforderungen","title":"Anforderungen","text":"<p>Beim Entwurf des Geh\u00e4use f\u00fcr das Low Power Raumdisplay sind die funktionalen Anforderungen einfach gehalten. Da das Ger\u00e4t im Einsatz sp\u00e4ter station\u00e4r platziert ist, ist es weder mechanischen St\u00f6\u00dfen noch einer Art von Vibration zu sch\u00fctzen. Zudem wird es nicht in der Hand bedient, weshalb es auch keinen mechanischen Druck ausgesetzt ist. Daher ist nicht auf ein besonders robustes Material zu achten.</p> <p>Da der Einsatzort haupts\u00e4chlich im Geb\u00e4udeinneren vorgesehen ist,  ist ein Schutz gegen jegliche Art von Wasser zu vernachl\u00e4ssigen. Da das Display als Bendienung zwei Benutzerkn\u00f6pfe besitzt, muss das Geh\u00e4use gegen Ber\u00fchren mit Fingern gesch\u00e4tzt werden, also sollte der Schutz gegen Ber\u00fchrung mindestens der Schutzart zwei zugeordnet werden k\u00f6nnen. [JG_02]</p> <p>Die Low Power Raumanzeige besitzt elektronische Komponenten, die keine gro\u00dfen W\u00e4rmemengen produzieren. Lediglich beim Laden der Akkupacks k\u00f6nnte ein kritische W\u00e4rmemenge entstehen, weswegen diese leicht aus dem Geh\u00f6use entfernbar sein sollten, dass beim Laden genug Abw\u00e4rme durch nat\u00fcrliche Konvektion gegeben ist.</p> <p>Da die Informationsanzeige mit WLAN mit dem Ger\u00e4t des Betreibers kommunziert, Sollte das Geh\u00e4use die Komponenten nicht zu sehr elektromagnetisch von au\u00dfen abschirmen und auch elektromagnetische Felder nach au\u00dfen hin zulassen, da ansonten die Kommunkation gest\u00f6rt werden und das Displaymodul nicht mehr seine volle Funktionsf\u00e4higkeit aufweisen kann.</p>"},{"location":"Hardware/#design","title":"Design","text":"<p>Zum Entwickeln des 3D-Modells wird die CAD-Software \"Autodesk Fusion\" genutzt. Das Vorgehen hierbei besteht prim\u00e4r aus der Erstellung einer Skizze, aus der dann verschiedene Fl\u00e4che extrudiert werden. Um komplexere Konstruktionen zu erlauben, wird dieses Vorgehen wiederholt, wobei die Skizzenfl\u00e4che eine Oberfl\u00e4che einer bereits vorhandenen Extrusion ist. Die beiden Geh\u00e4use bestehen jeweils aus drei Teilen: </p> <ul> <li>Einer Front, in der das Display sitzt</li> <li>Einer Halterung f\u00fcr die Platinen des Displays, die an der Front angebracht wird</li> <li>einer R\u00fcckseite, in der an der R\u00fcckwand die Halterungen f\u00fcr Akkupack und selbst entworfener Platine befestigt sind.</li> </ul> <p>Diese Teile werden jeweil mit Gewindeschrauben mit 2,5mm durchmesser verbunden. Die R\u00fcckseite kann konstruktionstechnisch nochmal in einen Quader f\u00fcr elektronische Bauteile und einer Schale f\u00fcr das Display unterteilt werden. Diese Teile sind jedoch fest an ihren Kanten verbunden (vgl ABB !!!!!!!!!!!!!!!!!!!!!!). Im folgenden werden die einzelnen Merkmale, die dem Geh\u00e4use hinzugef\u00fcgt werden, erl\u00e4utert.</p> <p>Um die einzelnen Komponenten im Inneren des Geh\u00e4uses zu fixieren, m\u00fcssen f\u00fcr jede einzelne eine spezifische Halterung angefertigt werden. Die Akkupacks werden durch vier L-f\u00f6rmige S\u00e4ulen, die jeweils eine Ecke der Packs umschlie\u00dfen, vor dem Hin und Herrutschen bewahrt. Das Herausfallen nach Vorne verhindert ein Steg, der mit zwei Schrauben \u00fcber dem Akkupack angebracht wird. Die Platine wird durch zwei gegen\u00fcberliegende Nuten in der Unterseite des Geh\u00e4uses und einer konstruierten Wand im Geh\u00e4use gehalten, indem sie seitlich in die Nuten eingeschoben wird. Hierbei wird an der Seite des Geh\u00e4uses eine Bohrung angebracht, um auch im montierten Zustand der Low Power Raumanzeige Zugang zum USB-C Anschluss des Mikrocontrollers zu haben.</p> <p>Da das Displaymodul wie oben erw\u00e4hnt nicht in der Hand gehalten wird sondern fest vor bspw einem H\u00f6rsaal einer Hochschule platziert werden soll, werden an der R\u00fcckwand des Geh\u00e4uses zwei Langloch-Einh\u00e4nge\u00f6ffnungen angebracht. Um das Display dann an der Wand aufzuh\u00e4ngen, m\u00fcssen einfach zwei Schrauben in der Wand eingeschraubt werden. Diese werden in die \u00d6ffnungen eingef\u00e4delt, dann wird das Displaymodul nach unten geschoben und ist damit an der Wand fixiert. Damit das Displaymodul auch mobil eingesetzt werden kann, wie beispielsweise bei einem Messestand, wird die untere Fl\u00e4che des Geh\u00e4uses angeschr\u00e4gt, dass man das Display stabil auf einen Tisch stellen kann.</p> <p>Wie bereits genannt, soll die Bedienung des Low Power Raumdisplays \u00fcber einen Bentzerknopf gesteuert werden. Um die Benutzerfreundlichkeit zu gew\u00e4hrleisten, wird dieser an der Front des Displaymoduls angebracht, damit er leicht zug\u00e4nglich und f\u00fcr alle sichtbar ist. Zus\u00e4tzlich sollen die eingebauten \"Boot\"- und \"Reset\"-Kn\u00f6pfe des ESP32 ebenso benutzbar bleiben, allerdings nur f\u00fcr den System-Administrator. Deshalb werden hierf\u00fcr kleine L\u00f6cher an der R\u00fcckseite des Geh\u00e4uses angebracht, dass die Kn\u00f6pfe \u00e4hnlich wie beim SIM Karten Slot eines Handys mit Hilfe eines schmalen Werkzeugs gedr\u00fcckt werden k\u00f6nnen. Durch die Platzierung auf der R\u00fcckseite sind die L\u00f6cher zun\u00e4chst f\u00fcr die Person, die vor dem Display steht, nicht sichtbar, sondern erst dann erreichbar, wenn das Displaymodul von der Wand genommen wird.</p> <p>Die Halterungen f\u00fcr die Platinen der Beiden Epaper-Displays sind einfache Konstruktionen aus schmalen Stegen, die zylinderf\u00f6rmige Extrusionen besitzen, um die Platinen festzuschrauben. Hierbei unterscheiden sich die beiden Halterungen in ihren Dimensionen, da nicht nur die beiden Displays selbst, sondern auch die zugeh\u00f6rigen Platinen unterschiedliche Ma\u00dfe besitzen.</p> <p>Die Front des Geh\u00e4uses besitzt einen rechteckigen Ausschnitt mit einer Falz nach innen, in die das Display dann gelegt wird. Um das Display vor hineinfallen ins Geh\u00e4use zu sch\u00fctzen, wird einmal die Platinenhalterung direkt an der R\u00fcckseitige des Displays angebracht und zus\u00e4tzlich noch kleine \u00dcberh\u00e4nge konstruiert, die das Display von hinten st\u00fctzen. Desweiteren ist ein rechteckigen Ausschnitt f\u00fcr den Benutzerknopf in der Front angebracht. </p>"},{"location":"Hardware/#prototyping","title":"Prototyping","text":"<p>Da es sich bei dem LoW Power Raumdisplay um eine Projektarbeit handelt und zun\u00e4chst keine Serienproduktion vorgesehen ist, beschr\u00e4nkt sich die Entwicklung des Geh\u00e4uses auf den Entwurf zweier Prototypen, einmal mit einem 1.3-Zoll-Display und einmal mit einem 9.7-Zoll-Display. Hierbei wird das Rapid-Prototyping-Verfahren des Fused-Deposition-Modelling angewandt, da es neben geringen Kosten auch genug Stabilit\u00e4t f\u00fcr die genannten Anforderungen aufweist. Zudem ist es dem Projektteam m\u00f6glich, direkt im eigenen Labor der Technischen Hochschule Augsburg dieses Verfahren anzuwenden. Es werden mehrere sogenannte FDM-Drucker zur Verf\u00fcgung gestellt, ebenso wie die CAD-Software Inventor-Softwarepaket der Firma Autodesk. [JG_04]</p> <p>Die verwendeten FDM-Drucker beschr\u00e4nken sich auf die Modelle 2 Extended+, 3 und S5 der Marke Ultimaker. Diese Drucker verwenden Filamente aus Polyactiden, kurz PLA, oder Polyethylenterephtalat mit Glykolmodifikation, auch PETG genannt mit einem Durchmesser von 2,85mm<sup>2</sup>. Die Materialien unterscheiden sich nur leicht in ihren Eigenschaften, wobei PETG stabiler und haltbarer ist, PLA dagegen ist hitzebest\u00e4ndiger und biologisch abbaubar.[JG_05] Beide Materialien sind in ihrer Stabilit\u00e4t und hitzebest\u00e4ndigkeit f\u00fcr den Zweck des Low Power Displays ausreichend.</p>"},{"location":"Hardware/#zusammenbau-des-displaymoduls","title":"Zusammenbau des Displaymoduls","text":""},{"location":"Hardware/#strommessung-von-mikrocontroller-und-display","title":"Strommessung von Mikrocontroller und Display","text":""},{"location":"Hardware/#versuchsaufbau","title":"Versuchsaufbau","text":"<p>Mario Wegmann</p> <p>Der Prozess, um ein Bild per WLAN zu empfangen, zu verarbeiten und es auf einem ePaper Display darzustellen, ist sehr umfangreich und w\u00e4hrend der verschiedenen Phasen ist der Stromverbrauch sehr schwankend. Daher kann mit einer statischen Strommessung kein aussagekr\u00e4ftiges Messergebnis produziert werden. Um den Strom dynamisch zu messen und dabei schnelle \u00c4nderungen sichtbar zu machen, eignet sich daher ein Oszilloskop als Messinstrument. Da das Oszilloskop jedoch nur Spannungen messen kann, muss hier der Umweg \u00fcber einen Shunt-Widerstand gemacht werden. Der Shunt-Widerstand wird dabei in Reihe zwischen der zu messenden Last und der Masse geschaltet, mit einem Tastkopf an beiden Enden des Shunt-Widerstands verbunden, kann nun der Spannungsabfall \u00fcber den Shunt-Widerstand gemessen werden. Abschlie\u00dfend kann \u00fcber das Ohm'sche Gesetz aus dem Widerstandswert und der Spannung der durchflossene Strom berechnet werden. Viele Oszilloskope bieten daher auch die M\u00f6glichkeit an, die Achsenbeschriftung auf mA umzuschalten, um Messergebnisse mit der korrekten Einheit festhalten zu k\u00f6nnen. Es muss jedoch beachtet werden, dass das Oszilloskope nicht automatisch das Ohm'sche Gesetz anwendet, da es keine Kenntnis \u00fcber den Widerstandswert hat. Somit muss dies bei den Messergebnissen mit verrechnet werden oder alternativ darauf geachtet werden, dass der Widerstand wert des Shunt-Widerstands 1 \u03a9 so genau wie m\u00f6glich erreicht. Des Weiteren ist unbedingt darauf zu achten, dass der Shunt-Widerstand zwischen Last und Masse h\u00e4ngt, wenn es sich um eine netzbetriebene Schaltung handelt. Zwar w\u00e4re das Messergebnis theoretisch auch korrekt, jedoch w\u00fcrde durch die Erdung der Masse am Tastkopf ein Kurzschluss entstehen, wenn die Masse vom Tastkopf mit einem anderen Spannungspegel, als der Masse der Schaltung, verbunden wird. Dieser Kurzschluss k\u00f6nnte das Oszilloskop besch\u00e4digen. </p> <p>In  erkennt man den Versuchsaufbau f\u00fcr die Messung. Als Spannungsquelle dient ein Labornetzteil. Vom Pluspol des Labornetzteils f\u00fchrt ein Draht zum V<sub>cc</sub> Pin des ESP32. Von GND des ESP32 f\u00fchrt ein Draht zum 1 \u03a9 Shunt Widerstand. An diesem ist auch der Tastkopf des Oszilloskopes angeschlossen. Nach dem Shunt Widerstand f\u00fchrt ein Draht zu einem Multimeter. Das Multimeter dient zur Kontrolle, ob die vom Oszilloskop ausgegebenen Werte plausibel sind. Abschlie\u00dfend ist der zweite Kontakt vom Multimeter mit dem Minuspol des Labornetzteils verbunden. </p> <p> Der Versuchsaufbau mit Oszilloskop, Multimeter und Labornetzteil </p>"},{"location":"Hardware/#messergebnisse","title":"Messergebnisse","text":"<p>Mario Wegmann </p> <p>In Tabelle 7.xx kann man einen kompletten Refresh des 7,3 Zoll gro\u00dfen Displays erkennen. Hierbei wird auf dem ePaper Display zuerst wei\u00df gestellt, anschlie\u00dfend wird nach einer Pause eine in der Firmware hart codierte Bitmap auf dem Display angezeigt. Zum Abschluss wird erneut ein wei\u00dfes Bild dargestellt. In diesem Teilversuch wurde der Stromverbrauch vom WLAN noch nicht gemessen. F\u00fcr diesen Versuch wurde Democode von Hersteller WaveShare verwendet, welcher in der Quelle zu finden ist [MW_09].</p>  Der Stromverbrauch aufgeteilt in Zeitabschnitte beim 7,3\" Display  Bereich Zustand Avg. Strom  [mA] Zeit [s] 1. Bitmap an ePaper Display \u00fcbertragen 66,13 1,032 2. Bildschirminhalt leeren 64.05 1,624 3. Bildschirminhalt leeren 74,64 2,608 4. Bildschirminhalt leeren 73,67 2,689 5. Bildschirminhalt leeren 66,06 3,675 6. Bildschirminhalt leeren 62,05 2,214 7. Delay 48,99 0,994 8. Bitmap an ePaper Display \u00fcbertragen 66,77 2,196 9. Bitmap darstellen 70,51 1,847 10. Bitmap darstellen 82,34 2,653 11. Bitmap darstellen 82,03 2,703 12. Bitmap darstellen 70,94 3,695 13. Bitmap darstellen 66,15 2,009 14. Delay 49,19 3,001 15. Bitmap an ePaper Display \u00fcbertragen 67,69 2,021 16. Bildschirminhalt leeren 62,90 1,785 17. Bildschirminhalt leeren 73,83 2,728 18. Bildschirminhalt leeren 73,51 2,604 19. Bildschirminhalt leeren 65,99 3,646 20. Bildschirminhalt leeren 61,93 2,120 21. Delay 49,09 2,008 22. Deep-sleep 9,777 5,001 <p>Benjamin Klaric </p> <p>In Abbildung 7.xx sind die geplotteten Werte von der Tabelle 7.xx graphisch dargestellt.</p> <p> Plot von dem Stromvebrauch in Zeitabschnitten beim 7,3\" Display </p> <p>Mario Wegmann </p> <p>In Tabelle 7.xx sieht man die Messwerte vom Stromverbrauch beim 9,7 Zoll Display. Hierbei wird der ESP32 und das zugeh\u00f6rige Treiber-Board mit Strom versorgt, anschlie\u00dfend das Treiber-Board initialisiert und nach den Eigenschaften des angeschlossenen ePaper Displays gefragt. Erst danach wird die Bitmap zuerst an das Treiber-Board \u00fcbertragen und dann vom Treiber-Board auf das Display. Abschlie\u00dfend wird das Treiber-Board in den Idle wieder gesetzt und zum Schluss der ESP32 zus\u00e4tzlich in den Deep-sleep. F\u00fcr diesen Versuch wurde Democode von GitHub verwendet, welcher in der Quelle zu finden ist [MW_10].</p>  Der Stromverbrauch aufgeteilt in Zeitabschnitte beim 9,7\" Display  Bereich Zustand Avg. Strom  [mA] Zeit [s] 1. Idle mit angeschalteten Treiber-Board 67,54 0,929 2. Init des Treiber-Boards 94,87 0,948 3. Auslesen der Informationen des angeschlossenen ePaper Displays 112,2 0,497 4. \u00dcbertragen der Bitmap \u00fcber SPI an das Treiberboard 103,4 0,460 5. \u00dcbertragen der Bitmap an das Display 105,2 0,570 6. Bildschirminhalt auf dem ePaper Display darstellen 109,9 0,865 7. Idle mit angeschalteten Treiber-Board 66,48 0,954 8. Deep-sleep angeschalteten Treiber-Board 29,22 5,002 <p>Benjamin Klaric </p> <p>In Abbildung 7.xx sind die geplotteten Wertee von der Tabelle 7.xx graphisch dargestellt.</p> <p> Plot von dem Stromvebrauch in Zeitabschnitten beim 9,7\" Display </p>"},{"location":"Hardware/#interpretation","title":"Interpretation","text":"<p>Benjamin Klaric </p> <p>Der Stromverbrauch sowohl des 7,3-Zoll- als auch des 9,7-Zoll-Displays ist w\u00e4hrend eines vollen Refreshs angemessen. Es gibt jedoch einige Dinge zu ber\u00fccksichtigen, n\u00e4mlich dass ein voller Refresh nicht jedes Mal durchgef\u00fchrt werden muss und dass der Stromverbrauch in Verbindung mit der Wi-Fi-Nutzung nicht in dieser Konfiguration gemessen wurde. Die Erkl\u00e4rung daf\u00fcr, dass nicht bei jeder Gelegenheit ein voller Refresh erforderlich ist, liegt an den Spezifikationen des Displays. Gem\u00e4\u00df diesen Spezifikationen soll das Display nach einer l\u00e4ngeren Zeit ohne Refresh einen vollst\u00e4ndigen Refresh durchf\u00fchren. [BK_22] Dies reduziert die Zeitspanne, in der das System unter Volllast arbeitet, und damit auch den durchschnittlichen Verbrauch. Der Wi-Fi-Verbrauch wurde nicht ber\u00fccksichtigt, da dieser von vielen Parametern abh\u00e4ngt, die zum Zeitpunkt der Strommessung noch nicht optimiert waren. Dazu geh\u00f6ren die Code-Optimierung, die Steuerung der Wi-Fi-Nutzung und die Tatsache, dass das Modul, das f\u00fcr die Strommessung verwendet wurde, sp\u00e4ter nicht mehr genutzt wurde aufgrund des hohen Stromverbrauchs im Deep Sleep Modus. Im n\u00e4chsten Abschnitt erfolgt ein genauerer Blick auf die gemessenen Werte und deren Bedeutung.  </p> <p>Stromverbrauch von 7,3\" Display Das 7,3\" Display hat eine l\u00e4ngere Refresh-Zeit, was darauf zur\u00fcckzuf\u00fchren ist, dass es vier anstatt zwei Farben darstellen kann. Diese zus\u00e4tzliche Farbunterst\u00fctzung f\u00fchrt zu einer l\u00e4ngeren Arbeitszeit und somit zu einem erh\u00f6hten Stromverbrauch. Der durchschnittliche Stromverbrauch des Displays kann anhand des Plots aus Abbildung 7.xx berechnet werden. Dieser liegt bei 62 mA \u00fcber einen Zeitraum von 54,853 Sekunden, wobei der Verbrauch stark von der L\u00e4nge der Arbeitszeit abh\u00e4ngt. Durch den Verzicht auf einen vollst\u00e4ndigen Refresh und die Nutzung eines Mikrocontrollers wie dem XIAO ESP32-S3, der im Deep Sleep Modus einen sehr geringen Stromverbrauch von 14 \u03bcA im Vergleich zu 9,78 mA aufweist, kann der durchschnittliche Stromverbrauch des Systems signifikant reduziert werden. Dies f\u00fchrt zu einer effizienteren Nutzung und einer Verringerung des Gesamtenergiebedarfs \u00fcber l\u00e4ngere Zeitr\u00e4ume.  </p> <p>Stromverbrauch von 9,7\" Display Das 9,7-Zoll-Display zeichnet sich durch eine sehr kurze Refresh-Zeit aus, was jedoch zu einem h\u00f6heren Stromverbrauch bei jedem Refresh f\u00fchrt. \u00dcber einen Zeitraum von 4,885 Sekunden betr\u00e4gt der durchschnittliche Stromverbrauch 97 mA. Dieser erh\u00f6hte Durchschnittsverbrauch wird durch die verk\u00fcrzte Betriebszeit ausgeglichen. In  wird verdeutlicht, dass trotz des h\u00f6heren Stromverbrauchs des 9,7-Zoll-Displays der Gesamtenergieverbrauch aufgrund der schnellen Refresh-Zeit kompensiert wird.  </p>"},{"location":"Hardware/#a-d-wandler-messung","title":"A-D-Wandler Messung","text":"<p>Benjamin Klaric </p> <p>Wie bereit in 7.5 Schaltungsentwurf unter Akkuanschl\u00fcsse erw\u00e4hnt, wurde ein analoger GPIO-Pin des XIAO ESP32-S3 verwendet, um den Spannungspegel des Akkupacks zu \u00fcberwachen. \u00a0 Der XIAO ESP32-S3 bietet viele analoge Pins, wovon einer, n\u00e4mlich der A9-Pin, f\u00fcr die oben genannte \u00dcberwachung genutzt wird. Dazu wird an diesem Pin ein Spannungsteiler aufgebaut, bei dem zwei 220 k\u03a9 Widerst\u00e4nde parallel zu den Akku+ und Akku- Eing\u00e4ngen des Mikrocontrollers verbunden werden. Der Wert f\u00fcr die Widerst\u00e4nde wurde so gew\u00e4hlt, weil der Spannungsteiler immer Strom zieht, auch wenn sich der Mikrocontroller im Deep Sleep befindet, da die Widerst\u00e4nde direkt mit dem Akkupack verbunden sind. Mit zwei 220 k\u03a9 Widerst\u00e4nden und einer Spannung zwischen 3,5V und 4,2V ergibt sich ein Verbrauch zwischen 8 \u00b5A und 9,5 \u00b5A gem\u00e4\u00df dem Ohm'schen Gesetz, was akzeptabel ist. \u00a0 Allerdings muss man darauf achten, dass die Widerstandswerte m\u00f6glichst nah beieinander liegen, damit sich die Spannung m\u00f6glichst genau halbiert. Falls die Widerst\u00e4nde nicht exakt gleich sind, kann man den Multiplikationsfaktor so anpassen, dass die ungenaue Aufteilung der Spannung ber\u00fccksichtigt wird, indem man die Spannungsteiler-Gleichung aufstellt und anpasst, wie in Abildung 7.xx zu sehen ist. Dabei entspricht das Widerstandsverh\u00e4ltnis dem Multiplikationsfaktor.  </p> <p> Umgeformte Spannungsteilerformel </p> <p>Die Messung muss man auch in Code implementieren, wobei von dem Hersteller der Code zur Verf\u00fcgung gestellt ist. [BK_23] \u00a0 Nach der Testmessung wurde festgestellt, dass die Messung nicht ganz genau ist, mit einem Fehler von etwa 100 mV. Dies k\u00f6nnte auf mehrere Gr\u00fcnde zur\u00fcckzuf\u00fchren sein, die sich aus dem Prinzip der Messung \u00fcber einen analogen Pin mit Analog-Digital-Wandler (A-D-Wandler) ergeben. \u00a0 Der A-D-Wandler im Mikrocontroller verwendet einen Abtastmechanismus, der kleine, schnelle Stromst\u00f6\u00dfe verursacht. Diese k\u00f6nnen zu momentanen Spannungsabf\u00e4llen aufgrund des hohen Widerstands der Spannungsteilerwiderst\u00e4nde f\u00fchren. Daher beeinflussen hochfrequentes Rauschen oder Schwankungen in der Batteriespannung direkt den gemessenen Wert. Bei der Abtastung wird ein interner Kondensator kurzzeitig mit dem analogen Eingangspin verbunden. Dieser interne Kondensator muss sich schnell auf die Eingangsspannung aufladen. Wenn der Widerstand des Spannungsteilers hoch ist, kann er sich m\u00f6glicherweise nicht schnell genug aufladen, was zu Messfehlern f\u00fchrt. \u00a0 Um dieses Problem zu l\u00f6sen, wurde ein Pufferkondensator von 100 nF parallel zu Akku+ und Akku- hinzugef\u00fcgt. Dieser Wert ist ein typischer Wert f\u00fcr das Puffern in solchen Anwendungen. Dieser Kondensator fungiert als kleiner Energiespeicher, der dem A-D-Wandler die erforderliche Stromversorgung ohne signifikante Spannungsabf\u00e4lle erm\u00f6glicht. Dar\u00fcber hinaus filtert er hochfrequentes Rauschen heraus und reduziert die Auswirkungen von Schwankungen in der Batteriespannung. Wenn man Abildung 7.xx betrachtet, ist eine verbesserte und stabilere Kurve der Messdaten mit dem Kondensator zu erkennen. F\u00fcr jeden Spannungspegel wurden 50 Datenpunkte sowohl mit als auch ohne Kondensator gemessen.  </p> <p> Plot von 50 Messwerten bei jedem Spannungspegel </p> <p>Allerdings besteht trotz der Verringerung des Fehlers noch ein Restfehler. Dies liegt, wie bereits erw\u00e4hnt, an den hohen Widerstandswerten, die aufgrund des hohen Stromverbrauchs nicht weiter reduziert werden k\u00f6nnen. \u00a0 Die Werte zeigen weniger Spitzen und bleiben stabiler bei einem bestimmten Wert, was von Vorteil ist. Zus\u00e4tzlich wird in der Software ein kleiner Offset hinzugef\u00fcgt. Eine andere Art der Messung k\u00f6nnte in Betracht gezogen werden, n\u00e4mlich nicht die genaue Messung des aktuellen Spannungswerts, sondern die Messung der \u00c4nderung in Bezug auf den zu Beginn gemessenen Wert. Genauer gesagt k\u00f6nnte zu Beginn der Spannungswert des Akkupacks mit einem A-D-Wandler gemessen werden, und dann k\u00f6nnte der Abfall in Bezug auf diesen Wert \u00fcberwacht werden, anstatt den aktuellen Spannungswert zu messen. M\u00f6glicherweise k\u00f6nnte dies bessere Ergebnisse liefern. Es ist bekannt, dass die Spannung bei einem voll geladenen Akkupack von 4,2V auf 3,5V abfallen darf, also um 0,7V. Dieser Abfall k\u00f6nnte auch bei der A-D-Wandler-Messung \u00fcberwacht werden. \u00a0 Leider war diese Art von Messung aus Zeitgr\u00fcnden nicht ausgetestet.  </p>"},{"location":"NAV/","title":"NAV","text":"<ul> <li>Startseite</li> <li>Einleitung</li> <li>Praktische und Theoretische Grundlagen</li> <li>Marktanalyse</li> <li>Teamorganisation</li> <li>Systemkonzept</li> <li>Hardware</li> <li>Firmware</li> <li>Webentwicklung</li> <li>Ergebnisse</li> <li>Fazit</li> <li>Glossar</li> <li>Beschreibung der L\u00f6sung</li> <li>\u00dcber LPRD</li> <li>Quellenverzeichnis</li> </ul>"},{"location":"PraktischeUTheoretischeGrund/","title":"Praktische und Theoretische Grundlagen","text":""},{"location":"PraktischeUTheoretischeGrund/#mikrocontroller-stasa-lukic","title":"Mikrocontroller @Stasa Lukic","text":"<p>Das Gehirn des Projektes ist ein Mikrocontroller, es gibte verschiedene arten von Mikrocontrollern die man vergleichen muss um einen f\u00fcr sich passenden Mikrocontroller zu finden. Im folgendem Unterkapitel werden die von uns ausgew\u00e4hlten Mikrocontroller genauer dargestellt, ihre Eigenschaften, nachteile und auch vorteile.  </p> <p>F\u00fcr das Projekt haben wir uns Priorit\u00e4ten f\u00fcr den Mikrocontroller gesetzt. Als ersters sollte er genug Speicher haben sodas kein weiterer externer Speicher genutzt werden muss, dies w\u00fcrde unsere Kosten und gleichzeitig den Strombedarf senken da ein externes Speicher Modul Strom verbraucht und eine Latenz verursacht die l\u00e4ngere arbeitszeiten bedeuten. WLan sollte intern auf dem Board verbaut seien da unser Mikrocontroller unter keiner so hohen Last arbeiten wird, das unsere Netzwerk Last auf einen sub Mikrocontroller verlagert werden m\u00fcsste. Als letztes sollte der Mikrocontroller \u00fcber einen deep sleep verf\u00fcgen[STA_06]. So w\u00fcrden wir am meisten Strom sparen da unserer Mikrocontroller nach beenden einer aufgabe (wie z.b. ein neues Bild darstellen) wahrscheinlich f\u00fcr l\u00e4ngere Zeit keine Aufgaben hat oder bekommt. Der Mikrocontroller sollte eine Schnittstelle f\u00fcr SPI besitzen f\u00fcr eine m\u00f6gliche schnelle daten\u00fcbertragung mit dem Display.  </p> <p>In  sind die Mikrocontroller mit ihren Eigenschaften aufgelistet. Es wurden von insgesamt 3 Marken recharchiert. Diese w\u00e4hren Espressif, STMicroelectronics und Raspberry Pi.</p> <p>Die Mikrocontroller wurden nicht als SMD Chip gekauft sondern als development boards. F\u00fcr Espressif recharchierten wir die XIAO ESP32 S3 und XIAO ESP32 C3 Boards von Seeed Studio und Die D1 Mini ESP8266 Boards von AZ-Delivery. Bei dem STM32 guckten wir uns den STM32WL55 an. Der RP2040 ist der RASP PI PICO von Raspberyy Pi.</p>  Eigenschaften der Mikrocontroller  Eigenschaften ESP32 S3 [STA_01] ESP32 C3[STA_02] ESP8266 [STA_03] STM32 [STA_04] RP2040 [STA_05] Prozessor Dual-core240MHz Single core160MHz Singlecore160MHz Singlecore48MHz Dual-core133MHz Speicher 8MB Flash  8MB PSRAM 400KB SRAM4MB Flash 4MB Flash 256KB Flash64KB RAM 2MB Flash256KB RAM Wifi 2,4GHz WLAN 2,4GHz WLAN802.11b/g/n 2,4GHz WLAN802.11n 2,4GHz LoRa Keins Spannung 3,3V 3,3V 3,3V 5V 5V Idle Strom 22mA 24.4mA Maximum 500mA * 15 mA 24mA Sleep Strom 14 \u03bcA 43\u03bcA 360nA 1,3mA Schnittstellen SPI, UART, IIC, IIS, 11xGPIO, 9xADC SPI, IIC, UART, 11xGPIO, 9xADC SPI, IIC, UART, 9xGPIO, ADC 2xSPI, 3xIIC, 2xUART, 43xGPIO SPI, 2xIIC, 2xUART, 30xGPIO Weitere  Eigneschaften Reset ButtonBoot buttonBattery Charge Chip f\u00fcr 100mAExterne Antenne Boot buttonReset ButtonBattery Charge Chip f\u00fcr 100mAExterne Antenne Reset button m\u00f6glichAntenne in Platine verbaut <p>*Keine Angaben auser Maximum  </p>"},{"location":"PraktischeUTheoretischeGrund/#stromsparende-display-technologien-stasa-lukic","title":"Stromsparende Display Technologien @Stasa Lukic","text":"<p>f\u00fcr dieses Projekt brauchen wir ein Display das so wenig Strom verbraucht wie m\u00f6glich, damit unser Room display solange wie m\u00f6glich mit einer Akku Ladung aush\u00e4lt. Wir fokussierten unsere Recherche auf ePaper, bistabile LCDs und OLED displays.  </p>"},{"location":"PraktischeUTheoretischeGrund/#oled","title":"OLED","text":"<p>OLED Bildschirme haben eine sehr gute Bildqualit\u00e4t und einen weiten betrachtungswinkel. Anstatt Halbleiter werden in den LEDs  Organische Molek\u00fchle verwendet die Licht erzeugen. Diese Molek\u00fchle befinden sich zwischen ander Anode und einer Kathode. Flie\u00dft nun Strom wird blau und gelbes Licht erzeugt, mit Farbfiltern entstehen die Restlichen Farben. OLED Bildschirme k\u00f6nnen sehr helle Bilder zu erzeugen mit starkem Kontrast oder Farbstarke Bilder, dies verbraucht aber mehr Strom mit mehr Helligkeit, was f\u00fcr dieses Projekt ein Nachteil ist. Ein Vorteil ist das schwarze Pixel kein Strom verbrauchen gegen\u00fcber \u00e4lteren Displays[STA_09].    </p>"},{"location":"PraktischeUTheoretischeGrund/#bistabile-lcd","title":"Bistabile LCD","text":"<p>Bistabile LCD Displays haben den Vorteil das sie im gegensatz zu LCD keinen durchgehenden Stromverbrauch haben, Strom wird nur dann verbraucht wenn das Bild gewechselt wird. Daf\u00fcr benutzt das Display kleine Kristalle die mit Hilfe von einem Stromfluss einen von zwei zust\u00e4nden annehmen kann, der Kristall l\u00e4sst entweder Licht durch oder reflektiert es zur\u00fcck, womit ein ein Schwarz und Wei\u00df Bildschirm bauen kann. Benutzt mann mehrer Ebenen kann man sogar verschiedene Farben darstellen. Wenn das Bild des Displays nur selten ge\u00e4ndert wird, bedeutet es einen sehr niedrigen durchschnittlichen Strom verbrauch. Der Nachteil ist das das Aktuellisieren des Bildes 2 bis 3 Sekunden dauert[STA_08].  </p>"},{"location":"PraktischeUTheoretischeGrund/#epaper","title":"ePaper","text":"<p>ePaper hat ein \u00e4hnliches Konzept wie Bistabile LCD Displays, sie verbrauchen nur dann Strom wenn das Bild aktuellsiert wird. Hier werden geladene Farbpartikel in sehr kleinen Zellen eingesperrt. Je nach welche Ladung auf eine Zelle ausge\u00fcbt wird, werden manche Farbpartikel angezogen oder weggesto\u00dfen. Der Nachteil ist das die Aktuellsierung eines Bildes je nach ePaper Display technologie sehr lange dauern kann, das ist weil, wie man sich vorstellen kann man muss man einen Pixel mehrmals laden um wirklich alle Farbpartikel abzusto\u00dfen die man absto\u00dfen will oder genau umgekehrt. Das resultiert in einer Aktuelliesierungs rate von bis zu 26 Sekunden oder K\u00fcrzer je nach Farbleistung. Ein weiter Nachteil ist das Farbpartikel nur Negativ oder Positiv geladen werden k\u00f6nnen, was in nur 2 Farben resultiert. Durch mehrere Ebenen kann das Display mehrere Farben annehmen, aber bei weitem nicht so viele wie beim Bistablem LCD. Der Vorteil ist das sie noch weniger Strom verbauchen beim aktuellsieren als die Bistablien LCDs[STA_07].</p>"},{"location":"PraktischeUTheoretischeGrund/#akku-technologien","title":"Akku-Technologien","text":"<p>Benjamin Klaric</p> <p>Um das System m\u00f6glichst autark zu machen, wurde es mit einem Akku betrieben. In Vorgang mit der Auswahl von passenden Akku-Technologien wurden die drei meistverbreiteten verglichen, n\u00e4mlich die drei bedeutendsten Typen aus Lithium-Ionen-Akku Familie: klassische Lithium-Ionen-Akkus, oft benutzten Lithium-Polymer-Akkus und die sicheren Lithium-Eisen-Phosphat-Akkus. Genauer gesagt sollte man die Vor- und Nachteile von jeweiligen Akku-Typen genauer anschauen und dementsprechend eine Technologie ausw\u00e4hlen. In den n\u00e4chsten Abschnitt werden die drei genannten Technologien genauer angeschaut und die jeweiligen Vor- und Nachteile genannt.  </p> <p>Lithium-Ionen-Akkus (Li-Ion) Die meistverbreiteten Li-Ion-Akkus bieten relativ hohe Energiedichte, sind kosteng\u00fcnstig und langlebig. Die Li-Ion-Akkus kommen in verschiedenen Bauformen, wie z.\u00a0B. 18650, 21700 usw. Dieser Art von Akkus besteht aus eine negative Elektrode, bzw. Kathode aus Grafit und einer positiven Elektrode bzw. Anode aus Lithiumcobaltoxid (LiCoO<sub>2</sub>), Lithiumnickeldioxid (LiNiO<sub>2</sub>) oder Lithiummanganatoxid (LiMn<sub>2</sub>O<sub>4</sub>). Diese Wahl von Chemie bietet eine gute Zyklenfestigkeit, was nat\u00fcrlich der Langlebigkeit entspricht. Im geladenen Lithium-Ionen-Akkus erzeugt ein elektrochemischer Prozess Spannung zwischen den Elektroden. Lithium-Ionen (Li+) bewegen sich dabei durch den Elektrolyten zwischen festen \u00dcbergangsmetall- und Grafitstrukturen der Elektroden, getrennt durch einen Separator. Das Funktionsprinzip von Li-Ion-Akkus bezieht sich dabei auf die Verschiebung von Lithium-Ionen. So wird die elektromotorische Kraft erzeugt. [BK_01] Mit einer Nennspannung von 3,7V und der Entladekurve, die stabil \u00fcber einen Gro\u00dfteil der Entladung bei Nennspannung bleibt, was bei Abbildung 3.xx zu sehen ist. In der Abbildung sind vier verschiedene Kurven dargestellt. Die dunkelgr\u00fcne Kurve repr\u00e4sentiert die Spannung w\u00e4hrend des Ladevorgangs, w\u00e4hrend die dunkelblaue Kurve die Spannung w\u00e4hrend des Entladens zeigt. Die hellgr\u00fcne Kurve stellt den Strom w\u00e4hrend des Ladevorgangs dar, und die hellblaue Kurve zeigt den Strom w\u00e4hrend des Entladens. Alle vier Kurven sind gegen die Zeit geplottet.  </p> <p> Lade- (dunkelgr\u00fcn) und Entladekurve(dunkelblau) von einer Li-Ion-Knopfzelle [BK_02] </p> <p>Li-Ion-Akkus k\u00f6nnen aber nicht selber in Betrieb genommen werden, da die sich ohne eine Art von \u00dcberwachung tief entladen wurden oder beim Laden \u00fcberladen geworden sind. Dazu werden Li-Ion-Akkus immer mit einem Batteriemanagementsystem benutzt, kurz BMS gesagt. Ein BMS k\u00fcmmert sich darum, dass die Li-Ion-Akkus einen Cut-Off-Spannungspegel beim Laden und beim Entladen haben. Das BMS bietet auch Kurzschlussschutz und meistens eine \u00dcberstromerkennungsfunktionalit\u00e4t.  [BK_03] Li-Ion-Akkus, voll geladen, liegen bei ungef\u00e4hr 4,25V und entladen sich bis 2,5V, wenn die an einen BMS angeschlossen sind. \u00a0 Ein Merkmal von Li-Ion-Akkus ist die Art des Ladens, da sie eine spezielle Ladetechnik ben\u00f6tigen, n\u00e4mlich die sogenannte CC-CV-Methode (Constant Current - Constant Voltage). Genauer gesagt, werden die Akkus die ersten ~80% mit einem konstanten Strom geladen und die restlichen ~20% mit einer konstanten Spannung. Dieses Verfahren ist in Abbildung 3.xx zu sehen, dargestellt durch die gr\u00fcne und hellgr\u00fcne Kurve, allerdings nicht im Verh\u00e4ltnis 80%-20%. Daf\u00fcr wurde ein besonderes Ladeger\u00e4t ben\u00f6tigt. Mit richtiger Nutzung von Ladeverfahren haben die Akkus keinen Memory-Effekt und dementsprechend haben auch sehr geringe Selbstentladung. \u00a0 Die Li-Ion-Akkus sind meistens ein bisschen teurer als die anderen Akku-Technologien und ben\u00f6tigen die genannten speziellen Ladeger\u00e4te. [BK_01] </p> <p>Lithium-Polymer-Akkus (LiPo) Die LiPo-Akkus sind eine spezielle Bauform der klassischen Li-Ion-Akkus und nutzen daher die gleiche Zellchemie. Als eine der neuesten Akkutechnologien bieten sie eine der h\u00f6chsten Energiedichten in Relation zum Gewicht. Sie behalten alle Vorteile der Li-Ion-Akkus, da sie Teil der Lithium-Ionen-Akku-Familie sind, und verwenden dasselbe Ladeverfahren wie klassische Li-Ion-Akkus. Oft sind sie mit einem eingebauten Batteriemanagementsystem (BMS) ausgestattet, was sie etwas teurer macht. Diese Akkus sind typischerweise in Mobiltelefonen zu finden. \u00a0 LiPo-Akkus verwenden flexible Kunststoffbeutel anstelle der zylindrischen Bauweise von Li-Ion-Akkus. Diese Flexibilit\u00e4t erm\u00f6glicht es, sie an die spezifischen Anforderungen des Ger\u00e4tedesigns anzupassen und bietet eine gr\u00f6\u00dfere Designfreiheit. Sie nutzen den verf\u00fcgbaren Raum in elektronischen Ger\u00e4ten effizient aus. Ein Nachteil liegt jedoch in den Sicherheitsaspekten. LiPo-Akkus sind sehr empfindlich gegen\u00fcber \u00dcberhitzung, was in Rauch- und Gasentwicklung oder im Extremfall sogar zu Selbstentz\u00fcndung f\u00fchren kann. Dieses Risiko erh\u00f6ht sich besonders bei unsachgem\u00e4\u00dfer Handhabung, \u00fcberm\u00e4\u00dfiger Belastung oder mechanischer Besch\u00e4digung der Akkuzellen. [BK_04]</p> <p>Lithium-Eisen-Phosphat-Akkus (LiFePO<sub>4</sub>) Die LiFePO<sub>4</sub>-Akkus geh\u00f6ren zur Familie der Lithium-Ionen-Technologie, verzichten sich jedoch auf das Kathodenmaterial Lithiumcobaltdioxid (LiCoO<sub>2</sub>), das in klassischen Li-Ion-Akkus verwendet wird. \u00a0 Im Vergleich zu Li-Ionen-Akkus mit LiCoO2 bieten LiFePO4-Akkus eine h\u00f6here Sicherheit, da sie keine exothermen Reaktionen unter extremen Bedingungen zeigen, was das Risiko von Br\u00e4nden und Explosionen erheblich verringert. Diese Akkus sind ideal f\u00fcr Anwendungen in Elektrofahrzeugen aufgrund ihrer h\u00f6heren Entladestromkapazit\u00e4t, Nicht-Toxizit\u00e4t und l\u00e4ngerer Lebensdauer im Vergleich zu Li-Ionen-Akkus mit LiCoO<sub>2</sub>. [BK_05] \u00a0 Im Vergleich zu Li-Ion-Akkus liegt die Nennspannung von LiFePo<sub>4</sub>-Akkus bei 3,3V und bleibt stabil \u00fcber einen Gro\u00dfteil der Entladung bei Nennspannung, was auf Abbildung 3.xx zu sehen ist. \u00a0</p> <p> Lade- (gr\u00fcn) und Entladekurve (rot) von LiFePO<sub>4</sub>-Akkus [BK_06] </p> <p>Wie Li-Ion-Akkus ben\u00f6tigen die LiFePO<sub>4</sub>-Akkus auch eine Schutzschaltung in Form von BMS, allerdings besondere Art f\u00fcr LiFePO<sub>4</sub>-Akkus. Da die auch zur Familie von Li-Ion-Akkus geh\u00f6ren, werden die auch \u00fcber gleiches Ladeverfahren wie Li-Ion-Akkus geladen. Die Entladeschlussspannung von diesen Akkus liegt typischerweise bei 2,0V und die Ladeschlussspannungen liegen in der Regel bei 3,6V. Die Werte sind aber von BMS abh\u00e4ngig. Der einzige Nachteil dieser Akku-Technologie ist, dass im Vergleich zu den reinen Li-Ion-Akkus die Nennspannung niedriger liegt, bei 3,3V im Vergleich zu 3,7V. [BK_05] </p>"},{"location":"PraktischeUTheoretischeGrund/#funktechnologien-stasa-lukic","title":"Funktechnologien @Stasa Lukic","text":""},{"location":"PraktischeUTheoretischeGrund/#lora","title":"LoRa","text":"<p>Low-Power-Wide-Area-Network-Technologie, auch genannt LoRa ist eine Stromsparende technologie um Daten \u00fcber eine l\u00e4ngere Distanz zu schicken. Daf\u00fcr benutz LoRa die CSS-Modulationstechnik f\u00fcr eine Funkreichweite von mehreren Kilometern. Durch den niedriegen Stromverbrauch ist LoRa geeigent f\u00fcr hand held IoT Projekte, diese k\u00f6nnen Batterie betrieben werden f\u00fcr eine l\u00e4ngere Zeit. Die Netzwerktopologie von LoRa ist Punkt-zu-Punkt oder Punkt-zu-Mehrpunkt-Netzwerke, oft in Kombination mit Gateways [STA_12].  </p>"},{"location":"PraktischeUTheoretischeGrund/#wlan","title":"WLan","text":"<p>WLan ist die weitverbreiteste Netzwerk technologie f\u00fcr den normalen Haushalt. Es erlaubt Ger\u00e4te oder Clients \u00fcber Radio frequenzen sich mit einem Acces points zuverbinden, diese nutzten oft Stern- oder Baumtopologien. Durch die Schnelle geschwindigkeit von 2,4GHz oder 5GHz wird jedoch die Reichweite gek\u00fcrzt [STA_10].</p>"},{"location":"PraktischeUTheoretischeGrund/#zigbee","title":"Zigbee","text":"<p>Zigbee wurde spezifisch daf\u00fcr entwickelt, wenn man geringe Datenmengen verschicken will und einen geringen Stromverbrauch haben m\u00f6chte.  Ihre geringe Reichweite ist kein problem, da Zigbee sehr schnell und zuverl\u00e4ssig ein mesh netzwerk aufbauen kann, das heist das Zigbee selbstst\u00e4dnig Netzwerkpfade baut und sogar bei einzelnden ausf\u00e4llen selber einen neuen netzpfad findet [STA_11].  </p>"},{"location":"PraktischeUTheoretischeGrund/#bluetooth","title":"Bluetooth","text":"<p>Bluetooth ist ein 1990 entwickelte Punkt zu Punkt technologie die Ultra high frequency radio wellen nutzt, um \u00fcber eine sehr kleine Reichweite Daten zu verschicken. [STA_13].</p>"},{"location":"PraktischeUTheoretischeGrund/#vergleiche-der-funktechnologien","title":"Vergleiche der Funktechnologien","text":"<p>Bei der Reichweite hat LoRa die l\u00e4ngste Reichweite mit biszu 15 Kilometern aber mit einer niedrigen daten\u00fcbertragung von nur 0,3kpbs bis 50 kbps, abh\u00e4ngig der Reichweite. WLan hat eine Reichweite biszu 100m mit w\u00e4nden und biszu 300m Ausserorts, hat daf\u00fcr aber eine sehr schnelle daten\u00fcbertragung, mit neueren technologien wie Wi-Fi 6 sind mehrere Gbps m\u00f6glich. Zigbee hat die gleiche Reichweite wie ein WLan Netzwerk, hat aber daf\u00fcr den vorteil sehr zuverl\u00e4ssige mesh Netzwerke aufzubauen. Wie schon erw\u00e4hnt besitzt sie eine niedrige daten\u00fcbertragung von biszu 250 kbps aber daf\u00fcr ist sie sehr Leistungs effizeint. Bluetooth hat eine Reichweite von nur 10m, besitzt aber eine mittlere und zuverl\u00e4ssige daten\u00fcbertragung von 2 Mbps bis 3 Mbps und macht sich daf\u00fcr sehr n\u00fctzlich f\u00fcr pers\u00f6nliche zwecke.</p>"},{"location":"PraktischeUTheoretischeGrund/#bildverarbeitung","title":"Bildverarbeitung","text":""},{"location":"PraktischeUTheoretischeGrund/#bitmaps","title":"Bitmaps","text":"<p>Bitmaps speichern Bildern in einem Format, sodass jeder Pixel einzelnd Farbwerte zugeschrieben bekommt. Umso mehr Bits man einem Pixel zuweist, umso genauer kann man die Farbe darstellen. Dies wird Color depth genannt, wird einem Pixel zum Beispiel nur 1 Bit zugewiesen, kann der Pixel entweder Die Farbe Schwarz (1) oder die Farbe Weis (0) anzeigen. Heutzutage werden Mehrere Formate genutzt, darunter sind die bekanntesten 8 Bit grey scale, RGB 565, 24 Bit RGB und 32 RGBA. 8 Bit grey scale erlaubt es einem Pixel 256 Verschiedene graustufen anzunehmen. RGB 565 teilt jeweils Rot 5 Bits, Gr\u00fcn 6 Bits und 5 Bits f\u00fcr Blau f\u00fcr 65536 verschiedene Farb m\u00f6glichkeiten, auch genannt High color. 24 Bit RGB,auch genannt true color, l\u00e4sst einen Pixel 16777216 verschiedene Farben annehmen, jedem RGB channel wert wird jeweils ein Byte zugewiesen [STA_14]. Dies wird einmal genaur in  dargestellt. </p> <p> 24 Bit RGB Pixel </p> <p>32 Bit RGBA erg\u00e4nzt noch einen alpha channel. Dieser l\u00e4sst den Pixel weitere information zur Transparenz der Farbe wissen. Mit RGBA sind 4294967296 verschiedene Farben mit Transparenz m\u00f6glich.  </p> <p>Diese Informationen werden als Hexadezimahl Zahlen gespeichert, es gibt aber auch Indexed Bitmaps. Indexed Bitmaps k\u00f6nnen einen Farbwert eine Zahl zuweisen, benutzt ein Bild zum Beispiel eine Color depth von 24 Bit aber insgesamt weniger als 256 Farben, Kann man jede Farbe eine Zahl zuweisen. Damit k\u00f6nnen wir das Bild anstatt mit 24 bit pro Pixel mit 8 Bit pro Pixel darstellen, beh\u00e4lt aber die color depth von 24 Bit bei [STA_15]. Ein beispiel kann man in  sehen.</p> <p> Indexed Bitmap </p>"},{"location":"PraktischeUTheoretischeGrund/#dithering","title":"Dithering","text":""},{"location":"PraktischeUTheoretischeGrund/#euclidean-distance","title":"Euclidean distance","text":""},{"location":"PraktischeUTheoretischeGrund/#png-dekodieren","title":"PNG dekodieren","text":""},{"location":"PraktischeUTheoretischeGrund/#energiemanagement","title":"Energiemanagement","text":"<p>Mario Wegmann</p> <p>Computer verbrauchen auch ohne aktive Aufgabe Strom. Ohne spezielle Anweisungen an den Computer wird der Stromverbrauch nicht gedrosselt, wodurch Energie verschwendet wird. Bei PCs fallen hierbei ACPI sleep states ein, ACPI steht dabei f\u00fcr Advanced Configuration and Power Interface und ist ein offener Industriestandard f\u00fcr die Energieverwaltung bei Computern [MW_02]. Die sogenannten ACPI sleep states erm\u00f6glichen es dem Betriebssystem zu steuern, welche Komponenten gedrosselt oder gar komplett abgeschaltet werden, um den Stromverbrauch zu minimieren. Auch bei Mikrocontrollern gibt es mehrere Mechanismen, womit der Stromverbrauch reduziert werden kann. Da ein geringer Stromverbrauch eine der wichtigsten Kriterien dieses Projekts ist, werden hier beispielhaft die Sleep States eines ESP32 erl\u00e4utert. </p>"},{"location":"PraktischeUTheoretischeGrund/#einfaches-delay","title":"Einfaches Delay","text":"<p>Die einfachste M\u00f6glichkeit, einem ESP32 Mikrocontroller keine konkrete Aufgabe zu geben, ist mit einem Delay. Die Funktion hei\u00dft in der Arduino IDE <code>Delay()</code> und l\u00e4sst einen Parameter zu, welcher angibt, wie viele Mikrosekunden der Mikrocontroller warten soll. In der ESP-IDF hei\u00dft die Funktion <code>vTaskDelay()</code>, hier kann auch ein Parameter f\u00fcr die Wartedauer \u00fcbergeben werden. Der Parameter nimmt jedoch nicht Millisekunden, sondern Ticks an. Die Ticks sind abh\u00e4ngig von der Tick-Frequenz, daher m\u00fcssen die Millisekunden mit der Funktion <code>pdMSTOTICKS()</code> in Ticks umgewandelt werden. W\u00e4hrend dem aktiven Wartens werden jedoch keine Komponenten aktiv abgeschaltet oder gedrosselt, lediglich der Prozessor l\u00e4uft nicht auf Vollast. </p>"},{"location":"PraktischeUTheoretischeGrund/#der-light-sleep-modus","title":"Der Light-sleep Modus","text":"<p>Deutlich besser ist da schon der Light-sleep. Wird dieser Modus aktiviert, so werden die teilweise Clock-Signale der digitalen Peripherie, der meisten Teile des RAMs und der CPUs ausgeschalten und die Versorgungsspannung reduziert, dieses Verfahren nennt sich Clock-Gating [MW_03]. Dadurch kann der Stromverbrauch deutlich reduziert werden, wie hoch die Reduktion ist, wird im Kapitel 7.9 Strommessung von Mikrocontroller und Display gemessen. Beim ESP32 gibt es nun verschiedene Wakeup Sources, um den Light-sleep wieder zu beenden. Unter anderem sind folgende Wakeup Sources m\u00f6glich: </p> <ul> <li>Timer</li> <li>Touchpad</li> <li>GPIO</li> <li>ULP Coprocessor (Ultra Low Power)</li> <li>UART</li> </ul> <p>Nach einem Wakeup Event wird der State wiederhergestellt und der Mikrocontroller arbeitet an der Stelle weiter, wo er durch den Light-sleep aufgeh\u00f6rt hat. [MW_06]</p>"},{"location":"PraktischeUTheoretischeGrund/#der-deep-sleep-modus","title":"Der Deep-sleep Modus","text":"<p>Noch mehr Stromeinsparung kann mit dem Deep-sleep realisiert werden. Dabei werden die oben genannten Komponenten nicht nur clock-gated, sondern komplett abgeschaltet, somit bleibt nur noch der RTC-Controller und dessen Memory und der ULP Coprocessor aktiv. Viele der zuvor genannten Wakeup Sources k\u00f6nnen auch verwendet werden, um den ESP32 aus dem Deep-sleep heraus aufzuwecken. Ausnahmen sind hierbei jedoch die meisten GPIO Pins und UART. Des Weiteren ist anzumerken, dass nach dem Aufwecken aus dem Deep-sleep der ESP32 kein State wiederhergestellt wird. Die Firmware f\u00e4ngt also von vorne an und auch Daten, die w\u00e4hrend dem Deep-sleep nicht verloren gehen d\u00fcrfen, m\u00fcssen separat in nicht-fl\u00fcchtigen Speicher abgelegt werden. [MW_06]</p>"},{"location":"PraktischeUTheoretischeGrund/#firmwarebibliotheken","title":"Firmwarebibliotheken","text":"<p>Ahmet Emirhan G\u00f6ktas</p> <p>Firmware-Bibliotheken sind wesentliche Werkzeuge f\u00fcr die Entwicklung embedded Systeme. Sie erm\u00f6glichen es Entwicklern, vordefinierte Funktionen und Klassen zur Interaktion mit Hardwarekomponenten zu verwenden, anstatt jedes Register und Bit manuell steuern zu m\u00fcssen. Diese werden als \"Hardware Abstraction Layers\" oder \"HALs\" bezeichnet, die typischerweise vom Mikrocontroller-Hersteller oder der Community bereitgestellt und in C oder C++ geschrieben werden.</p> <p>HALs bieten mehrere Vorteile:</p> <ul> <li>Portabilit\u00e4t: Derselbe Code kann mit minimalen \u00c4nderungen auf verschiedenen Mikrocontrollern verwendet werden.</li> <li>Einfachheit: Der Code ist leichter zu lesen und zu verstehen, da Entwickler sich nicht mit niedrigen Details befassen m\u00fcssen.</li> <li>Konsistenz: HALs bieten eine konsistente API, was die Lernkurve beim Wechsel zwischen verschiedenen Mikrocontrollern verringert. [AEG_01]</li> </ul>"},{"location":"PraktischeUTheoretischeGrund/#arduino","title":"Arduino","text":"<p>Ahmet Emirhan G\u00f6ktas</p> <p>Arduino ist eine beliebte Open-Source-Elektronikplattform, die auf benutzerfreundlicher Hardware und Software basiert. Sie kommt mit einer eigenen integrierten Entwicklungsumgebung (IDE) und einem Satz von Bibliotheken, die das Schreiben und Hochladen von Code auf einen Mikrocontroller erleichtern. Die Projektdateien, bekannt als \"Skizzen\", haben die Erweiterung <code>.ino</code>, was eine von der Arduino-IDE verwaltete C++-Datei ist.</p> <p>Der gr\u00f6\u00dfte Vorteil von Arduino ist die gro\u00dfe Community und die Vielzahl verf\u00fcgbarer Bibliotheken. Dies macht es einfach, ein neues Projekt zu starten, Rapid Prototyping durchzuf\u00fchren und L\u00f6sungen f\u00fcr g\u00e4ngige Probleme zu finden, da wahrscheinlich bereits jemand \u00e4hnliche Probleme hatte und gel\u00f6st hat.</p> <p>Da Arduino jedoch eine High-Level-Plattform ist, die auf verschiedenen Mikrocontrollern funktioniert, ist es m\u00f6glicherweise nicht die beste Wahl f\u00fcr leistungskritische Anwendungen. Dar\u00fcber hinaus fehlt der Arduino-IDE, die f\u00fcr Anf\u00e4nger entwickelt wurde, Funktionen wie Multi-File-Projekte oder Versionskontrolle, was in gr\u00f6\u00dferen Projekten hinderlich sein kann. [AEG_02]</p>"},{"location":"PraktischeUTheoretischeGrund/#platformio","title":"PlatformIO","text":"<p>Ahmet Emirhan G\u00f6ktas</p> <p>PlatformIO ist ein vielseitiges Entwicklungsekosystem, das mehr als 1500 eingebettete Boards und \u00fcber 40 Entwicklungsplattformen unterst\u00fctzt, darunter Arduino, Espressif IDF, STM32Cube und mehr. Es ist als Plugin f\u00fcr Visual Studio Code, Atom und JetBrains IDEs verf\u00fcgbar und bietet eine einheitliche Schnittstelle zum Erstellen, Hochladen und Debuggen von Code auf verschiedenen Plattformen.</p> <p>PlatformIO verf\u00fcgt \u00fcber einen Bibliotheksmanager, der es Ihnen erm\u00f6glicht, Bibliotheken aus einem zentralen Repository zu suchen und zu installieren, was die Verwaltung von Abh\u00e4ngigkeiten erleichtert. Es integriert sich auch gut mit g\u00e4ngigen CI/CD-Tools und erleichtert automatisiertes Testen und Deployment. Dies macht PlatformIO zu einer ausgezeichneten Wahl f\u00fcr professionelle Entwicklungsumgebungen, in denen Skalierbarkeit und Wartbarkeit entscheidend sind. [AEG_03]</p>"},{"location":"PraktischeUTheoretischeGrund/#espressif-iot-development-framework-esp-idf","title":"Espressif IoT Development Framework (ESP-IDF)","text":"<p>Ahmet Emirhan G\u00f6ktas</p> <p>ESP-IDF ist das offizielle Entwicklungsframework f\u00fcr die ESP32- und ESP32-S-Serie von SoCs. Es basiert auf FreeRTOS und bietet eine umfassende API-Sammlung zur Konfiguration und Interaktion mit der Hardware. Geschrieben in C und zur Verwendung mit der Xtensa-Toolchain konzipiert, bietet ESP-IDF Bibliotheken f\u00fcr g\u00e4ngige Aufgaben wie Netzwerke, Dateisysteme und Peripherieger\u00e4te. Es ist auch das Framework, das vom ESP32 Arduino Core verwendet wird.</p> <p>Das ESP-IDF ist gut dokumentiert und hat eine gro\u00dfe Community, was es einfach macht, Hilfe zu bekommen, wenn Sie auf Probleme sto\u00dfen. Sein Hauptvorteil ist die Leistung und der niedrige Zugriff auf die Hardware, was es zu einer guten Wahl f\u00fcr leistungskritische Anwendungen macht. Es hat jedoch eine steilere Lernkurve im Vergleich zu Arduino und PlatformIO. [AEG_04] [AEG_05]</p>"},{"location":"PraktischeUTheoretischeGrund/#gehauseentwicklung","title":"Geh\u00e4useentwicklung","text":"<p>Jannis Gr\u00f6ger</p> <p>Um das Geh\u00e4use f\u00fcr ein elektronisches Ger\u00e4t zu entwickeln, m\u00fcssen zun\u00e4chst die Anforderung festgelegt werden. Hierbei kann man in zwischen funktionalen und \u00e4sthtischen und ergonomischen Anforderungen unterscheiden. Grunds\u00e4tzlich soll ein Geh\u00e4use die Komponenten und die Elektronik nicht nur vor \u00e4u\u00dferen Einfl\u00fcssen wie Staub, Schmutz oder mechanischen St\u00f6\u00dfen sch\u00fctzen, sondern tr\u00e4gt auch zur W\u00e4rmeableitung bei und spielt eine wichtige Rolle bei der Benutzung des Ger\u00e4ts. Im Folgenden werden die Grundlagen und die essentiellen \u00dcberlegungen bei der Entwicklung eines Geh\u00e4uses behandelt.</p>"},{"location":"PraktischeUTheoretischeGrund/#funktionale-anforderungen","title":"Funktionale Anforderungen","text":"<p>Die Hauptfunktion eines Geh\u00e4uses ist der Schutz der einzelnen Bauteile, wobei hier auf verschiedene Faktoren zu achten ist. Zum einen muss das Geh\u00e4use stabil genug sein, um die internen Komponenten vor mechanischen Einfl\u00fcssen wie St\u00f6\u00dfe oder Druck zu sch\u00fctzen. Das Material muss dementsprechend passend ausgew\u00e4hlt werden, wobei auch die Geometrie des Geh\u00e4uses ber\u00fccksichtigt werden muss. H\u00e4ufig verwendete Materialien bei Elektroger\u00e4ten sind Kunststoffe oder Metalle wie bspw Aluminium. [JG_01]</p> <p>Zudem ist das Geh\u00e4use dazu da, die Elektronik darin vor so \u00e4u\u00dferen Einfl\u00fcssen wie beispielsweise Staub oder Wasser zu bewahren. Bei der Frage, vor welchen sogenannten Umwelteinfl\u00fcssen ein Geh\u00e4use sch\u00fctzt, hilft die Einteilung in IP-Schutzklassen, wobei das IP f\u00fcr International Protection steht und die verschiedenen Klassen nach der DIN 60529 spezifiziert sind. Die Bezeichnung der Klassen besteht hierbei aus zwei Kennziffern nach der IP Abk\u00fcrzung: Die erste Ziffer macht erkenntlich, gegen welche Arten von Ber\u00fchrung und Fremdk\u00f6rpern das Geh\u00e4use sch\u00fctzt, w\u00e4hrend die zweite Ziffer den Schutz gegen Wasser benennt. Eine Geh\u00e4use mit IP68 Spezifikation ist beispielsweise vollst\u00e4ndig gegen Staubeintritt und vor andauerndem Untertauchen gesch\u00fctzt. Eine solche Zertifizierung kann jedoch nur durch bestimmte Instititionen ausgestellt werden. [JG_02]</p> <p>Ein weitere Funktion, der bei der Entwicklung des Geh\u00e4uses ber\u00fccksichtigt werden muss, ist die W\u00e4rmeregulation, da die Elektronik sowohl vor \u00dcberhitzung, als auch vor zu starker Unterk\u00fchlung gesch\u00fctzt werden muss. Da elektronische Komponenten selbst W\u00e4rme erzeugen, spielt die W\u00e4rmeableitung eine gr\u00f6\u00dfere Rolle, als der Schutz vor zu geringen Temperaturen. Diese kann durch Einsatz von L\u00fcftern oder K\u00fchlk\u00f6rpern oder Einbau von L\u00fcftungsschlitzen und die damit verbundene Konvektion bewerkstelligt werden. [JG_02]</p> <p>Eine letzte funktionale Anforderung an das Geh\u00e4use ist die elektromagnetische Vertr\u00e4glichkeit. Darunter versteht man, dass elektronische Ger\u00e4te so aufgebaut sind, dass sie vor elektromagnetischer St\u00f6rungen anderer Ger\u00e4te gesch\u00fctzt sind und ihre eigenen elektromagnetischen Felder auf ein Minimum reduzieren, um selbst nicht andere Ger\u00e4te zu st\u00f6ren. Dies kann durch die verwendung leitf\u00e4higer Materialien und speziellen Dichtungen erreicht werden. [JG_02]</p>"},{"location":"PraktischeUTheoretischeGrund/#asthetische-und-ergonomische-anforderungen","title":"\u00c4sthetische und ergonomische Anforderungen","text":"<p>Neben der Funktionalit\u00e4t stellen auch \u00c4sthetik und Ergonomie gewisse Anspr\u00fcche an ein Geh\u00e4use. Bei der Bedienung eines elektronischen Ger\u00e4tes steht die Benutzerfreundlichkeit im Vordergrund, die bei tragbaren Ger\u00e4ten beispielsweise durch ein geringes Gewicht beeinflusst wird, wohingegen bei station\u00e4ren Ger\u00e4ten eher auf Zug\u00e4nglichkeit der Bedienelemente und Anschl\u00fcsse geachtet werden sollte. Des Weiteren beeinflusst das Design die Wahrnehmung und das Erscheinungsbild des Ger\u00e4ts, was ma\u00dfgeblich zur Nutzung und Akzeptanz des Ger\u00e4ts beim Verbraucher beitr\u00e4gt.  </p>"},{"location":"PraktischeUTheoretischeGrund/#auswahl-des-materials-und-der-fertigungstechnik","title":"Auswahl des Materials und der Fertigungstechnik","text":"<p>Bei der Auswahl des Materials sind die oben genannten Aspekte von gro\u00dfer Bedeutung, da das verschiedene Materialen andere Eigenschaften besitzen und dementsprechend nicht jedes Material die gleichen Anforderungen erf\u00fcllt. Abh\u00e4ngig von der Materialauswahl ist im n\u00f6chsten Schritt dann die Auswahl der Fertigungstechnik, wobei hier zus\u00e4tzlich auf die Anforderungen an die Geometrie des Geh\u00e4uses, die anzufertigende St\u00fcckzahl und der Material- sowie der Fertigungspreis geachtet werden muss.</p>"},{"location":"PraktischeUTheoretischeGrund/#design-und-verfahren-des-rapid-prototyping","title":"Design und Verfahren des Rapid Prototyping","text":"<p>Sind Material und Fertigungstechnik gew\u00e4hlt, kann mit dem eigentlichen Design des Geh\u00e4uses begonnen werden. Heutzutage wird das Design h\u00e4ufig durch CAD-Software (computer-aided design Software) unterst\u00fctzt, was Geh\u00e4useentwicklern und -herstellern erm\u00f6glicht, ein pr\u00e4zises 3D-Modell des des gew\u00fcnschten Produkts zu Erstellen. Durch Finite-Elemente-Modellierung, kurz FEM,  k\u00f6nnen Simulationen zum Testen der mechanischen oder thermischen Eigenschaften verwendet werden.[JG_03]</p> <p>Nach dem Design folgt dann die Fertigung eines oder mehrerer Prototypen, die auf gew\u00fcnschte Eigenschaften getestet werden, um eventuelle Schwachstellen auszumachen und Verbesserungen am Design vornehmen zu k\u00f6nnen. Hierbei werden immer h\u00e4ufiger Verfahren des Rapid Prototyping, im Folgenden auch RPT genannt, verwendet, was das \"Erstellen von Prototypen aus einfach verarbeitbaren Materialien\" [JG_03] bezeichnet. Hierbei wird das 3D-Modell aus der CAD-Software in ein \"trianguliertes Oberfl\u00e4chenmodell \u00fcberf\u00fchrt\" [JG_03] und anschlie\u00dfend in einzelne Schichten mit einer festgelegten Dicke zerlegt. In unterschiedlichen Verfahren, von denen einige im Folgenden genannt werden, werden diese Schichten dann wieder zusammengef\u00fcgt, wodurch ein Prototyp entsteht. [JG_03]</p> <ul> <li>Das Stereolithografie-Verfahren (STL-Verfahren) ist ein RPT-Verfahren, bei dem mit einem Laser in einem Bad aus \"polymere[r] Fl\u00fcssigkeit die Konturen der Scheiben des Modells schichtweise [...] nachgefahren [...] werden\"[JG_03], wodurch ein r\u00e4umliches Modell entsteht. </li> <li>Beim Laminated Object Manufacturing Verfahren (LOM-Verfahren) dagegen, f\u00e4hrt der Laser die Konturen auf Papier nach, das die vorher festgelegte Dicke aufweist. Diese Papierschichten werden dann mittels eines \"Schmelzkleber[s] aufeinander geklebt\" [JG_03]. Das entstehende Modell kann dann \u00e4hnlich \"wie Holz nachbearbeitet werden\" [JG_03].</li> <li>Das Fused Deposition Modelling-Verfahren (FDM-Verfahren) erstellt ein Prototyp, indem ein Kunststofffaden durch eine beheizbare D\u00fcse auf einer Plattform ausgelegt wird. Diese Plattform l\u00e4sst sich dabei frei im Raum bewegen und der Durchmesser des Fadens entsricht dabei der vorher festgelegten Schichtdicke. [JG_03]</li> <li>Ein weiteres Verfahren ist das Solidier-Verfahren, auch Solid Ground Verfahren oder kurz SGC-Verfahren genannt. Das Modell entsteht hierbei aus mehreren d\u00fcnnen Fotopolymerschichten, wovon jede einzelne \"mit einer fotografischen Maskentechnik unter UV-Licht aush\u00e4rtet\" [JG_03]. Um das fertige Modell herum wird ein Wachsk\u00f6rper gebildet, wodurch \u00dcberh\u00e4nge nicht mit St\u00fctzen fixiert werden m\u00fcssen. [JG_03]</li> <li>Auch das Selective Laser Sintering ist ein RPT-Verfahren, bei dem die einzelnen Schichten aus pulverf\u00f6rmigen Material mit einem Laser an gewollten Stellen geschmolzen wird. Durch schichtweises Herunterfahren der Fl\u00e4che, worauf sich die unterste Pulverschicht befindet, liegt das fertige Modell dann in einem Pulverbett. [JG_03]</li> <li>Das 3D-Printing-Verfahren nutzt auch ein Schicht Pulver, wobei hier das Material mithilfe eines Binders verbunden wird. Auch hier wird das Modell an der obersten Schicht aufgebaut und der fertige Prototyp liegt in einem Pulverbett. [JG_03]</li> </ul> <p>Die einzelnen RPT-Verfahren unterscheiden sich in den m\u00f6glichen Materialien, der Genauigkeit der Modelle, der Qualit\u00e4t der Oberfl\u00e4che und der verbundene Aufwand f\u00fcr die Nachbearbeitung. Diese Unterschiede sind der Abbildung  zu entnehmen.</p> <p> Eigenschaften der verschiedenen Rapid-Prototyping-Verfahren [JG_03] </p> <p>Nach dem Prototyping und ausf\u00fchrlichen Testen, kann das \u00fcberzeugende Modell schlie\u00dflich in Serienproduktion \u00fcbergehen womit die Entwicklung des Geh\u00e4uses ebenfalls abgeschlossen ist.</p>"},{"location":"PraktischeUTheoretischeGrund/#webanwendungen","title":"Webanwendungen","text":"<p>Mario Wegmann</p> <p>Aufgrund der Anforderungen und der Komplexit\u00e4t von gr\u00f6\u00dferen Webseiten ist es nicht mehr praktikabel, Inhalte komplett h\u00e4ndisch in HTML, CSS und JavaScript zu erstellen. Zu gro\u00df und fehleranf\u00e4llig ist die Wartung eines solchen manuell erstellten Konstrukts. Ein Beispiel hierf\u00fcr w\u00e4re das Erweitern einer neuen Unterseite in der Men\u00fcleiste. Hier m\u00fcsste jede andere Unterseite angepasst werden, um die neue Unterseite von allen anderen Unterseiten aus zu erreichen. </p> <p>Stattdessen hat es sich etabliert, f\u00fcr Websites mit viel statischem Inhalt sogenannte Static Site Generators zu nutzen. Hierbei liegt der Fokus nur noch auf der Erstellung des eigentlichen Inhalts \u00fcber eine simple Textdatei. Nach Fertigstellung des Inhalts erzeugt der Generator dann das restliche Ger\u00fcst der Website, so werden die Unterseiten generiert, das Navigationsmen\u00fc erstellt, Bilder optimiert und das Layout anhand des angegebenen Themes angewendet. </p> <p>Neben Websites mit statischen Inhalten gibt es auch Websites, deren Inhalt dynamisch erstellt wird. In Social Media ist die Anzahl an Inhalten so enorm, dass es nicht praktikabel w\u00e4re, allen Personen die gleiche Timeline anzuzeigen. Stattdessen wird pro Benutzer eine auf ihn spezialisierte Timeline beim Aufruf generiert. </p> <p>Zuletzt gibt es auch Anwendungen, die \u00fcber den Webbrowser laufen und somit keine lokale Installation ben\u00f6tigen, ein Beispiel w\u00e4re hierf\u00fcr die Nextcloud, womit sich Dateien abspeichern, erstellen, ordnen und teilen lassen. Dank vieler Erweiterungen. </p> <p>Die letzten beiden genannten Kategorien erfordern viele Komponenten, die zusammenarbeiten m\u00fcssen, um dem Benutzer eine performante und benutzerfreundliche Erfahrung zu erm\u00f6glichen. Daher haben sich mehr und mehr verschiedene Technologien im Web entwickelt, die mit unterschiedlichen Herangehensweisen versuchen, die Anforderungen zu erf\u00fcllen. </p> <p>Dennoch gibt es auch noch Anwendungsf\u00e4lle, wo es durchaus sinnvoll ist, bewusst auf weitere Technologien zu verzichten und nur mit HTML, CSS und JavaScript zu arbeiten. Ein Anwendungsfall w\u00e4re der Embedded Bereich, da dort die Ressourcen sehr knapp sind und somit die Last f\u00fcr Anfragen m\u00f6glichst auf den zugreifenden Client ausgelagert werden sollten. </p>"},{"location":"PraktischeUTheoretischeGrund/#webtechnologien","title":"Webtechnologien","text":"<p>Mario Wegmann</p> <p>Moderne Webbrowser haben sich auf die drei Programmiersprachen HTML, CSS und JavaScript geeinigt, um Webseiten darzustellen.</p> <p>HyperText Markup Language (HTML) </p> <p>HTML definiert die Struktur und den Inhalt einer Webseite durch die Verwendung von HTML-Tags. HTML bildet das Ger\u00fcst einer Webseite, indem es Text, Bilder, Links, Videos und andere Elemente einbindet und organisiert. </p> <p>Cascading Style Sheets (CSS)</p> <p>CSS ist eine Stylesheet-Sprache, die verwendet wird, um das Aussehen und Layout von HTML-Dokumenten zu gestalten. Mit CSS k\u00f6nnen Entwickler die visuellen Aspekte von HTML-Elementen steuern. CSS erm\u00f6glicht eine Trennung von Struktur und Design, was die Wartung und Anpassung von Webseiten erleichtert.</p> <p>JavaScript</p> <p>JavaScript ist eine Programmiersprache, welche im Browser ausgef\u00fchrt werden kann und somit f\u00fcr Interaktivit\u00e4t auf der Clientseite sorgt. JavaScript nutzt die Technik der DOM-Manipulation, um den Inhalt des geladenen HTML nachtr\u00e4glich zu modifizieren. Das Document Object Model (DOM) beschreibt den Aufbau der einzelnen HTML-Elemente als Baumstruktur, diese Elemente k\u00f6nnen mit JavaScript gelesen, hinzugef\u00fcgt, ver\u00e4ndert und gel\u00f6scht werden. TypeScript ist eine Erweiterung von JavaScript und erweitert die Sprache um statische Typen, damit k\u00f6nnen Fehler im Programmcode fr\u00fcher erkannt und die Codequalit\u00e4t verbessert werden. </p> <p>React</p> <p>React ist eine JavaScript-Bibliothek zur Erstellung von Benutzeroberfl\u00e4chen. Sie verwendet eine komponentenbasierte Architektur, die es Entwicklern erm\u00f6glicht, wiederverwendbare UI-Komponenten zu erstellen und den Status von Anwendungen effizient zu verwalten. React nutzt einen virtuellen DOM zur Optimierung von Updates und zur Verbesserung der Performance. Neben React sind Vue, Angular und Svelte weitere bekannte Frontend-Bibliotheken. </p> <p>Structured Query Language (SQL)</p> <p>SQL ist eine standardisierte Programmiersprache, die zur Verwaltung und Manipulation von Daten in relationalen Datenbanken verwendet wird. Mit SQL k\u00f6nnen Benutzer Datenbanken erstellen, \u00e4ndern, abfragen und verwalten. </p> <p>Object Relational Mapper (ORM)</p> <p>ORMs sind n\u00fctzlich, weil sie die Arbeit mit Datenbanken durch typsichere, deklarative Datenmodellierung und effiziente Datenbankmigrationen erheblich vereinfachen und optimieren. Prisma ORM ist beispielsweise ein ORM, welches automatisch TypeScript-Typen generiert. Dies erm\u00f6glicht Typensicherheit und die Nutzung von Autovervollst\u00e4ndigung im Editor, wodurch die Produktivit\u00e4t und Codequalit\u00e4t verbessert wird. ORMs reduzieren die Notwendigkeit f\u00fcr manuelles SQL-Schreiben und minimieren somit potenzielle Fehler. Zudem unterst\u00fctzen sie verschiedene Datenbanksysteme, somit ist ein Wechsel des RDBMS mit nur wenig \u00c4nderungen am Code m\u00f6glich.</p> <p>PostgreSQL</p> <p>PostgreSQL ist ein relationale Datenbankmanagementsystem (RDBMS). Ein RDBMS ist eine Software, die zur Verwaltung von Datenbanken verwendet wird, die auf dem relationalen Modell basieren. In diesem Modell werden Daten in Tabellen organisiert, die aus Zeilen und Spalten bestehen. Jede Tabelle repr\u00e4sentiert eine Entit\u00e4t, und die Beziehungen zwischen den Tabellen werden durch Prim\u00e4r- und Fremdschl\u00fcssel definiert. PostgreSQL ist bekannt f\u00fcr seine Erweiterbarkeit, Standardkonformit\u00e4t und fortgeschrittene Features wie komplexe Abfragen und Transaktionen. MySQL ist ein weiteres bekanntes und verbreitetes RDBMS. </p> <p>Webserver</p> <p>Es gibt verschiedene M\u00f6glichkeiten, wie HTML, CSS und JavaScript bei einer Anfrage an den Webserver generiert werden k\u00f6nnen. Der Code kann komplett statisch auf dem Webserver abgelegt sein oder auch dynamisch bei der Anfrage generiert werden. Prinzipiell l\u00e4sst sich f\u00fcr den letzten Fall fast jede Programmiersprache verwenden, beliebt sind jedoch PHP, Python, Ruby, C# und JavaScript (Node.JS) [MW_04].</p> <p>F\u00fcr die Umsetzung werden h\u00e4ufig Frameworks genutzt, \u00e4hnlich wie bei Static Site Generators, unterst\u00fctzen Frameworks bei der Realisierung von Websites, indem es wiederkehrende Aufgaben vereinfacht und die Wiederverwendung von Code f\u00f6rdert. Durch die Abstraktion und Strukturierung von Code sowie die Objektorientierung der Daten wird die Entwicklungszeit verk\u00fcrzt und die Wartbarkeit gro\u00dfer Anwendungen erheblich verbessert. NextCloud verwendet beispielsweise das PHP Framework Symfony [MW_05]</p> <p>Reverse Proxy</p> <p>Ein Reverse Proxy erm\u00f6glicht das Anbieten von mehreren Webanwendungen auf demselben Server. Typischerweise nutzen Browser f\u00fcr HTTP-Anfragen den Port 80 und f\u00fcr HTTPS den Port 443. Da mehrere Webanwendungen auf dem gleichen System die Ports nicht mehrfach verwenden k\u00f6nnen, m\u00fcssten andere Ports verwendet werden, was aber unpraktikabel f\u00fcr den Benutzer der Webanwendung ist. Der Einsatz eines Reverse Proxies bietet hier mehr Flexibilit\u00e4t. Dieser h\u00f6rt als einziger auf die beiden Ports und nimmt die Anfragen entgegen, anhand verschiedener Eigenschaften, wie z.B. Domainname im HTTP-Header, kann dann die Entscheidung getroffen werden, an welchen Webserverdienst die Anfrage weitergeleitet wird. Reverse Proxies bieten hierbei oft noch weitere Funktionen an, wie die Lastverteilung auf mehreren Dienste, das Verschl\u00fcsseln der Verbindung mit HTTPS, oder auch das Sch\u00fctzen der Webanwendung durch nur authentifizierten Zugriff \u00fcber HTTP Basic Auth. </p>"},{"location":"Quellenverzeichnis/","title":"Quellenverzeichnis","text":"<p>[JG_01] Prof. Dr. D. W\u00f6hrle, Prof. Dr. Hendrik W\u00f6hrle, Materialien in Rechnern und digitalen Computern, https://onlinelibrary.wiley.com/doi/full/10.1002/ciuz.201900004, Zugriffsdatum: 2024-06-20, Herausgabedatum: 2020-02-05</p> <p>[JG_02] Jens Lienig, Hans Br\u00fcmmer, Elektronische Ger\u00e4tetechnik, Springer Vieweg Berlin, Heidelberg, Herausgabedatum: 2024-05-03</p> <p>[JG_03] Sandor Vanja, Christian Weber, Helmut Bley, Klaus Zeman, CAx f\u00fcr Ingenieure, Springer-Verlag Berlin Heidelberg, 2. Auflage 2009</p> <p>[JG_04] Hubert H\u00f6gl, Fablab, https://onlinelibrary.wiley.com/doi/full/10.1002/ciuz.201900004, Zugriffsdatum: 2024-06-27, Herausgabedatum: 2023-02-01</p> <p> [JG_05] Thomas Jackson, Vollst\u00e4ndig vergleichende Analys PLA vs. PETG, https://sunlu.com.de/blogs/products-knowledge/vollstandige-vergleichende-analyse-pla-vs-petg#:~:text=PLA%20ist%20ein%20biologisch%20abbaubarer,sich%20aber%20leichter%20drucken%20l%C3%A4sst., Zugriffsdatum: 2024-06-27, Herausgabedatum: 2024-02-21</p> <p>[JR_01] Wilke Technology GmbH, Wizepanel Digitale T\u00fcrschilder https://wizepanel.de/produkte/#schilder, Zugriffsdatum: 28-06-2024, Letzte Bearbeitung: 27-09-2023</p> <p>[JR_02] digitalSIGNAGE.de GmbH, Digitale T\u00fcrschilder https://www.digitalsignage.de/digitale-tuerschilder.html, Letzte Bearbeitung: 01-03-2024, Zugriffsdatum: 28-06-2024</p> <p>[JR_03] ROOMZ SA, ROOMZ Display https://roomz.io/roomz_display, Zugriffsdatum: 28-06-2024, Letzte Bearbeitung: 10-06-2024</p> <p>[JR_04] Beetronics B.V., Touchscreen-Displays https://www.beetronics.de/c-touchscreens, Zugriffsdatum: 28-06-2024, Letzte Bearbeitung: 14-04-2024</p> <p>[JR_05] Wilke Technology GmbH, Wizepanel 9\"7 classic Datenblatt https://wizepanel.de/downloads/DATA_Sheet_WizePanel_97_Classic_DE.pdf, Zugriffsdatum: 28-06-2024, Letzte Bearbeitung: 03-08-2024</p> <p>[JR_06] digitalSIGNAGE.de GmbH, Digitales Signboard https://www.digitalsignage.de/portfolio-hardware/xds-1078d-digital-signage-signboard.html, Zugriffsdatum: 28-06-2024, Letzte Bearbeitung: nicht bekannt</p> <p>[JR_07] Beetronics B.V., 10 Zoll Touchscreen Datenblatt https://www.beetronics.de/datasheets/product/341, Zugriffsdatum: 28-06-2024, Letzte Bearbeitung: nicht bekannt</p> <p>[JR_08] Wilke Technology GmbH, Wizepanel Handbuch, S.52 https://wizepanel.de/downloads/WizePanel_Manual_EN.pdf, Zugriffsdatum: 28-06-2024, Letzte Bearbeitung: 03-08-2024</p> <p>[JR_09] ROOMZ SA, ROOMZ Sensor https://roomz.io/roomz_sensor/?lang=de, Zugriffsdatum: 28-06-2024, Letzte Bearbeitung: 04-10-2023</p> <p>[JR_10] ROOMZ SA, myRoomz App https://roomz.io/myroomz-arbeitsplatzmanagement/?lang=de, Zugriffsdatum: 28-06-2024, Letzte Bearbeitung: 04-10-2023</p> <p>[JR_11] Niklas von Hertzen, Html2Canvas Dokumentation https://html2canvas.hertzen.com/documentation, Zugriffsdatum: 28-06-2024, Letzte Bearbeitung: 06-06-2024</p> <p>[JR_12] Diverse Autoren, Document Object Level (DOM) https://de.wikipedia.org/w/index.php?title=Document_Object_Model&amp;oldid=235351737#Standardisierung, Zugriffsdatum: 28-06-2024, Letzte Bearbeitung: 10-07-2023</p> <p>[JR_13] Diverse Autoren, Same-origin Policy https://en.wikipedia.org/w/index.php?title=Same-origin_policy&amp;oldid=1229277634#References, Zugriffsdatum: 28-06-2024, Letzte Bearbeitung: 15-06-2024 </p> <p>[JR_14] Diverse Autoren, Base64 https://en.wikipedia.org/w/index.php?title=Base64&amp;oldid=1230643470, Zugriffsdatum: 28-06-2024, Letzte Bearbeitung: 23-06-2024 </p> <p>[JR_15] Niklas von Hertzen, Html2Canvas Features https://html2canvas.hertzen.com/getting-started, Zugriffsdatum: 28-06-2024, Letzte Bearbeitung: 06-12-2023 </p> <p>[JR_16] Diverse Autoren, Web development tools https://en.wikipedia.org/w/index.php?title=Web_development_tools&amp;oldid=1231254703, Zugriffsdatum: 29-06-2024, Letzte Bearbeitung: 27-06-2024 </p> <p>[JR_17] Diverse Autoren, Log4j https://en.wikipedia.org/w/index.php?title=Log4j&amp;oldid=1230768614, Zugriffsdatum: 29-06-2024, Letzte Bearbeitung: 24-06-2024 </p> <p>[JR_18] Internet Security Research Group (ISRG), \u00dcber Let's Encrypt https://letsencrypt.org/de/about/, Zugriffsdatum: 29-06-2024, Letzte Bearbeitung: 25-06-2024 </p> <p>[JR_19] Niklas Von Hertzen, Github html2canvas https://github.com/niklasvh/html2canvas, Zugriffsdatum: 30-06-2024, Letzte Bearbeitung: 29-06-2024 </p> <p>[STA_01] https://wiki.seeedstudio.com/xiao_esp32s3_getting_started/</p> <p>[STA_02] https://wiki.seeedstudio.com/XIAO_ESP32C3_Getting_Started/</p> <p>[STA_03] https://cdn.shopify.com/s/files/1/1509/1638/files/Betriebsanleitung-AZ-D1miniV1.2_2.pdf?v=1590603445</p> <p>[STA_04] https://www.st.com/resource/en/datasheet/stm32wl55cc.pdf</p> <p>[STA_05] https://cdn-reichelt.de/documents/datenblatt/A300/RASPBERRY_PI_PICO_DB_EN.pdf</p> <p>[STA_06] https://files.seeedstudio.com/wiki/Seeed-Studio-XIAO-ESP32/Low_Power_Consumption.pdf</p> <p>[STA_07] https://www.glyn.de/produkte/displays/epaper-displays/wie-funktionieren-epaper/</p> <p>[STA_08] https://www.orientdisplay.com/de/knowledge-base/lcd-basics/bistable-lcd/#:~:text=Bistabiles%20LCD%20kann%20ein%20Bild,wenn%20die%20Stromversorgung%20unterbrochen%20wird</p> <p>[STA_09] https://www.orientdisplay.com/de/knowledge-base/oled-basics/how-does-oled-work/#:~:text=OLED%20funktioniert%20wie%20eine%20LED,Materialien%20sind%20Gelb%20und%20Blau.</p> <p>[STA_10] https://www.proofpoint.com/de/threat-reference/wifi</p> <p>[STA_11] https://de.wikipedia.org/wiki/ZigBee</p> <p>[STA_12] https://www.lora-wan.de/</p> <p>[STA_13] https://de.wikipedia.org/wiki/Bluetooth</p> <p>[STA_14] https://paulbourke.net/dataformats/bitmaps/</p> <p>[STA_15] https://en.wikipedia.org/wiki/Color_depth</p> <p>[STA_16] </p> <p>[STA_17] </p> <p>[STA_18] </p> <p>[STA_19] </p> <p>[STA_20] </p> <p>[BK_01] Mehrere Authoren, Lithium-Polymer-Akkumulator, https://de.wikipedia.org/wiki/Lithium-Ionen-Akkumulator, Zugriffsdatum: 2024-06-27, Herausgabedatum: 2024-06-21, Seiten 1-12, 12-14 </p> <p>[BK_02] Testing Lithium-ion Batteries, https://www.gamry.com/application-notes/battery-research/testing-lithium-ion-batteries, Zugriffsdatum: 2024-06-27, Herausgabedatum: 2024-06-21, Seite 6 </p> <p>[BK_03] Mehrere Authoren, Batteriemanagementsystem, https://de.wikipedia.org/wiki/Batteriemanagementsystem, Zugriffsdatum: 2024-06-28, Herausgabedatum: 2024-04-06, Seiten 1-4 </p> <p>[BK_04] Mehrere Authoren, Lithium-Polymer-Akkumulator, https://de.wikipedia.org/wiki/Lithium-Polymer-Akkumulator, Zugriffsdatum: 2024-06-27, Herausgabedatum: 2024-05-19, Seiten 1-4 </p> <p>[BK_05] Mehrere Authoren, Lithium-Eisenphosphat-Akkumulator, https://de.wikipedia.org/wiki/Lithium-Eisenphosphat-Akkumulator#Eigenschaften, Zugriffsdatum: 2024-06-27, Herausgabedatum: 2024-06-11, Seiten 1-5 </p> <p>[BK_06] Walter Dvorak, LIFePO4 charge discharge diagram, https://de.wikipedia.org/wiki/Datei:LIFePO4_charge_discharge_diagram.svg, Zugriffsdatum: 2024-06-27, Herausgabedatum: 2016-12-28, Seiten 1-2 </p> <p>[BK_07] Citric, Seeed Studio XIAO ESP32S3, https://de.wikipedia.org/wiki/Datei:LIFePO4_charge_discharge_diagram.svg, Zugriffsdatum: 2024-06-27, Herausgabedatum: 2023-03-23, Seiten 1-4, 6 </p> <p>[BK_08] Espressif Systems, ESP32-S3 Series Datasheet, https://de.wikipedia.org/wiki/Datei:LIFePO4_charge_discharge_diagram.svg, Zugriffsdatum: 2024-06-27, Herausgabedatum: 2023-11-24, Seiten 2-4 </p> <p>[BK_09] BAK N21700CD-53E mit 5300mAh 10A 3,6V - 3,7V Li-Ionen-Akku, https://www.akkuteile.de/lithium-ionen-akkus/21700/bak/bak-n21700cd-53e-mit-5300mah-10a-3-6v-3-7v-li-ionen-akku_100625_3323, Zugriffsdatum: 2024-06-27, Herausgabedatum: 2024-02-28, Seite 1, 2-3 </p> <p>[BK_10] 1S PCB/PCM - Keeppower 1S-5530 (Schutzelektronik) 2MOS, https://www.akkuteile.de/1s-pcb-keeppower-xzd-1s5530-schutzelektronik-7a_200501_1407, Zugriffsdatum: 2024-06-27, Herausgabedatum: 2023-11-30, Seite 1 </p> <p>[BK_11] Fuyuang 1S 3,6V - 3,7V (4,2V) Li-Ion-Ladeger\u00e4t 2A + DC Stecker, https://www.akkuteile.de/fuyuang-enerpower-1s-3-6-3-7v-4-2v-li-ion-ladegeraet-2a-dc-stecker_400619_2570, Zugriffsdatum: 2024-06-27, Herausgabedatum: 2024-02-28, Seite 1 </p> <p>[BK_12] Walt Kester, Decoupling, https://www.analog.com/en/resources/analog-dialogue/studentzone/studentzone-april-2017.html, Zugriffsdatum: 2024-06-29, Herausgabedatum: 2024-04-13, Seiten 1-3 </p> <p>[BK_13] Analog Devices Inc., Decoupling Techniques, https://www.analog.com/en/resources/analog-dialogue/studentzone/studentzone-april-2017.html, Zugriffsdatum: 2024-06-29, Herausgabedatum: 2009-03, Seiten 1-6 </p> <p>[BK_14] W\u00fcrth Elektronik, MagI3C Power Module WPME-FISM, https://www.we-online.com/components/products/datasheet/1769205041.pdf, Zugriffsdatum: 2024-06-29, Herausgabedatum: 2023-08, Seiten 20-23 </p> <p>[BK_15] W\u00fcrth Elektronik, WS-TASV SMT Tact Switch, https://www.we-online.com/components/products/datasheet/430182050816.pdf, Zugriffsdatum: 2024-06-29, Herausgabedatum: 2020-06-04, Seiten 2-3 </p> <p>[BK_16] W\u00fcrth Elektronik, Kontakt-Entprellschaltung f\u00fcr Taster, https://www.we-online.com/catalog/media/o185485v410%20SN015b%20DE.pdf, Zugriffsdatum: 2024-06-29, Herausgabedatum: 2020-08-31, Seiten 1-2 </p> <p>[BK_17] Ultra Librarian, https://www.ultralibrarian.com, Zugriffsdatum: 2024-06-30, Herausgabedatum: 2024-06-19, Seite  </p> <p>[BK_18] SnapMagic, https://www.snapeda.com/home/, Zugriffsdatum: 2024-06-30, Herausgabedatum: 2024-06-25, Seite  </p> <p>[BK_19] Thea, 2 Layer Simple Design Rules, https://community.aisler.net/t/2-layer-simple-design-rules/3735, Zugriffsdatum: 2024-06-30, Herausgabedatum: 2024-05-22, Seite 4 </p> <p>[BK_20] Mehrere Authoren, Freerouthing, https://freerouting.org, https://github.com/freerouting/freerouting, Zugriffsdatum: 2024-06-30, Herausgabedatum: 2024-06-29, Seiten 1-6  </p> <p>[BK_21] Tim Williams, The ground plane: Lord of the Board, http://elmac.co.uk/Lord_of_the_board.pdf, Zugriffsdatum: 2024-06-30, Herausgabedatum: 2007-09, Seiten 1-6 </p> <p>[BK_22] 7.3inch e-Paper HAT (G) Manual, https://www.waveshare.com/wiki/7.3inch_e-Paper_HAT_(G)_Manual#Resource, Zugriffsdatum: 2024-06-29, Herausgabedatum: 2024-02-28, Seite 4 </p> <p>[BK_23] msfujino, Battery voltage monitor and AD conversion for XIAO_ESP32C, https://wiki.seeedstudio.com/XIAO_ESP32C3_Getting_Started/#check-the-battery-voltage, Zugriffsdatum: 2024-06-30, Herausgabedatum: 2023-12-15, Seite  </p> <p>[MW_01] Andreas G\u00e4rtner, Nutzungsbedingungen virtuelle Maschinen (VM), https://howto.informatik.hs-augsburg.de/index.php?title=Nutzungsbedingungen_virtuelle_Maschinen_(VM)&amp;oldid=389, 2024-06-26, 2024-06-17, S. 2</p> <p>[MW_02] Mehrere Autoren, Advanced Configuration and Power Interface, https://de.wikipedia.org/w/index.php?title=Advanced_Configuration_and_Power_Interface&amp;oldid=229877761, 2024-06-27, 2023-01-15, S. 1</p> <p>[MW_03] Mehrere Autoren, Clock-Gating,  https://de.wikipedia.org/w/index.php?title=Clock-Gating&amp;oldid=222280351, 2024-06-26, 2022-04-22, S. 1</p> <p>[MW_04] Mehrere Autoren, Introduction to the server side, https://developer.mozilla.org/en-US/docs/Learn/Server-side/First_steps/Introduction#what_can_you_do_on_the_server-side, 2024-06-27, 2024-01-01, S. 5</p> <p>[MW_05] Mehrere Autoren, Nextcloud Server Sourcecode, https://github.com/nextcloud/server/tree/master, 2024-06-27, 2024-06-27</p> <p>[MW_06] Mehrere Autoren, ESP32 Sleep Modes, https://docs.espressif.com/projects/esp-idf/en/stable/esp32/api-reference/system/sleep_modes.html?highlight=deep%20sleep, 2024-06-27, 2024-05-09, S. 1 - 6</p> <p>[MW_07] Korthauer, Reiner: \"Handbuch Lithium-Ionen-Batterien\", Berlin, Heidelberg: Springer Berlin / Heidelberg, 2024-06-28, 2013, S. 237 - 247</p> <p>[MW_08] Mehrere Autoren, Gebrauchsanweisung Kerpu Punktschwei\u00dfger\u00e4t, https://m.media-amazon.com/images/I/91dqZ7Y1-TL.pdf, 2024-06-28, 2022-11-15, S. 4</p> <p>[MW_10] Mehrere Autoren, E-Paper ESP32 Driver Board Demo Code, https://files.waveshare.com/upload/5/50/E-Paper_ESP32_Driver_Board_Code.7z, 2024-06-29, 2024-04-22</p> <p>[MW_10] Mehrere Autoren, Quick hack to port the IT8951 display driver to Arduino , https://github.com/clashman/it8951, 2024-06-29, 2019-11-14</p> <p>[AEG_01] Mehrere Autoren, Hardware Abstraction Layers, https://en.wikipedia.org/w/index.php?title=Hardware_abstraction&amp;oldid=1229915402, 2024-06-28, 2024-06-19</p> <p>[AEG_02] Mehrere Autoren, Arduino IDE, https://en.wikipedia.org/w/index.php?title=Arduino&amp;oldid=1231008379, 2024-06-28, 2024-06-25, S 1, 7-9</p> <p>[AEG_03] Mehrere Autoren, PlatformIO, http://Platform.io, 2024-06-28, 2024-06-02</p> <p>[AEG_04] Mehrere Autoren, ESP-IDF, https://docs.platformio.org/en/stable/frameworks/espidf.html, 2024-06-28, 2024-03-24</p> <p>[AEG_05] Mehrere Autoren, ESP-IDF vs Arduino, https://www.espboards.dev/blog/esp-idf-vs-arduino-core/, 2024-06-28, 2023-03-18</p> <p>[AEG_06] Mehrere Autoren, Installieren von PlatformIO extension, https://platformio.org/install/ide?install=vscode, 2024-06-29, 2024-05-24</p> <p>[AEG_07] Mehrere Autoren, Konfiguration von XIAO ESP32S, https://docs.platformio.org/en/latest//boards/espressif32/seeed_xiao_esp32s3.html, 2024-06-29, 2024-03-06</p> <p>[AEG_08] Vincent Driessen, Git flow, https://nvie.com/posts/a-successful-git-branching-model/, 2024-06-29, 2024-03-05</p> <p>[AEG_09] Mehrere Autoren, PsychicHttp Bibliothek und die Wiki, https://github.com/hoeken/PsychicHttp, 2024-06-29, 2024-05-28</p> <p>[AEG_10] Mehrere Autoren, HTTP Methoden MDN, https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods, 2024-06-29, 2024-06-29</p> <p>[AEG_11] Mehrere Autoren, HTTP Methoden Wikipedia, https://en.wikipedia.org/w/index.php?title=HTTP&amp;oldid=1231005162#HTTP/1.1_request_messages, 2024-06-29, 2024-06-25, S. 10-11</p> <p>[AEG_12] Mehrere Autoren, HTTP GET Request, https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/GET, 2024-06-29, 2024-05-21</p> <p>[AEG_13] Mehrere Autoren, HTTP POST Request, https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/POST, 2024-06-29, 2024-06-09</p> <p>[AEG_14] L. Masinter, RFC7578 \u00fcber multipart/form-data, https://www.rfc-editor.org/rfc/pdfrfc/rfc7578.txt.pdf, 2024-06-29, 2015-06</p> <p>[AEG_15] Mehrere Autoren, HTTP MIME types, https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types, 2024-06-29, 2024-06-26</p> <p>[AEG_16] Mehrere Autoren, multipart/form-data MDN, https://developer.mozilla.org/en-US/docs/Learn/Forms/Sending_and_retrieving_form_data, 2024-06-29, 2024-05-22</p> <p>[AEG_17] Mehrere Autoren, Basic Auth MDN, https://developer.mozilla.org/en-US/docs/Web/HTTP/Authentication, 2024-06-29, 2024-05-22</p> <p>[AEG_18] Mehrere Autoren, Was ist HTTPS, https://en.wikipedia.org/w/index.php?title=HTTPS&amp;oldid=1231015807, 2024-06-29, 2024-06-26, S. 1</p> <p>[AEG_19] Mehrere Autoren, Espressif dokumentation \u00fcber GPIO, https://docs.espressif.com/projects/esp-idf/en/v5.2.2/esp32s3/api-reference/peripherals/gpio.html, 2024-06-29, 2023-10-12</p> <p>[AEG_20] Mehrere Autoren, Espressif dokumentation \u00fcber SPI, https://docs.espressif.com/projects/esp-idf/en/v5.2.2/esp32s3/api-reference/peripherals/spi_master.html, 2024-06-29, 2024-10-08</p> <p>[AEG_21] Mehrere Autoren, Was ist SPI, https://en.wikipedia.org/w/index.php?title=Serial_Peripheral_Interface&amp;oldid=1230957841, 2024-06-29, 2024-06-25, S. 1-3</p> <p>[AEG_22] Mehrere Autoren, Waveshare wiki 9.7\" Display, https://www.waveshare.com/wiki/9.7inch_e-Paper_HAT, 2024-06-29, 2024-05-25</p> <p>[AEG_23] Mehrere Autoren, Waveshare wiki 7.3\" Display, https://www.waveshare.com/wiki/7.3inch_e-Paper_HAT_(G)_Manual, 2024-06-29, 2023-12-08</p> <p>[AEG_024] Mehrere Autoren, Was ist PNG, https://en.wikipedia.org/w/index.php?title=PNG&amp;oldid=1222529480, 2024-06-29, 2024-05-06, S. 1</p> <p>[AEG_25] Mehrere Autoren, PNGdec Bibliothek, https://github.com/bitbank2/PNGdec, 2024-06-29, 2024-04-19</p> <p>[AEG_26] Mehrere Autoren, Euclidean distance, https://en.wikipedia.org/w/index.php?title=Euclidean_distance&amp;oldid=1214273566, 2024-06-29, 2024-03-17</p>"},{"location":"StandDerWissenschaftUndTechnik/","title":"Marktanalyse aktueller Trends und Technologien","text":"<p>Julia Reuter</p> <p>Die Motivation des Projektteams lag bei erster Betrachtung des Projektes Low-Power Raumanzeige f\u00fcr die THA haupts\u00e4chlich in der Steigerung der Effizienz und des eigenen Komforts, wodurch das Projekt eher als Nischenprodukt f\u00fcr den internen Gebrauch angesehen wurde. Diese Einstellung \u00e4nderte sich jedoch schnell nach einiger Recherche.</p> <p>Nicht nur ist der potenzielle Markt f\u00fcr eine Low-Power Raumanzeige aufgrund der vielf\u00e4ltigen Einsatzgebiete in B\u00fcror\u00e4umen, Krankenh\u00e4usern, Bildungseinrichtungen, usw. relativ gro\u00df, sondern auch im Hinblick auf das Thema Umwelt, Nachhaltigkeit und Digitalisierung, lange nicht ausgesch\u00f6pft. So wird beispielsweise eine effiziente Nutzung von R\u00e4umen durch klare Erkennbarkeit der Belegung erm\u00f6glicht und durch intelligente Verwaltung k\u00f6nnen sogar unn\u00f6tige Heiz- und Beleuchtungskosten reduziert werden, wenn der Raum gerade nicht genutzt wird. Dar\u00fcber hinaus kann auf papierbasierte Stundenpl\u00e4ne und T\u00fcrschilder verzichtet werden, was nicht nur den damit verbundenen personellen Verwaltungsaufwand zur Instandhaltung deutlich verringert, sondern auch die bislang verwendeten Ressourcen minimiert.</p> <p>All dieses Aspekte sind Merkmale f\u00fcr ein durchaus zukunfttaugliches Produkt und gerade deshalb gibt es bereits einige Unternehmen, die dieses Potenzial erkannt und entsprechende Produkte entwickelt haben.</p> <p>Im Folgenden werden nun vier haupts\u00e4chlich deutsche Unternehmen analysiert, welche als Inspiration f\u00fcr die eigene Raumanzeige dienten und durch ihr breites Spektrum dem Team zu neuen Ans\u00e4tzen und Ideen verhalfen.</p>"},{"location":"StandDerWissenschaftUndTechnik/#ubersicht-einiger-konkurrenzprodukte","title":"\u00dcbersicht einiger Konkurrenzprodukte","text":"<p>Bei den ausgew\u00e4hlten Unternehmen und Produkten handelt es sich um:</p> <ul> <li>Wizepanel der Firma Wilke Technology in Aachen [JR_01]</li> <li>Digitales T\u00fcrschild der Firma digitalSIGNAGE in Hamburg [JR_02]</li> <li>Display der Firma ROOMZ in Freiburg (Schweiz) [JR_03]</li> <li>Touchscreen-Display der Firma Beetronics in D\u00fcsseldorf [JR_04]</li> </ul> <p>Im Hinblick auf das Projekt lag der Fokus der Recherche auf folgenden Aspekten, welche im Anschluss tabellarisch (s. ) aufgelistet werden: </p> <ul> <li>Display Art (LCD oder E-Paper)</li> <li>Farbunterst\u00fctzung</li> <li>Ansteuerung/Netzprotokoll</li> <li>Batterie und gesch\u00e4tzte Laufzeit</li> <li>Betrieb (Schnittstelle zum Kunden)</li> <li>Besondere Features</li> </ul>"},{"location":"StandDerWissenschaftUndTechnik/#produktvergleich-ausgewahlter-unternehmen","title":"Produktvergleich ausgew\u00e4hlter Unternehmen","text":"\u00dcbersicht und Vergleich der 4 ausgew\u00e4hlten Raumanzeigen  Produkt Display Art Farbunterst\u00fctzung Ansteuerung/Netzprotokoll Batterie und gesch\u00e4tzte Laufzeit Betrieb (Kundenschnittstelle) Besondere Features Wizepanel [JR_05] E-Paper Schwarz-Wei\u00df, 16 Graustufen 868 MHz Ultra Low Power Funk, eigene Funksender 10 x AA-Lithium-Prim\u00e4rzellen, bis zu 20 Jahre Zentrale Serverkomponente: Inhalts\u00fcbertragung und Ger\u00e4teverwaltung Bereits in den Server integrierte Adapter f\u00fcr MS Exchange, iCal/ICS, Google Calendars, Excel,... Auch WebUntis wird unterst\u00fctzt [JR_08] Digitales T\u00fcrschild [JR_06] Touch-Screen (kein E-Paper) Farbe Ethernet, NFC-Option verf\u00fcgbar Power over Ethernet (PoE) \u2192 Kabelanschluss n\u00f6tig Keine Angabe LEDs rund um Display (rot, gelb, gr\u00fcn) zur Hervorhebung der Raumbelegung, Sofortbuchung \u00fcber Touch/NFC ROOMZ [JR_03] E-Paper Schwarz-Wei\u00df WLAN 8000mAh, 4 Jahre MyRoomz-App zur Buchung einzelner definierter Arbeitsbereiche [JR_10] MyRoomz-App bietet Lageplanansicht des Geb\u00e4udes mit \u00dcbersicht aller R\u00e4ume mit Markierung ob sie belegt sind oder nicht [JR_10], ROOMZ Sensor zur Vermeidung von Ghost-Meetings [JR_09], Sofortbuchung \u00fcber Touchleiste am Geh\u00e4use Beetronics [JR_07] High Brightness Full HD Touchscreen Farbe Display Port, HDMI, VGA, USB-C, Unterst\u00fctzung aller g\u00e4ngigen Betriebssysteme Netzteil (d.h. Stromanschluss) denn braucht 12.7W (Betrieb)/0.4W (Standby) Einfaches Plug-and-Play, sonst eigener Treiber f\u00fcr verschiedene Betriebssysteme verf\u00fcgbar Keine spezifischen Features angegeben, aber allgemein sehr vielf\u00e4ltig universell einsetzbar"},{"location":"StandDerWissenschaftUndTechnik/#auswertung-der-rechercheergebnisse","title":"Auswertung der Rechercheergebnisse","text":""},{"location":"StandDerWissenschaftUndTechnik/#vor-und-nachteile-der-einzelnen-produkte","title":"Vor- und Nachteile der einzelnen Produkte","text":"Vor-und Nachteile der vier Displayprodukte  Hersteller Vorteile Nachteile Wizepanel - E-Paper-Technologie: Geringer Energieverbrauch - Schwarz-wei\u00df Display: Keine Farbdarstellung m\u00f6glich - Lange Akkulaufzeit: Bis zu 20 Jahre - Eigene Funksender zur Daten\u00fcbertragung werden ben\u00f6tigt: Abh\u00e4ngigkeit von zus\u00e4tzlicher Hardware - Ultra Low Power Funk: Energiesparende und drahtlose Kommunikation - Serverintegration: Unterst\u00fctzung f\u00fcr g\u00e4ngige Kalender- und Verwaltungssysteme digitalSIGNAGE - Touch-Screen und Farbe: Interaktive und ansprechende Benutzeroberfl\u00e4che - Power over Ethernet (PoE): Ben\u00f6tigt eine Kabelverbindung, externe Abh\u00e4ngigkeit - NFC-Option und Ethernet: Flexibilit\u00e4t bei der Ansteuerung - Keine Angaben zur Akku-Laufzeit: Unklarheit \u00fcber Energieeffizienz vermutlich aber eher gering aufgrund der Displaytechnologie - LEDs zur Raumbelegung: Visuelle Hinweise zur Raumverf\u00fcgbarkeit ROOMZ - E-Paper-Technologie: Geringer Energieverbrauch - Schwarz-wei\u00df Display: Keine Farbdarstellung m\u00f6glich - WLAN: Einfache Integration in bestehende Netzwerke - Lange Akkulaufzeit: Bis zu 4 Jahre - MyRoomz-App: Umfassende Funktionen zur Raumbuchung und -verwaltung, auch \u00fcber mobile Endger\u00e4te Beetronics - High Brightness Full HD Touchscreen: Hervorragende Bildqualit\u00e4t und interaktive M\u00f6glichkeiten - Verh\u00e4ltnism\u00e4\u00dfig sehr hoher Energieverbrauch - Vielseitige Anschlussm\u00f6glichkeiten: Unterst\u00fctzung f\u00fcr Display Port, HDMI, VGA, USB-C; Flexibili\u00e4t in der Ansteuerung - Kabelgebunden: Abh\u00e4ngigkeit von st\u00e4ndiger Stromquelle."},{"location":"StandDerWissenschaftUndTechnik/#abgeleitete-kriterien-fur-das-eigene-produkt","title":"Abgeleitete Kriterien f\u00fcr das eigene Produkt","text":"<p>Basierend auf der Analyse der Vor- und Nachteile der Konkurrenzprodukte (vgl. ) sollten folgende Eigenschaften in die eigene Low-Power Raumanzeige integriert werden, um die grundlegenden Markanforderungen zu erf\u00fcllen:</p> <ol> <li>E-Paper-Technologie: F\u00fcr minimalen Energieverbrauch und lange Akkulaufzeit</li> <li>Lange Akkulaufzeit: Nutzung von effizienten Batterien f\u00fcr eine wartungsarme L\u00f6sung und unabh\u00e4ngigen Betrieb</li> <li>Drahtlose Kommunikation: WLAN oder Funk f\u00fcr flexible und einfache Installation sowie geringem Energieverbrauch</li> <li>Integration in bestehende Systeme: Unterst\u00fctzung f\u00fcr g\u00e4ngige Kalender- und Verwaltungssysteme (z.B. iCal/ICS oder WebUntis) \u00fcber zentrale Serverkomponenten zur effizienten Verwaltung und Nutzung</li> </ol>"},{"location":"StandDerWissenschaftUndTechnik/#ansatze-zur-verbesserung-der-konkurrenzfahigkeit-auf-dem-markt","title":"Ans\u00e4tze zur Verbesserung der Konkurrenzf\u00e4higkeit auf dem Markt","text":"<p>Um sich von den zahlreichen Konkurrenzprodukten abzuheben, gibt es einige Ans\u00e4tze. Denn auch wenn es sich um ein E-Paper Display handelt, besteht die M\u00f6glichkeit eine gewisse Benutzerinteraktion f\u00fcr zum Beispiel spontane Raumbuchung zu integrieren, die energiesparend und auch ohne Touchfunktion umsetzbar ist. Auch ein E-Paper-Display mit Farbunterst\u00fctzung w\u00fcrde dazu beitragen das eher schlichtes Produkt f\u00fcr den Kunden optisch ansprechender zu gestalten und sich von der Masse abzuheben.</p> <p>Das zentrale Alleinstellungsmerkmal ist jedoch das Entwickeln eines m\u00f6glichst generischen Konzeptes, das sehr flexibel einsetzbar ist. Denn eine Einschr\u00e4nkung der obigen Systeme ist, dass alle zentral \u00fcber eine Serverkomponente gesteuert werden und teilweise sogar eigene Funkverteiler brauchen. Dies ist f\u00fcr den Benutzer mit viel Aufwand und Kosten verbunden und lohnt sich nur f\u00fcr sehr gro\u00dfe Organisationen. </p> <p>Zudem ist man stets von einer externen Softwarekomponente abh\u00e4ngig, denn die Display Ansteuerungsschnittstelle wird ebenfalls vom Hersteller in Form von einem Server (vgl. Wizepanel) oder einer App (vgl. ROOMZ) geliefert. So ist das System bei Ausfall oder Fehlverhalten nicht mehr einsatzf\u00e4hig, bis das Problem durch eine externe Partie, sprich dem Hersteller behoben wurde.</p> <p>Genau hier setzt das Projektteam an und entwickelt ein Konzept, indem die Raumanzeige nicht zwingend eine zus\u00e4tzliche externe Infrastruktur ben\u00f6tigt.  Es soll ein Option f\u00fcr eine Standalone-Funktionalit\u00e4t geben, sodass das Low-Power Display sowohl v\u00f6llig unabh\u00e4ngig von jeglicher zus\u00e4tzlicher Soft- und Hardware ist und autark funkionieren kann. Gleichzeitig besteht weiterhin die M\u00f6glichkeit eine zentrale Verwaltungskomponente zu integrieren, um auch mehrere Displays verwalten zu k\u00f6nnen.  Diese Flexibilit\u00e4t gekoppelt mit der Pr\u00e4misse, das System Open-Source zu gestalten, sorgt f\u00fcr eine hohe Konkurrenzf\u00e4higkeit auf dem Markt. </p> <p>Der Kunde kann somit nach Belieben das System erweitern und anpassen, wodurch die Low-Power Raumanzeige nicht nur f\u00fcr die Hochschule attraktiv ist sondern auch in kleinern Kreisen und sogar im privaten Gebrauch eingesetzt werden kann.</p>"},{"location":"Systemkonzept/","title":"Systemkonzept","text":"<p>Julia Reuter</p> <p>Basierend auf den Rechercheergebnissen aus Kapitel 3 hat das Team folgendes Systemkonzept f\u00fcr die Low-Power Raumanzeige entwickelt.</p>"},{"location":"Systemkonzept/#grundaufbau-der-hardware","title":"Grundaufbau der Hardware","text":"<p>Abbildung 6.1 Visualisierung des Grundkonzepts des Systems </p> <p></p> <p>Wie in Abbildung 6.1 veranschaulicht, besteht das Low-Power Display Modul aus:</p> <ul> <li>Einem Akku, der die Stromversorgung des gesamten Systems gew\u00e4hrleistet</li> <li>Einem Mikrocontroller, der die zentrale Steuereinheit bildet und die anzuzeigenden Informationen \u00fcber WLAN empf\u00e4ngt, entsprechend aufbereitet und weitergibt</li> <li>Einem E-Paper Display, das \u00fcber eine geeignete Schnittstelle die Daten von dem Mikrocontroller erh\u00e4lt und im Anschluss direkt anzeigen kann</li> </ul> <p>Angedacht sind zudem zwei Kn\u00f6pfe, die Benutzerinteraktionen erm\u00f6glichen. Zum Beispiel kann das System nach einem Fehler neu gestartet, oder sogar wieder auf Werkseinstellungen zur\u00fcckgesetzt werden. Auch das angezeigte Bild k\u00f6nnte einfach per Knopfdruck ge\u00e4ndert werden. </p> <p>Verbaut werden die einzelnen Komponenten in einem kompakten 3D-gedruckten Geh\u00e4use, welches sich einfach und ohne externe Kabel montieren l\u00e4sst.</p>"},{"location":"Systemkonzept/#allgemeine-software-funktionen","title":"Allgemeine Software-Funktionen","text":"<p>Da die gesamte Ansteuerung des Systems \u00fcber einen Mikrocontroller erfolgt, muss dieser entsprechend programmiert werden. Er bildet die zentrale Steuereinheit, die sich mit entsprechender Firmware um das Empfangen und Senden von Daten, die Displayansteuerung und das Powermanagement k\u00fcmmert.  Durch ihn soll es dem Benutzer erm\u00f6glicht werden, \u00fcber eine einfache und intuitive Schnittstelle, wie beispielsweise eine Website, das Display mit Inhalten zu versorgen. So k\u00f6nnen ohne viel Aufwand Bilddateien auf der Website hochgeladen und mit nur mit einem Klick \u00fcber eine WLAN-Verbindung an das Modul geschickt werden. Auch die Displayverwaltung und diverse Einstellungen werden \u00fcber diese Art von Interface bequem gesteuert.</p>"},{"location":"Systemkonzept/#potentielle-einsatzgebiete-der-low-power-raumanzeige","title":"Potentielle Einsatzgebiete der Low-Power Raumanzeige","text":"<p>In der Projektdefinition ist die Hochschule als konkreter Kunde genannt, weshalb der Fokus vor allem auf diesen spezifischen Anwendungsfall gerichtet ist. Hier besteht die Hauptidee darin, die Raumverf\u00fcgbarkeit in Echtzeit anzuzeigen und \u00fcber das Stattfinden von Veranstaltungen, Vorlesungen und Seminaren zu informieren. </p> <p>Dies bedeutet, dass Studenten schnell und unkompliziert herausfinden k\u00f6nnen, welche R\u00e4ume gerade frei sind, um ungest\u00f6rt zu lernen oder Gruppenarbeiten durchzuf\u00fchren. Dozenten k\u00f6nnen sicherstellen, dass ihre geplanten Veranstaltungen in den vorgesehenen R\u00e4umen stattfinden und bei Bedarf kurzfristige \u00c4nderungen kommunizieren. Auch das Verwaltungspersonal profitiert von einer effizienten Raumverwaltung, die durch das Anzeigen zus\u00e4tzlicher Informationen, wie beispielsweise das Melden defekter Beamer, die Wartung der R\u00e4umlichkeiten verbessert.</p> <p>Um ein solches Netz an Displays an der Hochschule reibungslos betreiben zu k\u00f6nnen, ist, nach Vorbild der Konkurrenz (vgl. Kapitel 3), die zentrale Verwaltung \u00fcber eine Serverkomponente sinnvoll. Es bietet sich hierbei an, je nach Standort bzw. Raum, IDs zu vergeben, sodass alle Inhalte korrekt zugeordnet werden k\u00f6nnen. Mithilfe einer Schnittstelle zu g\u00e4ngigen Kalendersystemen wie ICS oder WebUntis wird nicht nur \u00fcber die Raumverf\u00fcgbarkeit informiert, sondern auch der gesamte Tagesstundenplan der jeweiligen H\u00f6rs\u00e4le ist sofort ersichtlich.</p> <p>Das Einsatzgebiet der Low-Power Raumanzeige ist jedoch nicht nur auf den Hochschulbereich beschr\u00e4nkt. Vor allem f\u00fcr den mobilen Einsatz oder f\u00fcr Privatpersonen ist das Einrichten und Verwalten eines Servers unpraktisch und zeitaufw\u00e4ndig. Deshalb ist das System so flexibel und generisch gehalten, dass es die Bed\u00fcrfnisse unterschiedlicher Benutzergruppen erf\u00fcllt. </p> <p>So kann es auch von kleineren Firmen zur effizienten Verwaltung von einzelnen Besprechungsr\u00e4umen oder Shared-Desk-Systemen eingesetzt werden. Auch auf Messest\u00e4nden oder in Tagungsr\u00e4umen ist eine universelle Low-Power Anzeige denkbar. In diesen Anwendungsf\u00e4llen ist h\u00e4ufig keine geeignete Infrastruktur vorhanden, um ein komplexes System zu integrieren. Deshalb ist es m\u00f6glich, das Display nicht nur in einem \"Server-Modus\" zu betreiben, sondern auch in den zwei weiteren Betriebsmodi \"Standalone\" und \"Netzwerk\".</p> <p>Im Standalone-Modus kann das Display am flexibelsten eingesetzt werden, da keinerlei Grundaustattung am Montageort n\u00f6tig ist. Der im System integrierte Mikrocontroller \u00f6ffnet einen WLAN Access-Point, sodass sich ein Client-Ger\u00e4t, wie beispielsweise das eigene Handy, mit der Raumanzeige verbindet. Der Benutzer kanndarufhin direkt \u00fcber sein Ger\u00e4t den gew\u00fcnschten Inhalt an das Display \u00fcbermitteln. Dieser Modus erweitert das Low-Power Raumdisplay zu einer v\u00f6llig autarken Anzeigetechnologie. </p> <p>Im Netzwerkmodus ist das Konzept \u00e4hnlich, mit dem Unterschied, dass sich sowohl das Displaymodul als auch das Client-Ger\u00e4t im gleichen WLAN, wie zum Beispiel dem eigenen Heimnetzwerk, befinden und kommunizieren.</p>"},{"location":"Systemkonzept/#die-drei-betriebsmodi-der-raumanzeige-im-vergleich","title":"Die drei Betriebsmodi der Raumanzeige im Vergleich","text":""},{"location":"Systemkonzept/#standalone-modus","title":"Standalone-Modus","text":"Modus Vorteile Nachteile Standalone <ul><li>Keine zus\u00e4tzliche Infrastruktur erforderlich</li></ul> <ul><li>Eingeschr\u00e4nkte Funktionalit\u00e4t im Vergleich zu anderen Modi</li></ul> <ul><li>Einfache Einrichtung und Nutzung</li></ul> <ul><li>Begrenzte Reichweite, Benutzer muss vor Ort sein</li></ul> <ul><li>Hohe Flexibilit\u00e4t, da es an jedem Ort eingesetzt werden kann</li></ul> <ul><li>Keine zentrale Verwaltung oder automatisierte Darstellung m\u00f6glich</li></ul> <ul><li>Ideal f\u00fcr den mobilen Einsatz und Privatpersonen</li></ul>"},{"location":"Systemkonzept/#netzwerk-modus","title":"Netzwerk-Modus","text":"Modus Vorteile Nachteile Netzwerk <ul><li>Nutzung bestehender WLAN-Infrastruktur</li></ul> <ul><li>Erfordert ein funktionierendes WLAN-Netzwerk</li></ul> <ul><li>Mehrere Ger\u00e4ten innerhalb des gleichen Netzwerks k\u00f6nnen mit dem Display kommunizieren</li></ul> <ul><li>Abh\u00e4ngigkeit von bestehendem Netzwerk</li></ul> <ul><li>Benutzer muss nicht vor Ort sein</li></ul> <ul><li>Zugeteilte IP-Adresse des Moduls muss bekannt sein, um sich zu verbinden</li></ul>"},{"location":"Systemkonzept/#server-modus","title":"Server-Modus","text":"Modus Vorteile Nachteile Server <ul><li>Zentrale Verwaltung und Steuerung vieler Ger\u00e4te</li></ul> <ul><li>Etwas h\u00f6herer Einrichtungs- und Wartungsaufwand</li></ul> <ul><li>M\u00f6glichkeit zur Integration mit Kalender- und Verwaltungssystemen</li></ul> <ul><li>Erfordert Server-Hardware und weitere IT-Ressourcen</li></ul> <ul><li>Geeignet f\u00fcr gro\u00dfe Organisationen und Institutionen</li></ul> <ul><li>Abh\u00e4ngigkeit von der Serververf\u00fcgbarkeit und Netzwerkinfrastruktur</li></ul> <ul><li>Erm\u00f6glicht komplexe Funktionen wie automatische Updates, Synchronisation und umfangreiche Datenanalyse</li></ul>"},{"location":"Teamorga/","title":"Teamorganisation","text":""},{"location":"Teamorga/#kommunikation-notion-nextcloud-whatsapp-zoom-github","title":"Kommunikation (Notion, Nextcloud, Whatsapp, Zoom, Github)","text":""},{"location":"Teamorga/#rollenaufteilung","title":"Rollenaufteilung","text":""},{"location":"Teamorga/#zeitplan","title":"Zeitplan","text":""},{"location":"Webentwicklung/","title":"Webentwicklung","text":""},{"location":"Webentwicklung/#framework-und-library-auswahl","title":"Framework und Library Auswahl","text":"<p>Julia Reuter</p> <p>Die Interaktion zwischen Benutzer und Raumanzeige soll so einfach und unkompliziert wie m\u00f6glich gehalten werden und dennoch gen\u00fcgend Funktionalit\u00e4ten unterst\u00fctzen. Sie erfolgt deshalb \u00fcber eine selbsterstellte Webseite, die mithilfe von HTML5, CSS sowie JavaScript designt wurde und \u00fcber den ESP32-Webserver gehostet wird.  Als externe Bibliothek verwendet die Benutzerwebseite nur die Javascript Library html2canvas, um \u00e4u\u00dfere Abh\u00e4ngigkeiten so weit wie m\u00f6glich zu vermeiden. Mit \u00fcber 182.000 Downloads und 45 Releases (zuletzt am 22.01.2022) [JR_19], wurde sich aufgrund der Popularit\u00e4t und der guten Pflege bewusst f\u00fcr diese Bibliothek entschieden. Der Javascript-Code kann heruntergeladen werden, sodass er lokal auf dem ESP32 gespeichert und eingebunden wird.</p>"},{"location":"Webentwicklung/#beschreibung-der-html2canvas-bibliothek","title":"Beschreibung der html2canvas Bibliothek","text":"<p>Julia Reuter</p> <p>Die JavaScript Library html2canvas erm\u00f6glicht es, \"Screenshots\" von Webseiten oder Teilen davon direkt im Browser des Benutzers zu erstellen. Im Gegensatz zu herk\u00f6mmlichen Screenshots, die das tats\u00e4chliche Aussehen der Webseite pixelgenau erfassen, basiert html2canvas auf dem DOM (Document Object Model).  Das Document Object Model ist eine plattform- und sprachunabh\u00e4ngige Schnittstelle, die HTML- und XML-Dokumente als strukturierte Baumdarstellungen repr\u00e4sentiert. In einem DOM-Baum ist jedes Element, Attribut und St\u00fcck Text in einem Dokument als ein \"Node\" (Knoten) dargestellt und kann \u00fcber unter anderem auch \u00fcber eine vergebene ID einzeln angesprochen werden. Diese Knoten sind durch Beziehungen wie Eltern-Kind und Geschwisterknoten miteinander verbunden, wodurch eine hierarchische Struktur entsteht [JR_12].</p> <p>Auf Grundlage der im DOM verf\u00fcgbaren Informationen erstellt die Html2Canvas-Bibliothek eine Repr\u00e4sentation der Webseite. Hierf\u00fcr durchl\u00e4uft  der Scrip die DOM-Struktur und sammelt Informationen \u00fcber alle vorhandenen Elemente. Diese Informationen nutzt es, um eine visuelle Darstellung der Seite zu generieren. Dabei werden diverse Eigenschaften der HTML-Elemente und CSS-Stile ber\u00fccksichtigt, um die Struktur und das Erscheinungsbild der Webseite so genau wie m\u00f6glich nachzubilden [JR_11].</p> <p>Um einen Screenshot eines spezifischen Teils einer Webseite zu erstellen, kann ein bestimmtes div-Element \u00fcbergeben werden. Der Script durchl\u00e4uft dann nur den Teil der DOM-Struktur, der mit dieser spezifischen ID verbunden ist. Dies erm\u00f6glicht es, pr\u00e4zise und gezielt nur bestimmte Abschnitte einer Webseite zu erfassen und darzustellen, anstatt die gesamte Seite zu ber\u00fccksichtigen.</p>"},{"location":"Webentwicklung/#einschrankungen-von-html2canvas","title":"Einschr\u00e4nkungen von html2canvas","text":"<p>html2canvas unterst\u00fctzt eine Vielzahl von CSS-Stilen und kann beispielsweise background-color, border-radius, font-family und text-shadow korrekt rendern. Allerdings werden komplexere Eigenschaften wie filter, mix-blend-mode oder zoom nicht unterst\u00fctzt. </p> <p>Der wesentlichste Punkt bei der Verwendung von html2canvas ist jedoch die Behandlung von Bildern und anderen Medieninhalten. Bilder m\u00fcssen unter derselben Herkunft (Same-Origin Policy) wie die Webseite liegen, damit die Bibliothek darauf zugreifen und sie korrekt darstellen kann.  Die Same-Origin Policy ist ein Sicherheitskonzept, das in Webbrowsern implementiert ist, um zu verhindern, dass Skripte von einem Ursprung auf Inhalte eines anderen Ursprungs zugreifen. Ein Ursprung wird durch das Protokoll, den Host und den Port definiert. Diese Richtlinie soll verhindern, dass b\u00f6sartige Skripte auf sensible Daten zugreifen k\u00f6nnen, die von einer anderen Webseite stammen [JR_13]</p> <p>Da html2canvas auf Informationen aus dem DOM angewiesen ist, kann es Dateien aller Art, die von einem anderen Ursprung stammen, nicht direkt rendern. Dies f\u00fchrt dazu, dass eingebundene Bilder im erzeugten Screenshot fehlen oder unvollst\u00e4ndig dargestellt werden [JR_11].</p> <p>Um trotzdem Abbildungen im html2canvas Screenshot darzustellen, besteht die M\u00f6glichkeit, diese in Base64 kodiert direkt in das HTML-Dokument einzubetten. Diese Kodierung erm\u00f6glicht es, das Bild als Zeichenkette darzustellen, die vom Browser unabh\u00e4ngig von der urspr\u00fcnglichen Quelle verarbeitet werden kann. Dies umgeht die Same-Origin-Beschr\u00e4nkungen, f\u00fchrt jedoch zu einer erh\u00f6hten Datenmenge (33-37% Overhead im Vergleich zu der Originaldatei) und entsprechend l\u00e4ngeren Ladezeiten [JR_14]</p>"},{"location":"Webentwicklung/#browserkompatibilitat","title":"Browserkompatibilit\u00e4t","text":"<p>Die Bibliothek ist mit den meisten modernen Browsern kompatibel, einschlie\u00dflich Firefox (ab Version 3.5), Google Chrome, Opera (ab Version 12), Internet Explorer (ab Version 9), Edge und Safari (ab Version 6) [JR_11].</p>"},{"location":"Webentwicklung/#benutzerwebseite","title":"Benutzerwebseite","text":"<p>Julia Reuter</p>"},{"location":"Webentwicklung/#aufbau-und-funktionalitaten","title":"Aufbau und Funktionalit\u00e4ten","text":"<p>Die Webseite zur Steuerung der Anzeigeinhalte unterst\u00fctzt folgende zwei Funktionalit\u00e4ten: PNG-Upload und HTML-Design</p>"},{"location":"Webentwicklung/#png-upload","title":"PNG-Upload","text":"<p>Nutzer k\u00f6nnen per Knopfdruck ein PNG-Bild ausw\u00e4hlen und hochladen, sodass es im Anschluss direkt auf dem verbundenen Display angezeigt wird. Wichtig zu beachten ist hierbei, dass das PNG exakt auf die Pixeldimensionen des Displays abgestimmt ist, da es sonst nicht auf dem Display dargestellt werden kann. Um unn\u00f6tigen Ressourcenverbrauch durch Senden fehlerhafter Dateien zu vermeiden, wird vor dem Upload \u00fcberpr\u00fcft, ob es sich bei der hochgeladenen Datei um ein PNG handelt und ob die Breite und H\u00f6he, der des angeschlossenen Displays entspricht. Falls die Abmessungen nicht stimmen, oder ein anderes Dateiformat ausgew\u00e4hlt wurde, wird der Upload abgelehnt und der Nutzer erh\u00e4lt eine entsprechende Fehlermeldung. Erst wenn die Bildgr\u00f6\u00dfe korrekt ist, wird die Datei per HTTP POST (vgl. Kapitel) an den Server gesendet, wo es anschlie\u00dfend weiter verarbeitet wird.</p>"},{"location":"Webentwicklung/#html-design","title":"HTML-Design","text":"<p>Ein weitere M\u00f6glichkeit, das Display mit Inhalten zu versorgen, ist mithilfe von HTML und CSS ein Design zu erstellen und hochzuladen.  Der Benutzer kann in ein Textfeld HTML-Code eingeben und sich in Echtzeit eine Vorschau anzeigen lassen. Hierf\u00fcr rendert die Webseite den Code bei jeder Eingabe in das Textfeld, sodass das Programmieren durch diese Art von Live\u00fcbertragung der Designfortschritt stets ersichtlich ist. Nat\u00fcrlich kann der Code auch au\u00dferhalb in einer Entwicklungsumgebeung wie VS-Code geschrieben und anschlie\u00dfend in das vorhandene Textfeld kopiert werden.  Damit nach Fertigstellung des Designs der HTML-Code an den Server gesendet werden kann, muss das HTML-Design zun\u00e4chst in ein PNG konvertiert werden. Diese Konvertierung erfolgt per Knopfdruck durch die in Kapitel 9.1.1 beschriebene Bibliothek html2canvas. Nachdem der erfolgreichen Umwandlung wird auch dieses PNG auf die korrekten Dimensionen \u00fcberpr\u00fcft und an den Server \u00fcbermittelt. Es liegt hier also am Benutzer, sein Design im korrekten Pixelformat zu erzeugen.</p> <p>Zus\u00e4tzlich stehen dem Benutzer vordefinierte HTML-Vorlagen zur Auswahl, um den gesamten Prozess etwas zu verk\u00fcrzen. F\u00fcr bestimmte Anwendungsf\u00e4lle wie bespielsweise ein Pausenschild vor der B\u00fcrot\u00fcre oder eine Stundenplananzeige vor dem H\u00f6rsal wurde ein Layout erstellt,dessen Inhalt \u00fcber ein zus\u00e4tzliches Textfeld personalisiert werden kann. Nat\u00fcrlich kann das Design auch direkt \u00fcber den jweiligen HTML-Code angepasst werden, was dem Nutzer noch zus\u00e4tzliche Felxibilit\u00e4t bietet.  Hintergrund dieses Vorlagen-Konzeptes ist, wenn mehrere Displays beispielsweise als Raumanzeigen vor H\u00f6rs\u00e4len eingesetzt werden, k\u00f6nnten ICS-Kalenderdaten aus WebUntis automatisiert in ein bestehendes Layout integriert werden. Dieser Schritt erspart viel Zeit und ist sp\u00e4testens bei der Verwaltung von vielen Modulen im Server-Modus essentiell. </p>"},{"location":"Webentwicklung/#settings-page","title":"Settings Page","text":"<p>Neben den verschiedenen Design-Upload Varianten, bietet die Benutzerwebseite noch eine Einstellungsseite mit einigen Konfigurationsm\u00f6glichkeiten. </p> <ol> <li>Betriebsmodus</li> <li>Verbundenes Display-Modul</li> <li>WiFi-Konfiguration</li> <li>Serielles Konsolen Log-Level</li> <li>HTTP Authentifikation</li> <li>HTTPS Setting</li> <li>Server URL</li> </ol> <p>Betriebsmodus Hier kann der Nutzer den Betriebsmodus der Anzeige (Standalone, Netzwerk, Server) \u00fcber ein Dropdown-Men\u00fc \u00e4ndern. Der Defaultmodus ist der Standalone, in dem sich das System auch befindet, wenn es auf Werkseinstellungen zur\u00fcckgesetzt wurde.</p> <p>Display-Modul Alle zur Verf\u00fcgung stehenden Display-Module sind hier aufgelistet und k\u00f6nnen ausgew\u00e4hlt werden. Per Default gibt es momentan nur das Waveshare 7.3\" 4 color und 9.7\" 2 color Modul, wobei dies nat\u00fcrlich nach Belieben erweitert werden kann.</p> <p>WiFi-Konfiguration Um die Low-Power Anzeige im Netzwerkmodus zu betreiben k\u00f6nnen hier die WLAN-Zugangsdaten (SSID und Passwort) eingegeben werden. Nach der Daten\u00fcbertragung an den Server versucht sich das Modul beim n\u00e4chsten Neustart mit den entsprechenden WLAN zu verbinden.</p> <p>Serielles Konsolen Log-Level Diese Einstellung ist haupt\u00e4chlich als Debugging-Ma\u00dfnahme oder f\u00fcr Entwickler hilfreich.  In der Browserkonsole wird die detaillierte Verfolgung von Ereignissen und Fehlern erm\u00f6glicht, die w\u00e4hrend der Laufzeit der Anwendung auftreten.  Durch die Anpassung des Log-Levels (s. Tabelle 9.2.1) kann die Tiefe und Art der Protokollierung bestimmt werden, um die Menge und Art der Informationen, die das System auf der seriellen Konsole ausgibt zu steuern. So k\u00f6nnen spezifische Probleme zu diagnostiziert, oder das allgemeine Systemverhalten zu \u00fcberwacht werden [JR_16].</p> <p>Tabelle 9.2.1 \u00dcbersicht \u00fcber die verscheidenen Log-Levels [JR_17]</p> Level Beschreibung Verwendung Fatal Kritische Fehler, die dazu f\u00fchren, dass das System nicht mehr weiterarbeiten kann. Wird verwendet, um schwerwiegende Probleme zu identifizieren, die sofortige Aufmerksamkeit erfordern. Error Schwerwiegende Fehler, die das System zwar nicht vollst\u00e4ndig stoppen, aber zu signifikanten Problemen f\u00fchren. Ideal zur Erkennung und Behebung von Fehlern, die die Funktionalit\u00e4t beeintr\u00e4chtigen. Warning Warnungen \u00fcber potenzielle Probleme, die zu Fehlern f\u00fchren k\u00f6nnten. Hilfreich, um m\u00f6gliche zuk\u00fcnftige Probleme zu erkennen und fr\u00fchzeitig zu beheben. Info Allgemeine Informationen \u00fcber den Systembetrieb. N\u00fctzlich f\u00fcr ein allgemeines Verst\u00e4ndnis des Systemverhaltens und zur \u00dcberwachung des normalen Betriebs. Debug Detaillierte Debugging-Informationen, die bei der Fehlersuche helfen. Wird haupts\u00e4chlich von Entwicklern genutzt, um tiefergehende Probleme zu diagnostizieren und den Code zu debuggen. Trace Sehr detaillierte Protokolle, die fast alle Aktivit\u00e4ten des Systems aufzeichnen. Wird verwendet, um tiefgreifende Einblicke in die Systemoperationen zu erhalten und komplexe Probleme zu analysieren. <p>HTTP-Authentifikation Wenn das System konfiguriert werden soll, nachdem es sich in den Werkseinstellungen befand, muss der Benutzer mit Zugangsdaten anmelden, um auf die Webseite zugreifen zu k\u00f6nnen. Diese Zugangsdaten k\u00f6nnen hier ge\u00e4ndert werden.</p> <p>HTTPS Settings Die HTTPS-Einstellungen erlauben es dem Nutzer, HTTPS-Verschl\u00fcsselung der Webseite zu aktivieren und eine externe Zertifikatsdatei hochzuladen. Diese kann einfach und kostenfrei \u00fcber beispielsweise den Dienst Let's Encrypt erstellt werden [JR_18]. </p> <p>Nachdem alle gew\u00fcnschten Einstellungen ausgew\u00e4hlt und gespeichert wurden, werden sie per HTTP POST an den Server gesendet, sodass die \u00c4nderungen nach einem Neustart des Systems in Kraft treten. </p>"},{"location":"Webentwicklung/#manahmen-zur-steigerung-der-benutzerfreundlichkeit","title":"Ma\u00dfnahmen zur Steigerung der Benutzerfreundlichkeit","text":"<p>Allgemein ist die Konfiguration des Displays sehr stark modulabh\u00e4ngig. Um trotzdem ausreichend Benutzerfreundlichkeit zu garantieren, werden beim Starten der Webseite gewisse Funktionen aufgerufen, um die Attribute des verbundenen Displays abzufragen. Die Serverkommunikation erfolgt kommunizieren mit dem Server \u00fcber asynchrone HTTP-Anfragen, um die notwendigen Informationen zu erhalten und die Benutzeroberfl\u00e4che entsprechend anzupassen.</p> <p>So werden beim Aufrufen der Webseite die Dimensionen des verbundenen Display-Moduls abgefragt und auf der Uploadseite angezeigt. Zus\u00e4tzlich wird der Benutzer auf der Settings-Page \u00fcber den eingestellten Display-Modus und die allgemeine Modulart informiert.</p> <p>Kann keine Verbindung zum Server aufgebaut werden, oder ist der Bildupload fehlgeschlagen, so wird der Benutzer informiert.</p>"},{"location":"Webentwicklung/#linux-webanwendung","title":"Linux Webanwendung","text":"<p>Mario Wegmann</p>"},{"location":"Webentwicklung/#verwendete-technologien","title":"Verwendete Technologien","text":"<p>Wie im Kapitel 3.9.1 Webtechnologien bereits erl\u00e4utert, ist es f\u00fcr die Entwicklung einer komplexeren Webanwendung sehr sinnvoll, ein Webframework einzusetzen.  Hierbei gibt es eine gro\u00dfe Auswahl an m\u00f6glichen Frameworks und auch serverseitigen Programmiersprachen. Da JavaScript bereits im Standalonemodus, wie auch im Netzwerk-Modus, verwendet wird, um die Interaktion mit dem Displaymodul zu realisieren, ist es naheliegend, auch auf dem Server JavaScript zu nutzen. Diese Entscheidung erm\u00f6glichte eine einheitliche Codebasis sowohl im Frontend als auch im Backend, was die Entwicklung effizienter und die Wartung der Anwendung einfacher macht und zuletzt auch das Erlernen neuer Programmiersprachen auf eine reduziert. Zudem wurde die M\u00f6glichkeit genutzt, TypeScript anstatt JavaScript zu verwenden, um die Vorteile zu nutzen, welche ebenso bereits im Kapitel 3.9.1 Webtechnologien erw\u00e4hnt wurden. </p> <p>F\u00fcr das Frontend wurde React ausgew\u00e4hlt. Durch React lassen sich Komponenten realisieren, welche modular wiederverwendet werden k\u00f6nnen. Dadurch wird es vermieden, doppelten Code zu verfassen und \u00c4nderungen an einer Komponente werden global in der gesamten Webanwendung widergespiegelt. </p> <p>Als Webframework wurde Next.js ausgew\u00e4hlt, da es React unter anderem um serverseitiges Rendering erweitert. Dar\u00fcber hinaus bietet Next.js eine nahtlose Integration von API-Routen und Middleware, was die Entwicklung von Full-Stack-Anwendungen erleichtert. </p> <p>F\u00fcr das Speichern der Daten wurde PostgreSQL als Datenbank ausgew\u00e4hlt. Hierbei wird Prisma ORM als Zwischenschicht eingesetzt, damit die Modelle der relationanlen Datenbank als Objekte mit statischen Typen generiert werden. </p> <p>F\u00fcr den Webserver wurden Linux und Docker verwendet. Das quelloffene Linux ist bekannt f\u00fcr seine Stabilit\u00e4t, Sicherheit und Performance, was es zu einer idealen Wahl f\u00fcr den Einsatz als Webserver macht. Docker erg\u00e4nzt diese Vorteile durch die Bereitstellung einer containerisierten Umgebung, die eine konsistente und isolierte Ausf\u00fchrung von Anwendungen erm\u00f6glicht. Dies erleichtert die Skalierung und Verwaltung der Anwendung erheblich und sorgt daf\u00fcr, dass sie in unterschiedlichen Umgebungen gleichbleibend funktioniert. Docker-Container bieten zudem eine einfache M\u00f6glichkeit, Abh\u00e4ngigkeiten zu verwalten und die Bereitstellung von Updates zu automatisieren. </p> <p>Die Kombination dieser Technologien erm\u00f6glicht effizient eine benutzerfreundliche, performante und wartbare Webanwendung zu entwickeln. </p> <p>Wie die Einzelkomponenten zusammenspielen, ist in  ersichtlich.</p> <p> Der Techstack der Webanwendung </p> <p>Der Code wurde gr\u00f6\u00dftenteils in VSCode verfasst und mit der Versionskontrolle git auf GitHub verwaltet. </p>"},{"location":"Webentwicklung/#aufbau-der-webanwendung","title":"Aufbau der Webanwendung","text":"<p>Datenbankstruktur</p> <p>In der PostgreSQL Datenbank gibt es zwei Tabellen, die erste Tabelle enth\u00e4lt alle Displaymodule, der Aufbau einer Displaymodul-Entit\u00e4t ist in  erkennbar. Hierbei wird als Primary Key die MAC-Adresse verwendet, da diese bei der Produktion vom Hersteller eindeutig vergeben wird, eignet sich diese sehr gut als Primary Key. Des Weiteren werden ein frei definierbarer Anzeigename, die Aufl\u00f6sung des verbauten ePaper Displays, der Zeitpunkt, wann sich das Displaymodul das letzte Mal mit dem Server verbunden hat und das aktuell festgelegte Asset hinterlegt.  In  ist die Asset-Entit\u00e4t aufgelistet, diese besteht aus einer zuf\u00e4llig generierten cuid f\u00fcr den Primary Key, einer Typenangabe, ob statisch oder dynamisch, einem frei definierbaren Anzeigename, der Dateipfad auf dem Server Dateisystem, dem HTML Code f\u00fcr das Erstellen des Assets, sofern es \u00fcber HTML generiert wird und die Anzeigedauer. Die PNGs werden lokal auf dem Dateisystem des Servers abgelegt, somit kann die Datenbank einerseits schlank bleiben und der Webserver kann die PNGs einfach ausliefern. </p> <p>Die meisten Eigenschaften wurden als optional deklariert, damit die Entit\u00e4ten auch schon erstellt werden k\u00f6nnen, auch wenn noch nicht alle Eigenschaften bekannt sind. </p>  Die Display-Entit\u00e4t  Key Type Eigenschaft mac_adr String MAC-Adresse, Primary Key friendly_name String Anzeigename, Optional width Int Breite des Displays height Int H\u00f6he des Displays last_seen DateTime Zuletzt gesehen, Optional currentAsset String Aktuell anzuzeigendes Asset, Optional currentAssetType String Typ des aktuell anzuzeigenden Assets, Optional  Die Asset-Entit\u00e4t  Key Type Eigenschaft id String Primary Key, cuid Algorithumus type Type Art des Assets, Optional, Kann \"STATIC\" oder \"DYNAMIC\" sein friendly_name String Anzeigename, Optional file_path String Pfad auf dem Dateisystem des Servers, Optional html String HTML Code zum generieren des PNGs, Optional valid_for Int Anzeigedauer des Assets, Optional <p>Backend</p> <p>F\u00fcr eine standardisierte Verwendung der Daten wurde eine REST-API-Schnittstelle umgesetzt. So k\u00f6nnen mit GET-Anfragen Daten angefragt, mit PUT-Anfragen Daten bearbeitet und mit DELETE-Anfragen Daten auch gel\u00f6scht werden. Sowohl das Frontend als auch die Displaymodule verwenden diese REST-API. </p> <p>Eine vollst\u00e4ndige \u00dcbersicht der m\u00f6glichen REST-API-Aufrufe ist in Tabelle  ersichtlich. Platzhalter in eckigen Klammern werden dabei dynamisch in der Anfrage ber\u00fccksichtigt. </p>  Die Unterst\u00fctzen REST-API Aufrufe der Webanwendung  URL Methode Body R\u00fcckgabe Zweck api/v1/assets GET - JSON Gibt alle vorhandenen Assets in JSON zur\u00fcck. api/v1/assets PUT HTML Form JSON Erstellt ein neues Asset. Falls im HTML Form ein Key <code>html</code> enthalten ist, wird der Inhalt als HTML interpretiert und ein PNG davon erzeugt und lokal abgespeichert. Falls im HTML Form eine PNG-Datei enthalten ist, so wird diese lokal abgespeichert. api/v1/assets/[ID] GET - JSON Gibt das Asset mit der \u00fcbergebenen ID als JSON zur\u00fcck. api/v1/assets/[ID] PUT HTML Form HTTP Status Aktualisiert die Daten des Assets mit der passenden ID, falls HTML mitgesendet wird, so wird das PNG neu genriert und lokal abgespeichert. api/v1/assets/[ID] DELETE - HTTP Status L\u00f6scht das Asset mit der \u00fcbergebenen ID. api/v1/displays GET - JSON Gibt alle vorhandenen Displaymodule in JSON zur\u00fcck. api/v1/displays/[MAC] GET - JSON Gibt das Displaymodule mit der passenden MAC-Adresse in JSON zur\u00fcck. api/v1/displays/[MAC] PUT HTML Form oder JSON HTTP Status Aktualisiert die Infos des Displaymoduls mit der MAC-Adresse oder setzt das zugewiesene Asset neu. api/v1/displays/[MAC] DELETE - HTTP Status L\u00f6scht das Displaymodul mit der MAC-Adresse aus der Datenbank. api/v1/displays/config/[MAC] GET - JSON Gibt als JSON zur\u00fcck, welches Asset gerade f\u00fcr das Displaymodul mit der MAC-Adresse zugewiesen ist und wie lange es angezeigt werden soll. api/v1/displays/register/[MAC] PUT JSON JSON Erstellt das Displaymodul mit der MAC-Adresse neu in der Datenbank und gibt das neu erstellte Displaymodul als JSON zur\u00fcck. <p>Frontend</p> <p>Im Frontend gibt es f\u00fcnf Unterseiten. Die Startseite enth\u00e4lt das Men\u00fc zu den anderen beiden Hauptunterseiten \u00bbDisplays\u00ab und \u00bbAssets\u00ab. In der Unterseite \u00bbDisplays\u00ab befindet sich eine Auflistung aller dem Server bekannten Displaymodulen. Ein Displaymodul registriert sich dabei beim Server selbst, da es im Servermodus die Register-URL aufruft und sich dem Server so bekannt macht. In  ist erkennbar, dass jedes Displaymodul seinem mit seinem Anzeigenamen und auch einer Vorschau des aktuell zugewiesenen Assets dargestellt wird. Ein Displaymodul kann in der \u00dcbersicht angeklickt werden, wodurch sich eine Detailansichtsseite \u00f6ffnet. In dieser Detailseite, welche  zeigt, k\u00f6nnen die Metadaten des Displays bearbeitet und gespeichert werden. Zus\u00e4tzlich werden alle Assets angezeigt, sobald ein Asset angeklickt wird, wird dieses als neues Asset dem Display zugewiesen. </p> <p> Die \u00dcbersichtsseite aller Displays </p> <p>\u00c4hnlich verh\u00e4lt es sich mit der zweiten Hauptunterseite \u00bbAssets\u00ab, die unter  erkennbar ist. Auch hier werden alle vorhandenen Assets aufgelistet und k\u00f6nnen ausgew\u00e4hlt werden, um eine Detailansicht, wie in  gezeigt, zu \u00f6ffnen und die Metadaten zu bearbeiten und das Asset zu l\u00f6schen. Im Gegensatz zu Displaymodulen k\u00f6nnen Assets h\u00e4ndisch angelegt werden, entweder kann daf\u00fcr eine PNG-Datei hochgeladen oder HTML-Code eingetragen werden, welcher abschlie\u00dfend wieder ein PNG produziert. Die Abbildungen  und  zeigen jeweils die beiden Vorg\u00e4nge. </p> <p> Eine \u00dcbersicht \u00fcber alle vorhanden Assets </p> <p> Die Detailansicht eines Displays </p> <p> Das Formular zum hochladen von bestehenden PNGs </p> <p> Das Formular zum erstellen von PNGs aus HTML Code </p>"},{"location":"Webentwicklung/#testumgebung","title":"Testumgebung","text":"<p>Als Testumgebung wurde beim Rechenzentrum (RZ) eine Linux-VM beantragt. Die vom Rechenzentrum erhaltene VM hat die in  genannten Eigenschaften. </p>  Die Systemeigenschaften der vom RZ erhaltenen VM.   Eigenschaft Wert Betriebssysrtem Debian 12 (bookworm) Prozessor-Cores 2x 2,9 GHz Arbeitsspeicher 2 GB Hauptspeicher 30 GB Hostname lprd <p>Zudem wurde vom RZ auch gleich ein DNS-Eintrag gesetzt und die Domain lprd.informatik.tha.de verweist auf diese VM.  Neben dem Betriebssystem liefert die VM auch gleich noch eine Firewall standardm\u00e4\u00dfig mit, hier setzt das RZ die Variante arno-iptables ein [MW_01]. </p>"},{"location":"Webentwicklung/#ersteinrichtung","title":"Ersteinrichtung","text":"<p>Der administrative Zugriff auf die VM erfolgt \u00fcber SSH.  Nach der \u00dcbergabe wurden zuerst die Standardzugangsdaten der VM durch neue Zugangsdaten ersetzt und die SSH-Anmeldung des Root-Benutzers gesperrt. Ebenso wurden f\u00fcr die Personen, welche Zugriff auf die VM ben\u00f6tigen, jeweils neue Benutzer angelegt. Dabei wurden als Benutzerauthentifizierung SSH-Keys als Authentifizierungsmethode verwendet.  Anschlie\u00dfend wurden die installierten Pakete mit dem Advanced Packaging Tool (apt) Paketmanager auf die neueste Version aktualisiert. </p>"},{"location":"Webentwicklung/#einrichtung-der-webanwendung","title":"Einrichtung der Webanwendung","text":"<p>Nach der erfolgreichen Grundinstallation kann mit dem Aufsetzen der Testumgebung der Webanwendung begonnen werden.  Daf\u00fcr werden zuerst die Pakete git und docker \u00fcber den apt Paketmanager installiert. </p> <p>Die PostgreSQL-Datenbank wurde in einem Docker Container eingerichtet. Anschlie\u00dfend konnte das GitHub-Projekt lokal auf dem Server geklont werden. Vor dem ersten Start der Webanwendung kann mit Prisma ORM die Datenbank konfiguriert und initialisiert werden, Prisma ORM verwendet dabei die Informationen, die in der schema.prisma Datei angegeben sind. Danach l\u00e4sst sich mit einem npm Befehl ein Development Server starten. </p> <p>\u00c4nderungen am Code werden nach dem Speichern der Quelldatei sofort in den laufenden Development Server eingepflegt, was eine schnelle und effiziente Entwicklung erm\u00f6glicht. </p>"},{"location":"Webentwicklung/#datensicherung-und-monitoring","title":"Datensicherung und Monitoring","text":"<p>Der Zweck der VM ist prim\u00e4r die Entwicklung der Webanwendung und somit nicht der produktive Einsatz. Da der Quellcode der Webanwendung \u00fcber Git verwaltet wird und die Daten innerhalb der Datenbank reine Testdaten sind, wurde auf das Einrichten einer Datensicherung verzichtet. </p> <p>F\u00fcr eine produktive Umgebung ist eine sorgf\u00e4ltig \u00fcberlegte Backupstrategie unabdingbar. Hierbei sollte genaustens \u00fcberlegt werden, wie der Backupprozess implementiert und automatisiert wird und wie erstellte Backups auf Konsistenz und Wiederherstellbarkeit \u00fcberpr\u00fcft werden k\u00f6nnen. Auch der Speicherort von Backups sollte bedacht werden und der 3-2-1 Regel folgen. </p> <p>Auch wurde keine Monitoringl\u00f6sung verwendet, um den Zustand der VM und der darauf laufenden Dienste zu \u00fcberwachen, auch hier ist es sinnvoll, ein Konzept f\u00fcr die Produktivumgebung auszuarbeiten.</p>"},{"location":"about/","title":"\u00dcber den LPRD Projekt","text":"<p>Der Low Power Room Display (LPRD) ist ein Projekt, das sich mit der Entwicklung eines energieeffizienten Raumdisplays besch\u00e4ftigt. Das Projekt wird von Studierenden der Technische Hochschule Augsburg (THA) durchgef\u00fchrt. Das Ziel des Projekts ist es, ein Raumdisplay zu entwickeln, das den aktuellen Raumbelegungsstatus und verschiedene Umgebungsparameter anzeigt. Das Raumdisplay soll \u00fcber eine Webanwendung konfiguriert werden k\u00f6nnen und \u00fcber eine Schnittstelle verf\u00fcgen, \u00fcber die es mit anderen Ger\u00e4ten kommunizieren kann.</p>"},{"location":"about/#projektmitwirkende","title":"Projektmitwirkende","text":"<ul> <li>Mario Wegmann (Projektleiter)</li> <li>Ahmet Emirhan G\u00f6kta\u015f (Softwareleiter)</li> <li>Benjamin Klaric (Hardwareleiter)</li> <li>Jannis Gr\u00f6ger</li> <li>Julia Reuter</li> <li>Stasa Lukic</li> </ul>"},{"location":"about/#lizenz","title":"Lizenz","text":"<p>Dieses Projekt ist unter der Apache 2.0 Lizenz lizenziert. Weitere Informationen finden Sie in der Lizenzdatei.</p>"}]}